
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.1.1
 * Query Engine version: 6a3747c37ff169c90047725a05a6ef02e32ac97e
 */
Prisma.prismaVersion = {
  client: "5.1.1",
  engine: "6a3747c37ff169c90047725a05a6ef02e32ac97e"
}


const runtimeDescription = (() => {
  // https://edge-runtime.vercel.app/features/available-apis#addressing-the-runtime
  if ("EdgeRuntime" in globalThis && typeof globalThis.EdgeRuntime === "string") {
    return "under the Vercel Edge Runtime";
  }
  // Deno
  if ("Deno" in globalThis && typeof globalThis.Deno === "object") {
    return "under the Deno runtime";
  }
  // Default to assuming browser
  return "in the browser";
})();


Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TbFornecedoresScalarFieldEnum = {
  idfor: 'idfor',
  nomefor: 'nomefor',
  fisjur: 'fisjur',
  cnpjcpf: 'cnpjcpf',
  telefone: 'telefone',
  cep: 'cep',
  cidade: 'cidade',
  rua: 'rua',
  bairro: 'bairro',
  numero: 'numero',
  complemento: 'complemento',
  email: 'email'
};

exports.Prisma.TbProdutosScalarFieldEnum = {
  idproduto: 'idproduto',
  nomeprod: 'nomeprod',
  idtipprod: 'idtipprod',
  idunidade: 'idunidade',
  quantminima: 'quantminima'
};

exports.Prisma.TbEstoqueScalarFieldEnum = {
  idestoque: 'idestoque',
  idproduto: 'idproduto',
  idlocal: 'idlocal',
  quantidade: 'quantidade',
  dtinc: 'dtinc'
};

exports.Prisma.TbLocaisScalarFieldEnum = {
  idlocal: 'idlocal',
  nomelocal: 'nomelocal'
};

exports.Prisma.TbMovimentosScalarFieldEnum = {
  idmovimento: 'idmovimento',
  tipmov: 'tipmov',
  idfor: 'idfor',
  idusuario_alteracao: 'idusuario_alteracao',
  dtinc: 'dtinc'
};

exports.Prisma.TbUsuariosScalarFieldEnum = {
  idusuario: 'idusuario',
  usu_login: 'usu_login',
  nome: 'nome',
  senha: 'senha',
  dtcriacao: 'dtcriacao',
  usu_admin: 'usu_admin'
};

exports.Prisma.TbMovitensScalarFieldEnum = {
  idmovimento: 'idmovimento',
  seqitem: 'seqitem',
  idproduto: 'idproduto',
  idlocal: 'idlocal',
  dtinc: 'dtinc',
  quantidade: 'quantidade'
};

exports.Prisma.TbNfScalarFieldEnum = {
  idnf: 'idnf',
  numnf: 'numnf',
  idmovimento: 'idmovimento',
  serienf: 'serienf',
  idfor: 'idfor',
  idusuario_inclusao: 'idusuario_inclusao',
  dtemissao: 'dtemissao',
  vlrtotal: 'vlrtotal'
};

exports.Prisma.TbNfitensScalarFieldEnum = {
  idnf: 'idnf',
  idmovimento: 'idmovimento',
  seqitem: 'seqitem',
  idproduto: 'idproduto',
  vlrunitario: 'vlrunitario',
  quantidade: 'quantidade',
  vlrtotitem: 'vlrtotitem'
};

exports.Prisma.TbProdcomposicaoScalarFieldEnum = {
  idcomp: 'idcomp',
  idproduto: 'idproduto',
  idprodutocomp: 'idprodutocomp',
  quantidade: 'quantidade'
};

exports.Prisma.TbTiposprodutosScalarFieldEnum = {
  idtipprod: 'idtipprod',
  nometipprod: 'nometipprod'
};

exports.Prisma.TbUnidademedidaScalarFieldEnum = {
  idunidade: 'idunidade',
  siglaun: 'siglaun',
  nomeunidade: 'nomeunidade'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  tbFornecedores: 'tbFornecedores',
  tbProdutos: 'tbProdutos',
  tbEstoque: 'tbEstoque',
  tbLocais: 'tbLocais',
  tbMovimentos: 'tbMovimentos',
  tbUsuarios: 'tbUsuarios',
  tbMovitens: 'tbMovitens',
  tbNf: 'tbNf',
  tbNfitens: 'tbNfitens',
  tbProdcomposicao: 'tbProdcomposicao',
  tbTiposprodutos: 'tbTiposprodutos',
  tbUnidademedida: 'tbUnidademedida'
};

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
