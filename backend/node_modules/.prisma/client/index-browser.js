
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.2.0
 * Query Engine version: 2804dc98259d2ea960602aca6b8e7fdc03c1758f
 */
Prisma.prismaVersion = {
  client: "5.2.0",
  engine: "2804dc98259d2ea960602aca6b8e7fdc03c1758f"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TbestoqueScalarFieldEnum = {
  idestoque: 'idestoque',
  idproduto: 'idproduto',
  idlocal: 'idlocal',
  quantidade: 'quantidade',
  dtinc: 'dtinc'
};

exports.Prisma.TbfornecedoresScalarFieldEnum = {
  idfor: 'idfor',
  nomefor: 'nomefor',
  fisjur: 'fisjur',
  cnpjcpf: 'cnpjcpf',
  telefone: 'telefone',
  cep: 'cep',
  cidade: 'cidade',
  rua: 'rua',
  bairro: 'bairro',
  numero: 'numero',
  complemento: 'complemento',
  email: 'email'
};

exports.Prisma.TblocaisScalarFieldEnum = {
  idlocal: 'idlocal',
  nomelocal: 'nomelocal'
};

exports.Prisma.TbmovimentosScalarFieldEnum = {
  idmovimento: 'idmovimento',
  tipmov: 'tipmov',
  idfor: 'idfor',
  idusuario_alteracao: 'idusuario_alteracao',
  dtinc: 'dtinc'
};

exports.Prisma.TbmovitensScalarFieldEnum = {
  idmovimento: 'idmovimento',
  seqitem: 'seqitem',
  idproduto: 'idproduto',
  idlocal: 'idlocal',
  dtinc: 'dtinc',
  quantidade: 'quantidade'
};

exports.Prisma.TbnfScalarFieldEnum = {
  idnf: 'idnf',
  numnf: 'numnf',
  idmovimento: 'idmovimento',
  serienf: 'serienf',
  idfor: 'idfor',
  idusuario_inclusao: 'idusuario_inclusao',
  dtemissao: 'dtemissao',
  vlrtotal: 'vlrtotal',
  observacao: 'observacao'
};

exports.Prisma.TbnfitensScalarFieldEnum = {
  idnf: 'idnf',
  idmovimento: 'idmovimento',
  seqitem: 'seqitem',
  idproduto: 'idproduto',
  vlrunitario: 'vlrunitario',
  quantidade: 'quantidade',
  vlrtotitem: 'vlrtotitem'
};

exports.Prisma.TbprodcomposicaoScalarFieldEnum = {
  idcomp: 'idcomp',
  idproduto: 'idproduto',
  idprodutocomp: 'idprodutocomp',
  quantidade: 'quantidade'
};

exports.Prisma.TbprodutosScalarFieldEnum = {
  idproduto: 'idproduto',
  nomeprod: 'nomeprod',
  idtipprod: 'idtipprod',
  idunidade: 'idunidade',
  quantminima: 'quantminima'
};

exports.Prisma.TbtiposprodutosScalarFieldEnum = {
  idtipprod: 'idtipprod',
  nometipprod: 'nometipprod'
};

exports.Prisma.TbunidademedidaScalarFieldEnum = {
  idunidade: 'idunidade',
  siglaun: 'siglaun',
  nomeunidade: 'nomeunidade'
};

exports.Prisma.TbusuariosScalarFieldEnum = {
  idusuario: 'idusuario',
  usu_login: 'usu_login',
  nome: 'nome',
  senha: 'senha',
  dtcriacao: 'dtcriacao',
  usu_admin: 'usu_admin'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  tbestoque: 'tbestoque',
  tbfornecedores: 'tbfornecedores',
  tblocais: 'tblocais',
  tbmovimentos: 'tbmovimentos',
  tbmovitens: 'tbmovitens',
  tbnf: 'tbnf',
  tbnfitens: 'tbnfitens',
  tbprodcomposicao: 'tbprodcomposicao',
  tbprodutos: 'tbprodutos',
  tbtiposprodutos: 'tbtiposprodutos',
  tbunidademedida: 'tbunidademedida',
  tbusuarios: 'tbusuarios'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
