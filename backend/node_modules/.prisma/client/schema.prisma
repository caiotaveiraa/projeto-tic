generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tbFornecedores {
  idfor        Int            @id(map: "pk_tbfornecedores_idfor") @default(autoincrement())
  nomefor      String?        @db.VarChar(80)
  fisjur       String?        @db.VarChar(1)
  cnpjcpf      String?        @unique(map: "uk_tbfornecedores_cnpjcpf") @db.VarChar(20)
  telefone     String?        @db.VarChar(20)
  cep          String?        @db.VarChar(10)
  cidade       String?        @db.VarChar(40)
  rua          String?        @db.VarChar(60)
  bairro       String?        @db.VarChar(20)
  numero       Int?
  complemento  String?        @db.VarChar(20)
  email        String?        @unique(map: "uk_tbfornecedores_email") @db.VarChar(60)
  tbMovimentos tbMovimentos[]
  tbNf         tbNf[]
}

model tbProdutos {
  idproduto                                                   Int                @id(map: "pk_tbprodutos_idproduto") @default(autoincrement())
  nomeprod                                                    String?            @db.VarChar(60)
  idtipprod                                                   Int?
  idunidade                                                   Int?
  quantminima                                                 Int?
  tbEstoque                                                   tbEstoque[]
  tbMovitens                                                  tbMovitens[]
  tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos     tbProdcomposicao[] @relation("tbProdcomposicao_idprodutoTotbProdutos")
  tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos tbProdcomposicao[] @relation("tbProdcomposicao_idprodutocompTotbProdutos")
  tbTiposProdutos                                             tbTiposprodutos?   @relation(fields: [idtipprod], references: [idtipprod], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbprodutos_idtipprod")
  tbUnidadeMedida                                             tbUnidademedida?   @relation(fields: [idunidade], references: [idunidade], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbprodutos_idunidade")
}

model tbEstoque {
  idestoque  Int        @default(autoincrement())
  idproduto  Int
  idlocal    Int?
  quantidade Decimal?   @db.Decimal
  dtinc      DateTime?  @db.Date
  tbLocais   tbLocais?  @relation(fields: [idlocal], references: [idlocal], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbestoque_idlocal")
  tbProdutos tbProdutos @relation(fields: [idproduto], references: [idproduto], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbestoque_idproduto")

  @@id([idestoque, idproduto], map: "pk_tbestoque_idestoque_idmovimento_seqitem")
}

model tbLocais {
  idlocal    Int          @id(map: "pk_tblocais_idlocal") @default(autoincrement())
  nomelocal  String?      @db.VarChar(40)
  tbEstoque  tbEstoque[]
  tbMovitens tbMovitens[]
}

model tbMovimentos {
  idmovimento         Int             @id(map: "pk_tbmovimentos_idmovimento") @default(autoincrement())
  tipmov              String?         @db.VarChar(2)
  idfor               Int?
  idusuario_alteracao Int?
  dtinc               DateTime?       @db.Date
  tbFornecedores      tbFornecedores? @relation(fields: [idfor], references: [idfor], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbmovimentos_idfor")
  tbUsuarios          tbUsuarios?     @relation(fields: [idusuario_alteracao], references: [idusuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbmovimentos_idusuario")
  tbMovitens          tbMovitens[]
  tbNf                tbNf?
}

model tbUsuarios {
  idusuario    Int            @id(map: "pk_tbusuarios_idusuario") @default(autoincrement())
  usu_login    String?        @unique(map: "uk_tbusuarios_usu_login") @db.VarChar(15)
  nome         String?        @db.VarChar(15)
  senha        String?        @db.VarChar(20)
  dtcriacao    DateTime?      @db.Date
  usu_admin    Boolean?
  tbMovimentos tbMovimentos[]
  tbNf         tbNf[]
}

model tbMovitens {
  idmovimento  Int
  seqitem      Int          @default(autoincrement())
  idproduto    Int
  idlocal      Int?
  dtinc        DateTime?    @db.Date
  quantidade   Decimal?     @db.Decimal
  tbLocais     tbLocais?    @relation(fields: [idlocal], references: [idlocal], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbmovitens_idlocal")
  tbMovimentos tbMovimentos @relation(fields: [idmovimento], references: [idmovimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbmovitens_idmovimento")
  tbProdutos   tbProdutos   @relation(fields: [idproduto], references: [idproduto], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbmovitens_idproduto")
  tbNfitens    tbNfitens[]

  @@id([idmovimento, seqitem, idproduto], map: "pk_tbmovitens_idmovimento_seqitem_idproduto")
}

model tbNf {
  idnf               Int             @id(map: "pk_tbnf_idnf") @default(autoincrement())
  numnf              Int?            @unique(map: "uk_tbnf_numnf")
  idmovimento        Int?            @unique(map: "uk_tbnf_idmovimento")
  serienf            Int?
  idfor              Int?
  idusuario_inclusao Int?
  dtemissao          DateTime?       @db.Date
  vlrtotal           Decimal?        @db.Decimal
  tbMovimentos       tbMovimentos?   @relation(fields: [idmovimento], references: [idmovimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbmovimentos_idmovimento")
  tbFornecedores     tbFornecedores? @relation(fields: [idfor], references: [idfor], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbnf_idfor")
  tbUsuarios         tbUsuarios?     @relation(fields: [idusuario_inclusao], references: [idusuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbnf_idusuario")
  tbNfitens          tbNfitens[]
}

model tbNfitens {
  idnf        Int
  idmovimento Int?
  seqitem     Int
  idproduto   Int
  vlrunitario Decimal?    @db.Decimal
  quantidade  Decimal?    @db.Decimal
  vlrtotitem  Decimal?    @db.Decimal
  tbMovitens  tbMovitens? @relation(fields: [idmovimento, seqitem, idproduto], references: [idmovimento, seqitem, idproduto], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbnfitens_idmovimento_seqitem_idproduto")
  tbNf        tbNf        @relation(fields: [idnf], references: [idnf], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbnfitens_idnf")

  @@id([idnf, seqitem, idproduto], map: "pk_tbnfitens_idnf_seqitem_idprodut")
}

model tbProdcomposicao {
  idcomp                                                Int        @default(autoincrement())
  idproduto                                             Int
  idprodutocomp                                         Int
  quantidade                                            Decimal?   @db.Decimal
  tbProdutos_tbProdcomposicao_idprodutoTotbProdutos     tbProdutos @relation("tbProdcomposicao_idprodutoTotbProdutos", fields: [idproduto], references: [idproduto], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbcomposicao_idproduto")
  tbProdutos_tbProdcomposicao_idprodutocompTotbProdutos tbProdutos @relation("tbProdcomposicao_idprodutocompTotbProdutos", fields: [idprodutocomp], references: [idproduto], onDelete: NoAction, onUpdate: NoAction, map: "fk_tbcomposicao_idprodutocomp")

  @@id([idcomp, idproduto, idprodutocomp], map: "pk_tbcomp_idcomp_idprod_idprodcomp")
}

model tbTiposprodutos {
  idtipprod   Int          @id(map: "pk_tbtiposprodutos") @default(autoincrement())
  nometipprod String?      @db.VarChar(40)
  tbProdutos  tbProdutos[]
}

model tbUnidademedida {
  idunidade   Int          @id(map: "pk_tbunidademedida_idunidade") @default(autoincrement())
  siglaun     String?      @unique(map: "uk_tbunidademedida_siglaun") @db.VarChar(5)
  nomeunidade String?      @db.VarChar(30)
  tbProdutos  tbProdutos[]
}
