
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model tbFornecedores
 * 
 */
export type tbFornecedores = $Result.DefaultSelection<Prisma.$tbFornecedoresPayload>
/**
 * Model tbProdutos
 * 
 */
export type tbProdutos = $Result.DefaultSelection<Prisma.$tbProdutosPayload>
/**
 * Model tbEstoque
 * 
 */
export type tbEstoque = $Result.DefaultSelection<Prisma.$tbEstoquePayload>
/**
 * Model tbLocais
 * 
 */
export type tbLocais = $Result.DefaultSelection<Prisma.$tbLocaisPayload>
/**
 * Model tbMovimentos
 * 
 */
export type tbMovimentos = $Result.DefaultSelection<Prisma.$tbMovimentosPayload>
/**
 * Model tbUsuarios
 * 
 */
export type tbUsuarios = $Result.DefaultSelection<Prisma.$tbUsuariosPayload>
/**
 * Model tbMovitens
 * 
 */
export type tbMovitens = $Result.DefaultSelection<Prisma.$tbMovitensPayload>
/**
 * Model tbNf
 * 
 */
export type tbNf = $Result.DefaultSelection<Prisma.$tbNfPayload>
/**
 * Model tbNfitens
 * 
 */
export type tbNfitens = $Result.DefaultSelection<Prisma.$tbNfitensPayload>
/**
 * Model tbProdcomposicao
 * 
 */
export type tbProdcomposicao = $Result.DefaultSelection<Prisma.$tbProdcomposicaoPayload>
/**
 * Model tbTiposprodutos
 * 
 */
export type tbTiposprodutos = $Result.DefaultSelection<Prisma.$tbTiposprodutosPayload>
/**
 * Model tbUnidademedida
 * 
 */
export type tbUnidademedida = $Result.DefaultSelection<Prisma.$tbUnidademedidaPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more TbFornecedores
 * const tbFornecedores = await prisma.tbFornecedores.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more TbFornecedores
   * const tbFornecedores = await prisma.tbFornecedores.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.tbFornecedores`: Exposes CRUD operations for the **tbFornecedores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbFornecedores
    * const tbFornecedores = await prisma.tbFornecedores.findMany()
    * ```
    */
  get tbFornecedores(): Prisma.tbFornecedoresDelegate<ExtArgs>;

  /**
   * `prisma.tbProdutos`: Exposes CRUD operations for the **tbProdutos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbProdutos
    * const tbProdutos = await prisma.tbProdutos.findMany()
    * ```
    */
  get tbProdutos(): Prisma.tbProdutosDelegate<ExtArgs>;

  /**
   * `prisma.tbEstoque`: Exposes CRUD operations for the **tbEstoque** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbEstoques
    * const tbEstoques = await prisma.tbEstoque.findMany()
    * ```
    */
  get tbEstoque(): Prisma.tbEstoqueDelegate<ExtArgs>;

  /**
   * `prisma.tbLocais`: Exposes CRUD operations for the **tbLocais** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbLocais
    * const tbLocais = await prisma.tbLocais.findMany()
    * ```
    */
  get tbLocais(): Prisma.tbLocaisDelegate<ExtArgs>;

  /**
   * `prisma.tbMovimentos`: Exposes CRUD operations for the **tbMovimentos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbMovimentos
    * const tbMovimentos = await prisma.tbMovimentos.findMany()
    * ```
    */
  get tbMovimentos(): Prisma.tbMovimentosDelegate<ExtArgs>;

  /**
   * `prisma.tbUsuarios`: Exposes CRUD operations for the **tbUsuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbUsuarios
    * const tbUsuarios = await prisma.tbUsuarios.findMany()
    * ```
    */
  get tbUsuarios(): Prisma.tbUsuariosDelegate<ExtArgs>;

  /**
   * `prisma.tbMovitens`: Exposes CRUD operations for the **tbMovitens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbMovitens
    * const tbMovitens = await prisma.tbMovitens.findMany()
    * ```
    */
  get tbMovitens(): Prisma.tbMovitensDelegate<ExtArgs>;

  /**
   * `prisma.tbNf`: Exposes CRUD operations for the **tbNf** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbNfs
    * const tbNfs = await prisma.tbNf.findMany()
    * ```
    */
  get tbNf(): Prisma.tbNfDelegate<ExtArgs>;

  /**
   * `prisma.tbNfitens`: Exposes CRUD operations for the **tbNfitens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbNfitens
    * const tbNfitens = await prisma.tbNfitens.findMany()
    * ```
    */
  get tbNfitens(): Prisma.tbNfitensDelegate<ExtArgs>;

  /**
   * `prisma.tbProdcomposicao`: Exposes CRUD operations for the **tbProdcomposicao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbProdcomposicaos
    * const tbProdcomposicaos = await prisma.tbProdcomposicao.findMany()
    * ```
    */
  get tbProdcomposicao(): Prisma.tbProdcomposicaoDelegate<ExtArgs>;

  /**
   * `prisma.tbTiposprodutos`: Exposes CRUD operations for the **tbTiposprodutos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbTiposprodutos
    * const tbTiposprodutos = await prisma.tbTiposprodutos.findMany()
    * ```
    */
  get tbTiposprodutos(): Prisma.tbTiposprodutosDelegate<ExtArgs>;

  /**
   * `prisma.tbUnidademedida`: Exposes CRUD operations for the **tbUnidademedida** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TbUnidademedidas
    * const tbUnidademedidas = await prisma.tbUnidademedida.findMany()
    * ```
    */
  get tbUnidademedida(): Prisma.tbUnidademedidaDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.2.0
   * Query Engine version: 6a3747c37ff169c90047725a05a6ef02e32ac97e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    tbFornecedores: 'tbFornecedores',
    tbProdutos: 'tbProdutos',
    tbEstoque: 'tbEstoque',
    tbLocais: 'tbLocais',
    tbMovimentos: 'tbMovimentos',
    tbUsuarios: 'tbUsuarios',
    tbMovitens: 'tbMovitens',
    tbNf: 'tbNf',
    tbNfitens: 'tbNfitens',
    tbProdcomposicao: 'tbProdcomposicao',
    tbTiposprodutos: 'tbTiposprodutos',
    tbUnidademedida: 'tbUnidademedida'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.Args}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'tbFornecedores' | 'tbProdutos' | 'tbEstoque' | 'tbLocais' | 'tbMovimentos' | 'tbUsuarios' | 'tbMovitens' | 'tbNf' | 'tbNfitens' | 'tbProdcomposicao' | 'tbTiposprodutos' | 'tbUnidademedida'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      tbFornecedores: {
        payload: Prisma.$tbFornecedoresPayload<ExtArgs>
        fields: Prisma.tbFornecedoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbFornecedoresFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbFornecedoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbFornecedoresFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbFornecedoresPayload>
          }
          findFirst: {
            args: Prisma.tbFornecedoresFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbFornecedoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbFornecedoresFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbFornecedoresPayload>
          }
          findMany: {
            args: Prisma.tbFornecedoresFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbFornecedoresPayload>[]
          }
          create: {
            args: Prisma.tbFornecedoresCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbFornecedoresPayload>
          }
          createMany: {
            args: Prisma.tbFornecedoresCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbFornecedoresDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbFornecedoresPayload>
          }
          update: {
            args: Prisma.tbFornecedoresUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbFornecedoresPayload>
          }
          deleteMany: {
            args: Prisma.tbFornecedoresDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbFornecedoresUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbFornecedoresUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbFornecedoresPayload>
          }
          aggregate: {
            args: Prisma.TbFornecedoresAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbFornecedores>
          }
          groupBy: {
            args: Prisma.tbFornecedoresGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbFornecedoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbFornecedoresCountArgs<ExtArgs>,
            result: $Utils.Optional<TbFornecedoresCountAggregateOutputType> | number
          }
        }
      }
      tbProdutos: {
        payload: Prisma.$tbProdutosPayload<ExtArgs>
        fields: Prisma.tbProdutosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbProdutosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdutosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbProdutosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdutosPayload>
          }
          findFirst: {
            args: Prisma.tbProdutosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdutosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbProdutosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdutosPayload>
          }
          findMany: {
            args: Prisma.tbProdutosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdutosPayload>[]
          }
          create: {
            args: Prisma.tbProdutosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdutosPayload>
          }
          createMany: {
            args: Prisma.tbProdutosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbProdutosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdutosPayload>
          }
          update: {
            args: Prisma.tbProdutosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdutosPayload>
          }
          deleteMany: {
            args: Prisma.tbProdutosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbProdutosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbProdutosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdutosPayload>
          }
          aggregate: {
            args: Prisma.TbProdutosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbProdutos>
          }
          groupBy: {
            args: Prisma.tbProdutosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbProdutosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbProdutosCountArgs<ExtArgs>,
            result: $Utils.Optional<TbProdutosCountAggregateOutputType> | number
          }
        }
      }
      tbEstoque: {
        payload: Prisma.$tbEstoquePayload<ExtArgs>
        fields: Prisma.tbEstoqueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbEstoqueFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbEstoquePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbEstoqueFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbEstoquePayload>
          }
          findFirst: {
            args: Prisma.tbEstoqueFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbEstoquePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbEstoqueFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbEstoquePayload>
          }
          findMany: {
            args: Prisma.tbEstoqueFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbEstoquePayload>[]
          }
          create: {
            args: Prisma.tbEstoqueCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbEstoquePayload>
          }
          createMany: {
            args: Prisma.tbEstoqueCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbEstoqueDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbEstoquePayload>
          }
          update: {
            args: Prisma.tbEstoqueUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbEstoquePayload>
          }
          deleteMany: {
            args: Prisma.tbEstoqueDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbEstoqueUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbEstoqueUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbEstoquePayload>
          }
          aggregate: {
            args: Prisma.TbEstoqueAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbEstoque>
          }
          groupBy: {
            args: Prisma.tbEstoqueGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbEstoqueGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbEstoqueCountArgs<ExtArgs>,
            result: $Utils.Optional<TbEstoqueCountAggregateOutputType> | number
          }
        }
      }
      tbLocais: {
        payload: Prisma.$tbLocaisPayload<ExtArgs>
        fields: Prisma.tbLocaisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbLocaisFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbLocaisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbLocaisFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbLocaisPayload>
          }
          findFirst: {
            args: Prisma.tbLocaisFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbLocaisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbLocaisFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbLocaisPayload>
          }
          findMany: {
            args: Prisma.tbLocaisFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbLocaisPayload>[]
          }
          create: {
            args: Prisma.tbLocaisCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbLocaisPayload>
          }
          createMany: {
            args: Prisma.tbLocaisCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbLocaisDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbLocaisPayload>
          }
          update: {
            args: Prisma.tbLocaisUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbLocaisPayload>
          }
          deleteMany: {
            args: Prisma.tbLocaisDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbLocaisUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbLocaisUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbLocaisPayload>
          }
          aggregate: {
            args: Prisma.TbLocaisAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbLocais>
          }
          groupBy: {
            args: Prisma.tbLocaisGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbLocaisGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbLocaisCountArgs<ExtArgs>,
            result: $Utils.Optional<TbLocaisCountAggregateOutputType> | number
          }
        }
      }
      tbMovimentos: {
        payload: Prisma.$tbMovimentosPayload<ExtArgs>
        fields: Prisma.tbMovimentosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbMovimentosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovimentosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbMovimentosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovimentosPayload>
          }
          findFirst: {
            args: Prisma.tbMovimentosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovimentosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbMovimentosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovimentosPayload>
          }
          findMany: {
            args: Prisma.tbMovimentosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovimentosPayload>[]
          }
          create: {
            args: Prisma.tbMovimentosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovimentosPayload>
          }
          createMany: {
            args: Prisma.tbMovimentosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbMovimentosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovimentosPayload>
          }
          update: {
            args: Prisma.tbMovimentosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovimentosPayload>
          }
          deleteMany: {
            args: Prisma.tbMovimentosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbMovimentosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbMovimentosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovimentosPayload>
          }
          aggregate: {
            args: Prisma.TbMovimentosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbMovimentos>
          }
          groupBy: {
            args: Prisma.tbMovimentosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbMovimentosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbMovimentosCountArgs<ExtArgs>,
            result: $Utils.Optional<TbMovimentosCountAggregateOutputType> | number
          }
        }
      }
      tbUsuarios: {
        payload: Prisma.$tbUsuariosPayload<ExtArgs>
        fields: Prisma.tbUsuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbUsuariosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUsuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbUsuariosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUsuariosPayload>
          }
          findFirst: {
            args: Prisma.tbUsuariosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUsuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbUsuariosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUsuariosPayload>
          }
          findMany: {
            args: Prisma.tbUsuariosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUsuariosPayload>[]
          }
          create: {
            args: Prisma.tbUsuariosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUsuariosPayload>
          }
          createMany: {
            args: Prisma.tbUsuariosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbUsuariosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUsuariosPayload>
          }
          update: {
            args: Prisma.tbUsuariosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUsuariosPayload>
          }
          deleteMany: {
            args: Prisma.tbUsuariosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbUsuariosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbUsuariosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUsuariosPayload>
          }
          aggregate: {
            args: Prisma.TbUsuariosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbUsuarios>
          }
          groupBy: {
            args: Prisma.tbUsuariosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbUsuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbUsuariosCountArgs<ExtArgs>,
            result: $Utils.Optional<TbUsuariosCountAggregateOutputType> | number
          }
        }
      }
      tbMovitens: {
        payload: Prisma.$tbMovitensPayload<ExtArgs>
        fields: Prisma.tbMovitensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbMovitensFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovitensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbMovitensFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovitensPayload>
          }
          findFirst: {
            args: Prisma.tbMovitensFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovitensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbMovitensFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovitensPayload>
          }
          findMany: {
            args: Prisma.tbMovitensFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovitensPayload>[]
          }
          create: {
            args: Prisma.tbMovitensCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovitensPayload>
          }
          createMany: {
            args: Prisma.tbMovitensCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbMovitensDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovitensPayload>
          }
          update: {
            args: Prisma.tbMovitensUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovitensPayload>
          }
          deleteMany: {
            args: Prisma.tbMovitensDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbMovitensUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbMovitensUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbMovitensPayload>
          }
          aggregate: {
            args: Prisma.TbMovitensAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbMovitens>
          }
          groupBy: {
            args: Prisma.tbMovitensGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbMovitensGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbMovitensCountArgs<ExtArgs>,
            result: $Utils.Optional<TbMovitensCountAggregateOutputType> | number
          }
        }
      }
      tbNf: {
        payload: Prisma.$tbNfPayload<ExtArgs>
        fields: Prisma.tbNfFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbNfFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbNfFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfPayload>
          }
          findFirst: {
            args: Prisma.tbNfFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbNfFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfPayload>
          }
          findMany: {
            args: Prisma.tbNfFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfPayload>[]
          }
          create: {
            args: Prisma.tbNfCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfPayload>
          }
          createMany: {
            args: Prisma.tbNfCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbNfDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfPayload>
          }
          update: {
            args: Prisma.tbNfUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfPayload>
          }
          deleteMany: {
            args: Prisma.tbNfDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbNfUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbNfUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfPayload>
          }
          aggregate: {
            args: Prisma.TbNfAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbNf>
          }
          groupBy: {
            args: Prisma.tbNfGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbNfGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbNfCountArgs<ExtArgs>,
            result: $Utils.Optional<TbNfCountAggregateOutputType> | number
          }
        }
      }
      tbNfitens: {
        payload: Prisma.$tbNfitensPayload<ExtArgs>
        fields: Prisma.tbNfitensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbNfitensFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfitensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbNfitensFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfitensPayload>
          }
          findFirst: {
            args: Prisma.tbNfitensFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfitensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbNfitensFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfitensPayload>
          }
          findMany: {
            args: Prisma.tbNfitensFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfitensPayload>[]
          }
          create: {
            args: Prisma.tbNfitensCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfitensPayload>
          }
          createMany: {
            args: Prisma.tbNfitensCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbNfitensDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfitensPayload>
          }
          update: {
            args: Prisma.tbNfitensUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfitensPayload>
          }
          deleteMany: {
            args: Prisma.tbNfitensDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbNfitensUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbNfitensUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbNfitensPayload>
          }
          aggregate: {
            args: Prisma.TbNfitensAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbNfitens>
          }
          groupBy: {
            args: Prisma.tbNfitensGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbNfitensGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbNfitensCountArgs<ExtArgs>,
            result: $Utils.Optional<TbNfitensCountAggregateOutputType> | number
          }
        }
      }
      tbProdcomposicao: {
        payload: Prisma.$tbProdcomposicaoPayload<ExtArgs>
        fields: Prisma.tbProdcomposicaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbProdcomposicaoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdcomposicaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbProdcomposicaoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdcomposicaoPayload>
          }
          findFirst: {
            args: Prisma.tbProdcomposicaoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdcomposicaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbProdcomposicaoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdcomposicaoPayload>
          }
          findMany: {
            args: Prisma.tbProdcomposicaoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdcomposicaoPayload>[]
          }
          create: {
            args: Prisma.tbProdcomposicaoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdcomposicaoPayload>
          }
          createMany: {
            args: Prisma.tbProdcomposicaoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbProdcomposicaoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdcomposicaoPayload>
          }
          update: {
            args: Prisma.tbProdcomposicaoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdcomposicaoPayload>
          }
          deleteMany: {
            args: Prisma.tbProdcomposicaoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbProdcomposicaoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbProdcomposicaoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbProdcomposicaoPayload>
          }
          aggregate: {
            args: Prisma.TbProdcomposicaoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbProdcomposicao>
          }
          groupBy: {
            args: Prisma.tbProdcomposicaoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbProdcomposicaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbProdcomposicaoCountArgs<ExtArgs>,
            result: $Utils.Optional<TbProdcomposicaoCountAggregateOutputType> | number
          }
        }
      }
      tbTiposprodutos: {
        payload: Prisma.$tbTiposprodutosPayload<ExtArgs>
        fields: Prisma.tbTiposprodutosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbTiposprodutosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbTiposprodutosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbTiposprodutosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbTiposprodutosPayload>
          }
          findFirst: {
            args: Prisma.tbTiposprodutosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbTiposprodutosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbTiposprodutosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbTiposprodutosPayload>
          }
          findMany: {
            args: Prisma.tbTiposprodutosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbTiposprodutosPayload>[]
          }
          create: {
            args: Prisma.tbTiposprodutosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbTiposprodutosPayload>
          }
          createMany: {
            args: Prisma.tbTiposprodutosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbTiposprodutosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbTiposprodutosPayload>
          }
          update: {
            args: Prisma.tbTiposprodutosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbTiposprodutosPayload>
          }
          deleteMany: {
            args: Prisma.tbTiposprodutosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbTiposprodutosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbTiposprodutosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbTiposprodutosPayload>
          }
          aggregate: {
            args: Prisma.TbTiposprodutosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbTiposprodutos>
          }
          groupBy: {
            args: Prisma.tbTiposprodutosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbTiposprodutosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbTiposprodutosCountArgs<ExtArgs>,
            result: $Utils.Optional<TbTiposprodutosCountAggregateOutputType> | number
          }
        }
      }
      tbUnidademedida: {
        payload: Prisma.$tbUnidademedidaPayload<ExtArgs>
        fields: Prisma.tbUnidademedidaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbUnidademedidaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUnidademedidaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbUnidademedidaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUnidademedidaPayload>
          }
          findFirst: {
            args: Prisma.tbUnidademedidaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUnidademedidaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbUnidademedidaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUnidademedidaPayload>
          }
          findMany: {
            args: Prisma.tbUnidademedidaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUnidademedidaPayload>[]
          }
          create: {
            args: Prisma.tbUnidademedidaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUnidademedidaPayload>
          }
          createMany: {
            args: Prisma.tbUnidademedidaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbUnidademedidaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUnidademedidaPayload>
          }
          update: {
            args: Prisma.tbUnidademedidaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUnidademedidaPayload>
          }
          deleteMany: {
            args: Prisma.tbUnidademedidaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbUnidademedidaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbUnidademedidaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbUnidademedidaPayload>
          }
          aggregate: {
            args: Prisma.TbUnidademedidaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbUnidademedida>
          }
          groupBy: {
            args: Prisma.tbUnidademedidaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbUnidademedidaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbUnidademedidaCountArgs<ExtArgs>,
            result: $Utils.Optional<TbUnidademedidaCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources

    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type TbFornecedoresCountOutputType
   */

  export type TbFornecedoresCountOutputType = {
    tbMovimentos: number
    tbNf: number
  }

  export type TbFornecedoresCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbMovimentos?: boolean | TbFornecedoresCountOutputTypeCountTbMovimentosArgs
    tbNf?: boolean | TbFornecedoresCountOutputTypeCountTbNfArgs
  }

  // Custom InputTypes

  /**
   * TbFornecedoresCountOutputType without action
   */
  export type TbFornecedoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbFornecedoresCountOutputType
     */
    select?: TbFornecedoresCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbFornecedoresCountOutputType without action
   */
  export type TbFornecedoresCountOutputTypeCountTbMovimentosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbMovimentosWhereInput
  }


  /**
   * TbFornecedoresCountOutputType without action
   */
  export type TbFornecedoresCountOutputTypeCountTbNfArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbNfWhereInput
  }



  /**
   * Count Type TbProdutosCountOutputType
   */

  export type TbProdutosCountOutputType = {
    tbEstoque: number
    tbMovitens: number
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos: number
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos: number
  }

  export type TbProdutosCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbEstoque?: boolean | TbProdutosCountOutputTypeCountTbEstoqueArgs
    tbMovitens?: boolean | TbProdutosCountOutputTypeCountTbMovitensArgs
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: boolean | TbProdutosCountOutputTypeCountTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosArgs
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: boolean | TbProdutosCountOutputTypeCountTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosArgs
  }

  // Custom InputTypes

  /**
   * TbProdutosCountOutputType without action
   */
  export type TbProdutosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbProdutosCountOutputType
     */
    select?: TbProdutosCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbProdutosCountOutputType without action
   */
  export type TbProdutosCountOutputTypeCountTbEstoqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbEstoqueWhereInput
  }


  /**
   * TbProdutosCountOutputType without action
   */
  export type TbProdutosCountOutputTypeCountTbMovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbMovitensWhereInput
  }


  /**
   * TbProdutosCountOutputType without action
   */
  export type TbProdutosCountOutputTypeCountTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbProdcomposicaoWhereInput
  }


  /**
   * TbProdutosCountOutputType without action
   */
  export type TbProdutosCountOutputTypeCountTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbProdcomposicaoWhereInput
  }



  /**
   * Count Type TbLocaisCountOutputType
   */

  export type TbLocaisCountOutputType = {
    tbEstoque: number
    tbMovitens: number
  }

  export type TbLocaisCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbEstoque?: boolean | TbLocaisCountOutputTypeCountTbEstoqueArgs
    tbMovitens?: boolean | TbLocaisCountOutputTypeCountTbMovitensArgs
  }

  // Custom InputTypes

  /**
   * TbLocaisCountOutputType without action
   */
  export type TbLocaisCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbLocaisCountOutputType
     */
    select?: TbLocaisCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbLocaisCountOutputType without action
   */
  export type TbLocaisCountOutputTypeCountTbEstoqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbEstoqueWhereInput
  }


  /**
   * TbLocaisCountOutputType without action
   */
  export type TbLocaisCountOutputTypeCountTbMovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbMovitensWhereInput
  }



  /**
   * Count Type TbMovimentosCountOutputType
   */

  export type TbMovimentosCountOutputType = {
    tbMovitens: number
  }

  export type TbMovimentosCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbMovitens?: boolean | TbMovimentosCountOutputTypeCountTbMovitensArgs
  }

  // Custom InputTypes

  /**
   * TbMovimentosCountOutputType without action
   */
  export type TbMovimentosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbMovimentosCountOutputType
     */
    select?: TbMovimentosCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbMovimentosCountOutputType without action
   */
  export type TbMovimentosCountOutputTypeCountTbMovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbMovitensWhereInput
  }



  /**
   * Count Type TbUsuariosCountOutputType
   */

  export type TbUsuariosCountOutputType = {
    tbMovimentos: number
    tbNf: number
  }

  export type TbUsuariosCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbMovimentos?: boolean | TbUsuariosCountOutputTypeCountTbMovimentosArgs
    tbNf?: boolean | TbUsuariosCountOutputTypeCountTbNfArgs
  }

  // Custom InputTypes

  /**
   * TbUsuariosCountOutputType without action
   */
  export type TbUsuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbUsuariosCountOutputType
     */
    select?: TbUsuariosCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbUsuariosCountOutputType without action
   */
  export type TbUsuariosCountOutputTypeCountTbMovimentosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbMovimentosWhereInput
  }


  /**
   * TbUsuariosCountOutputType without action
   */
  export type TbUsuariosCountOutputTypeCountTbNfArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbNfWhereInput
  }



  /**
   * Count Type TbMovitensCountOutputType
   */

  export type TbMovitensCountOutputType = {
    tbNfitens: number
  }

  export type TbMovitensCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbNfitens?: boolean | TbMovitensCountOutputTypeCountTbNfitensArgs
  }

  // Custom InputTypes

  /**
   * TbMovitensCountOutputType without action
   */
  export type TbMovitensCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbMovitensCountOutputType
     */
    select?: TbMovitensCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbMovitensCountOutputType without action
   */
  export type TbMovitensCountOutputTypeCountTbNfitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbNfitensWhereInput
  }



  /**
   * Count Type TbNfCountOutputType
   */

  export type TbNfCountOutputType = {
    tbNfitens: number
  }

  export type TbNfCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbNfitens?: boolean | TbNfCountOutputTypeCountTbNfitensArgs
  }

  // Custom InputTypes

  /**
   * TbNfCountOutputType without action
   */
  export type TbNfCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbNfCountOutputType
     */
    select?: TbNfCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbNfCountOutputType without action
   */
  export type TbNfCountOutputTypeCountTbNfitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbNfitensWhereInput
  }



  /**
   * Count Type TbTiposprodutosCountOutputType
   */

  export type TbTiposprodutosCountOutputType = {
    tbProdutos: number
  }

  export type TbTiposprodutosCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbProdutos?: boolean | TbTiposprodutosCountOutputTypeCountTbProdutosArgs
  }

  // Custom InputTypes

  /**
   * TbTiposprodutosCountOutputType without action
   */
  export type TbTiposprodutosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbTiposprodutosCountOutputType
     */
    select?: TbTiposprodutosCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbTiposprodutosCountOutputType without action
   */
  export type TbTiposprodutosCountOutputTypeCountTbProdutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbProdutosWhereInput
  }



  /**
   * Count Type TbUnidademedidaCountOutputType
   */

  export type TbUnidademedidaCountOutputType = {
    tbProdutos: number
  }

  export type TbUnidademedidaCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbProdutos?: boolean | TbUnidademedidaCountOutputTypeCountTbProdutosArgs
  }

  // Custom InputTypes

  /**
   * TbUnidademedidaCountOutputType without action
   */
  export type TbUnidademedidaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbUnidademedidaCountOutputType
     */
    select?: TbUnidademedidaCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbUnidademedidaCountOutputType without action
   */
  export type TbUnidademedidaCountOutputTypeCountTbProdutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbProdutosWhereInput
  }



  /**
   * Models
   */

  /**
   * Model tbFornecedores
   */

  export type AggregateTbFornecedores = {
    _count: TbFornecedoresCountAggregateOutputType | null
    _avg: TbFornecedoresAvgAggregateOutputType | null
    _sum: TbFornecedoresSumAggregateOutputType | null
    _min: TbFornecedoresMinAggregateOutputType | null
    _max: TbFornecedoresMaxAggregateOutputType | null
  }

  export type TbFornecedoresAvgAggregateOutputType = {
    idfor: number | null
    numero: number | null
  }

  export type TbFornecedoresSumAggregateOutputType = {
    idfor: number | null
    numero: number | null
  }

  export type TbFornecedoresMinAggregateOutputType = {
    idfor: number | null
    nomefor: string | null
    fisjur: string | null
    cnpjcpf: string | null
    telefone: string | null
    cep: string | null
    cidade: string | null
    rua: string | null
    bairro: string | null
    numero: number | null
    complemento: string | null
    email: string | null
  }

  export type TbFornecedoresMaxAggregateOutputType = {
    idfor: number | null
    nomefor: string | null
    fisjur: string | null
    cnpjcpf: string | null
    telefone: string | null
    cep: string | null
    cidade: string | null
    rua: string | null
    bairro: string | null
    numero: number | null
    complemento: string | null
    email: string | null
  }

  export type TbFornecedoresCountAggregateOutputType = {
    idfor: number
    nomefor: number
    fisjur: number
    cnpjcpf: number
    telefone: number
    cep: number
    cidade: number
    rua: number
    bairro: number
    numero: number
    complemento: number
    email: number
    _all: number
  }


  export type TbFornecedoresAvgAggregateInputType = {
    idfor?: true
    numero?: true
  }

  export type TbFornecedoresSumAggregateInputType = {
    idfor?: true
    numero?: true
  }

  export type TbFornecedoresMinAggregateInputType = {
    idfor?: true
    nomefor?: true
    fisjur?: true
    cnpjcpf?: true
    telefone?: true
    cep?: true
    cidade?: true
    rua?: true
    bairro?: true
    numero?: true
    complemento?: true
    email?: true
  }

  export type TbFornecedoresMaxAggregateInputType = {
    idfor?: true
    nomefor?: true
    fisjur?: true
    cnpjcpf?: true
    telefone?: true
    cep?: true
    cidade?: true
    rua?: true
    bairro?: true
    numero?: true
    complemento?: true
    email?: true
  }

  export type TbFornecedoresCountAggregateInputType = {
    idfor?: true
    nomefor?: true
    fisjur?: true
    cnpjcpf?: true
    telefone?: true
    cep?: true
    cidade?: true
    rua?: true
    bairro?: true
    numero?: true
    complemento?: true
    email?: true
    _all?: true
  }

  export type TbFornecedoresAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbFornecedores to aggregate.
     */
    where?: tbFornecedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbFornecedores to fetch.
     */
    orderBy?: tbFornecedoresOrderByWithRelationInput | tbFornecedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbFornecedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbFornecedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbFornecedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbFornecedores
    **/
    _count?: true | TbFornecedoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbFornecedoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbFornecedoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbFornecedoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbFornecedoresMaxAggregateInputType
  }

  export type GetTbFornecedoresAggregateType<T extends TbFornecedoresAggregateArgs> = {
        [P in keyof T & keyof AggregateTbFornecedores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbFornecedores[P]>
      : GetScalarType<T[P], AggregateTbFornecedores[P]>
  }




  export type tbFornecedoresGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbFornecedoresWhereInput
    orderBy?: tbFornecedoresOrderByWithAggregationInput | tbFornecedoresOrderByWithAggregationInput[]
    by: TbFornecedoresScalarFieldEnum[] | TbFornecedoresScalarFieldEnum
    having?: tbFornecedoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbFornecedoresCountAggregateInputType | true
    _avg?: TbFornecedoresAvgAggregateInputType
    _sum?: TbFornecedoresSumAggregateInputType
    _min?: TbFornecedoresMinAggregateInputType
    _max?: TbFornecedoresMaxAggregateInputType
  }

  export type TbFornecedoresGroupByOutputType = {
    idfor: number
    nomefor: string | null
    fisjur: string | null
    cnpjcpf: string | null
    telefone: string | null
    cep: string | null
    cidade: string | null
    rua: string | null
    bairro: string | null
    numero: number | null
    complemento: string | null
    email: string | null
    _count: TbFornecedoresCountAggregateOutputType | null
    _avg: TbFornecedoresAvgAggregateOutputType | null
    _sum: TbFornecedoresSumAggregateOutputType | null
    _min: TbFornecedoresMinAggregateOutputType | null
    _max: TbFornecedoresMaxAggregateOutputType | null
  }

  type GetTbFornecedoresGroupByPayload<T extends tbFornecedoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbFornecedoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbFornecedoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbFornecedoresGroupByOutputType[P]>
            : GetScalarType<T[P], TbFornecedoresGroupByOutputType[P]>
        }
      >
    >


  export type tbFornecedoresSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idfor?: boolean
    nomefor?: boolean
    fisjur?: boolean
    cnpjcpf?: boolean
    telefone?: boolean
    cep?: boolean
    cidade?: boolean
    rua?: boolean
    bairro?: boolean
    numero?: boolean
    complemento?: boolean
    email?: boolean
    tbMovimentos?: boolean | tbFornecedores$tbMovimentosArgs<ExtArgs>
    tbNf?: boolean | tbFornecedores$tbNfArgs<ExtArgs>
    _count?: boolean | TbFornecedoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbFornecedores"]>

  export type tbFornecedoresSelectScalar = {
    idfor?: boolean
    nomefor?: boolean
    fisjur?: boolean
    cnpjcpf?: boolean
    telefone?: boolean
    cep?: boolean
    cidade?: boolean
    rua?: boolean
    bairro?: boolean
    numero?: boolean
    complemento?: boolean
    email?: boolean
  }

  export type tbFornecedoresInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbMovimentos?: boolean | tbFornecedores$tbMovimentosArgs<ExtArgs>
    tbNf?: boolean | tbFornecedores$tbNfArgs<ExtArgs>
    _count?: boolean | TbFornecedoresCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbFornecedoresPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbFornecedores"
    objects: {
      tbMovimentos: Prisma.$tbMovimentosPayload<ExtArgs>[]
      tbNf: Prisma.$tbNfPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idfor: number
      nomefor: string | null
      fisjur: string | null
      cnpjcpf: string | null
      telefone: string | null
      cep: string | null
      cidade: string | null
      rua: string | null
      bairro: string | null
      numero: number | null
      complemento: string | null
      email: string | null
    }, ExtArgs["result"]["tbFornecedores"]>
    composites: {}
  }


  type tbFornecedoresGetPayload<S extends boolean | null | undefined | tbFornecedoresDefaultArgs> = $Result.GetResult<Prisma.$tbFornecedoresPayload, S>

  type tbFornecedoresCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbFornecedoresFindManyArgs, 'select' | 'include'> & {
      select?: TbFornecedoresCountAggregateInputType | true
    }

  export interface tbFornecedoresDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbFornecedores'], meta: { name: 'tbFornecedores' } }
    /**
     * Find zero or one TbFornecedores that matches the filter.
     * @param {tbFornecedoresFindUniqueArgs} args - Arguments to find a TbFornecedores
     * @example
     * // Get one TbFornecedores
     * const tbFornecedores = await prisma.tbFornecedores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbFornecedoresFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbFornecedoresFindUniqueArgs<ExtArgs>>
    ): Prisma__tbFornecedoresClient<$Result.GetResult<Prisma.$tbFornecedoresPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbFornecedores that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbFornecedoresFindUniqueOrThrowArgs} args - Arguments to find a TbFornecedores
     * @example
     * // Get one TbFornecedores
     * const tbFornecedores = await prisma.tbFornecedores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbFornecedoresFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbFornecedoresFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbFornecedoresClient<$Result.GetResult<Prisma.$tbFornecedoresPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbFornecedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbFornecedoresFindFirstArgs} args - Arguments to find a TbFornecedores
     * @example
     * // Get one TbFornecedores
     * const tbFornecedores = await prisma.tbFornecedores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbFornecedoresFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbFornecedoresFindFirstArgs<ExtArgs>>
    ): Prisma__tbFornecedoresClient<$Result.GetResult<Prisma.$tbFornecedoresPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbFornecedores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbFornecedoresFindFirstOrThrowArgs} args - Arguments to find a TbFornecedores
     * @example
     * // Get one TbFornecedores
     * const tbFornecedores = await prisma.tbFornecedores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbFornecedoresFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbFornecedoresFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbFornecedoresClient<$Result.GetResult<Prisma.$tbFornecedoresPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbFornecedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbFornecedoresFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbFornecedores
     * const tbFornecedores = await prisma.tbFornecedores.findMany()
     * 
     * // Get first 10 TbFornecedores
     * const tbFornecedores = await prisma.tbFornecedores.findMany({ take: 10 })
     * 
     * // Only select the `idfor`
     * const tbFornecedoresWithIdforOnly = await prisma.tbFornecedores.findMany({ select: { idfor: true } })
     * 
    **/
    findMany<T extends tbFornecedoresFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbFornecedoresFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbFornecedoresPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbFornecedores.
     * @param {tbFornecedoresCreateArgs} args - Arguments to create a TbFornecedores.
     * @example
     * // Create one TbFornecedores
     * const TbFornecedores = await prisma.tbFornecedores.create({
     *   data: {
     *     // ... data to create a TbFornecedores
     *   }
     * })
     * 
    **/
    create<T extends tbFornecedoresCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbFornecedoresCreateArgs<ExtArgs>>
    ): Prisma__tbFornecedoresClient<$Result.GetResult<Prisma.$tbFornecedoresPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbFornecedores.
     *     @param {tbFornecedoresCreateManyArgs} args - Arguments to create many TbFornecedores.
     *     @example
     *     // Create many TbFornecedores
     *     const tbFornecedores = await prisma.tbFornecedores.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbFornecedoresCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbFornecedoresCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbFornecedores.
     * @param {tbFornecedoresDeleteArgs} args - Arguments to delete one TbFornecedores.
     * @example
     * // Delete one TbFornecedores
     * const TbFornecedores = await prisma.tbFornecedores.delete({
     *   where: {
     *     // ... filter to delete one TbFornecedores
     *   }
     * })
     * 
    **/
    delete<T extends tbFornecedoresDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbFornecedoresDeleteArgs<ExtArgs>>
    ): Prisma__tbFornecedoresClient<$Result.GetResult<Prisma.$tbFornecedoresPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbFornecedores.
     * @param {tbFornecedoresUpdateArgs} args - Arguments to update one TbFornecedores.
     * @example
     * // Update one TbFornecedores
     * const tbFornecedores = await prisma.tbFornecedores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbFornecedoresUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbFornecedoresUpdateArgs<ExtArgs>>
    ): Prisma__tbFornecedoresClient<$Result.GetResult<Prisma.$tbFornecedoresPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbFornecedores.
     * @param {tbFornecedoresDeleteManyArgs} args - Arguments to filter TbFornecedores to delete.
     * @example
     * // Delete a few TbFornecedores
     * const { count } = await prisma.tbFornecedores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbFornecedoresDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbFornecedoresDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbFornecedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbFornecedoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbFornecedores
     * const tbFornecedores = await prisma.tbFornecedores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbFornecedoresUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbFornecedoresUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbFornecedores.
     * @param {tbFornecedoresUpsertArgs} args - Arguments to update or create a TbFornecedores.
     * @example
     * // Update or create a TbFornecedores
     * const tbFornecedores = await prisma.tbFornecedores.upsert({
     *   create: {
     *     // ... data to create a TbFornecedores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbFornecedores we want to update
     *   }
     * })
    **/
    upsert<T extends tbFornecedoresUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbFornecedoresUpsertArgs<ExtArgs>>
    ): Prisma__tbFornecedoresClient<$Result.GetResult<Prisma.$tbFornecedoresPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbFornecedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbFornecedoresCountArgs} args - Arguments to filter TbFornecedores to count.
     * @example
     * // Count the number of TbFornecedores
     * const count = await prisma.tbFornecedores.count({
     *   where: {
     *     // ... the filter for the TbFornecedores we want to count
     *   }
     * })
    **/
    count<T extends tbFornecedoresCountArgs>(
      args?: Subset<T, tbFornecedoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbFornecedoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbFornecedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbFornecedoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbFornecedoresAggregateArgs>(args: Subset<T, TbFornecedoresAggregateArgs>): Prisma.PrismaPromise<GetTbFornecedoresAggregateType<T>>

    /**
     * Group by TbFornecedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbFornecedoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbFornecedoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbFornecedoresGroupByArgs['orderBy'] }
        : { orderBy?: tbFornecedoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbFornecedoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbFornecedoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbFornecedores model
   */
  readonly fields: tbFornecedoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbFornecedores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbFornecedoresClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbMovimentos<T extends tbFornecedores$tbMovimentosArgs<ExtArgs> = {}>(args?: Subset<T, tbFornecedores$tbMovimentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbNf<T extends tbFornecedores$tbNfArgs<ExtArgs> = {}>(args?: Subset<T, tbFornecedores$tbNfArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbFornecedores model
   */ 
  interface tbFornecedoresFieldRefs {
    readonly idfor: FieldRef<"tbFornecedores", 'Int'>
    readonly nomefor: FieldRef<"tbFornecedores", 'String'>
    readonly fisjur: FieldRef<"tbFornecedores", 'String'>
    readonly cnpjcpf: FieldRef<"tbFornecedores", 'String'>
    readonly telefone: FieldRef<"tbFornecedores", 'String'>
    readonly cep: FieldRef<"tbFornecedores", 'String'>
    readonly cidade: FieldRef<"tbFornecedores", 'String'>
    readonly rua: FieldRef<"tbFornecedores", 'String'>
    readonly bairro: FieldRef<"tbFornecedores", 'String'>
    readonly numero: FieldRef<"tbFornecedores", 'Int'>
    readonly complemento: FieldRef<"tbFornecedores", 'String'>
    readonly email: FieldRef<"tbFornecedores", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tbFornecedores findUnique
   */
  export type tbFornecedoresFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbFornecedores
     */
    select?: tbFornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbFornecedoresInclude<ExtArgs> | null
    /**
     * Filter, which tbFornecedores to fetch.
     */
    where: tbFornecedoresWhereUniqueInput
  }


  /**
   * tbFornecedores findUniqueOrThrow
   */
  export type tbFornecedoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbFornecedores
     */
    select?: tbFornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbFornecedoresInclude<ExtArgs> | null
    /**
     * Filter, which tbFornecedores to fetch.
     */
    where: tbFornecedoresWhereUniqueInput
  }


  /**
   * tbFornecedores findFirst
   */
  export type tbFornecedoresFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbFornecedores
     */
    select?: tbFornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbFornecedoresInclude<ExtArgs> | null
    /**
     * Filter, which tbFornecedores to fetch.
     */
    where?: tbFornecedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbFornecedores to fetch.
     */
    orderBy?: tbFornecedoresOrderByWithRelationInput | tbFornecedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbFornecedores.
     */
    cursor?: tbFornecedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbFornecedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbFornecedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbFornecedores.
     */
    distinct?: TbFornecedoresScalarFieldEnum | TbFornecedoresScalarFieldEnum[]
  }


  /**
   * tbFornecedores findFirstOrThrow
   */
  export type tbFornecedoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbFornecedores
     */
    select?: tbFornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbFornecedoresInclude<ExtArgs> | null
    /**
     * Filter, which tbFornecedores to fetch.
     */
    where?: tbFornecedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbFornecedores to fetch.
     */
    orderBy?: tbFornecedoresOrderByWithRelationInput | tbFornecedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbFornecedores.
     */
    cursor?: tbFornecedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbFornecedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbFornecedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbFornecedores.
     */
    distinct?: TbFornecedoresScalarFieldEnum | TbFornecedoresScalarFieldEnum[]
  }


  /**
   * tbFornecedores findMany
   */
  export type tbFornecedoresFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbFornecedores
     */
    select?: tbFornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbFornecedoresInclude<ExtArgs> | null
    /**
     * Filter, which tbFornecedores to fetch.
     */
    where?: tbFornecedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbFornecedores to fetch.
     */
    orderBy?: tbFornecedoresOrderByWithRelationInput | tbFornecedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbFornecedores.
     */
    cursor?: tbFornecedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbFornecedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbFornecedores.
     */
    skip?: number
    distinct?: TbFornecedoresScalarFieldEnum | TbFornecedoresScalarFieldEnum[]
  }


  /**
   * tbFornecedores create
   */
  export type tbFornecedoresCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbFornecedores
     */
    select?: tbFornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbFornecedoresInclude<ExtArgs> | null
    /**
     * The data needed to create a tbFornecedores.
     */
    data?: XOR<tbFornecedoresCreateInput, tbFornecedoresUncheckedCreateInput>
  }


  /**
   * tbFornecedores createMany
   */
  export type tbFornecedoresCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbFornecedores.
     */
    data: tbFornecedoresCreateManyInput | tbFornecedoresCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbFornecedores update
   */
  export type tbFornecedoresUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbFornecedores
     */
    select?: tbFornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbFornecedoresInclude<ExtArgs> | null
    /**
     * The data needed to update a tbFornecedores.
     */
    data: XOR<tbFornecedoresUpdateInput, tbFornecedoresUncheckedUpdateInput>
    /**
     * Choose, which tbFornecedores to update.
     */
    where: tbFornecedoresWhereUniqueInput
  }


  /**
   * tbFornecedores updateMany
   */
  export type tbFornecedoresUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbFornecedores.
     */
    data: XOR<tbFornecedoresUpdateManyMutationInput, tbFornecedoresUncheckedUpdateManyInput>
    /**
     * Filter which tbFornecedores to update
     */
    where?: tbFornecedoresWhereInput
  }


  /**
   * tbFornecedores upsert
   */
  export type tbFornecedoresUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbFornecedores
     */
    select?: tbFornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbFornecedoresInclude<ExtArgs> | null
    /**
     * The filter to search for the tbFornecedores to update in case it exists.
     */
    where: tbFornecedoresWhereUniqueInput
    /**
     * In case the tbFornecedores found by the `where` argument doesn't exist, create a new tbFornecedores with this data.
     */
    create: XOR<tbFornecedoresCreateInput, tbFornecedoresUncheckedCreateInput>
    /**
     * In case the tbFornecedores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbFornecedoresUpdateInput, tbFornecedoresUncheckedUpdateInput>
  }


  /**
   * tbFornecedores delete
   */
  export type tbFornecedoresDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbFornecedores
     */
    select?: tbFornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbFornecedoresInclude<ExtArgs> | null
    /**
     * Filter which tbFornecedores to delete.
     */
    where: tbFornecedoresWhereUniqueInput
  }


  /**
   * tbFornecedores deleteMany
   */
  export type tbFornecedoresDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbFornecedores to delete
     */
    where?: tbFornecedoresWhereInput
  }


  /**
   * tbFornecedores.tbMovimentos
   */
  export type tbFornecedores$tbMovimentosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
    where?: tbMovimentosWhereInput
    orderBy?: tbMovimentosOrderByWithRelationInput | tbMovimentosOrderByWithRelationInput[]
    cursor?: tbMovimentosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbMovimentosScalarFieldEnum | TbMovimentosScalarFieldEnum[]
  }


  /**
   * tbFornecedores.tbNf
   */
  export type tbFornecedores$tbNfArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
    where?: tbNfWhereInput
    orderBy?: tbNfOrderByWithRelationInput | tbNfOrderByWithRelationInput[]
    cursor?: tbNfWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbNfScalarFieldEnum | TbNfScalarFieldEnum[]
  }


  /**
   * tbFornecedores without action
   */
  export type tbFornecedoresDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbFornecedores
     */
    select?: tbFornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbFornecedoresInclude<ExtArgs> | null
  }



  /**
   * Model tbProdutos
   */

  export type AggregateTbProdutos = {
    _count: TbProdutosCountAggregateOutputType | null
    _avg: TbProdutosAvgAggregateOutputType | null
    _sum: TbProdutosSumAggregateOutputType | null
    _min: TbProdutosMinAggregateOutputType | null
    _max: TbProdutosMaxAggregateOutputType | null
  }

  export type TbProdutosAvgAggregateOutputType = {
    idproduto: number | null
    idtipprod: number | null
    idunidade: number | null
    quantminima: number | null
  }

  export type TbProdutosSumAggregateOutputType = {
    idproduto: number | null
    idtipprod: number | null
    idunidade: number | null
    quantminima: number | null
  }

  export type TbProdutosMinAggregateOutputType = {
    idproduto: number | null
    nomeprod: string | null
    idtipprod: number | null
    idunidade: number | null
    quantminima: number | null
  }

  export type TbProdutosMaxAggregateOutputType = {
    idproduto: number | null
    nomeprod: string | null
    idtipprod: number | null
    idunidade: number | null
    quantminima: number | null
  }

  export type TbProdutosCountAggregateOutputType = {
    idproduto: number
    nomeprod: number
    idtipprod: number
    idunidade: number
    quantminima: number
    _all: number
  }


  export type TbProdutosAvgAggregateInputType = {
    idproduto?: true
    idtipprod?: true
    idunidade?: true
    quantminima?: true
  }

  export type TbProdutosSumAggregateInputType = {
    idproduto?: true
    idtipprod?: true
    idunidade?: true
    quantminima?: true
  }

  export type TbProdutosMinAggregateInputType = {
    idproduto?: true
    nomeprod?: true
    idtipprod?: true
    idunidade?: true
    quantminima?: true
  }

  export type TbProdutosMaxAggregateInputType = {
    idproduto?: true
    nomeprod?: true
    idtipprod?: true
    idunidade?: true
    quantminima?: true
  }

  export type TbProdutosCountAggregateInputType = {
    idproduto?: true
    nomeprod?: true
    idtipprod?: true
    idunidade?: true
    quantminima?: true
    _all?: true
  }

  export type TbProdutosAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbProdutos to aggregate.
     */
    where?: tbProdutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbProdutos to fetch.
     */
    orderBy?: tbProdutosOrderByWithRelationInput | tbProdutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbProdutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbProdutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbProdutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbProdutos
    **/
    _count?: true | TbProdutosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbProdutosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbProdutosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbProdutosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbProdutosMaxAggregateInputType
  }

  export type GetTbProdutosAggregateType<T extends TbProdutosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbProdutos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbProdutos[P]>
      : GetScalarType<T[P], AggregateTbProdutos[P]>
  }




  export type tbProdutosGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbProdutosWhereInput
    orderBy?: tbProdutosOrderByWithAggregationInput | tbProdutosOrderByWithAggregationInput[]
    by: TbProdutosScalarFieldEnum[] | TbProdutosScalarFieldEnum
    having?: tbProdutosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbProdutosCountAggregateInputType | true
    _avg?: TbProdutosAvgAggregateInputType
    _sum?: TbProdutosSumAggregateInputType
    _min?: TbProdutosMinAggregateInputType
    _max?: TbProdutosMaxAggregateInputType
  }

  export type TbProdutosGroupByOutputType = {
    idproduto: number
    nomeprod: string | null
    idtipprod: number | null
    idunidade: number | null
    quantminima: number | null
    _count: TbProdutosCountAggregateOutputType | null
    _avg: TbProdutosAvgAggregateOutputType | null
    _sum: TbProdutosSumAggregateOutputType | null
    _min: TbProdutosMinAggregateOutputType | null
    _max: TbProdutosMaxAggregateOutputType | null
  }

  type GetTbProdutosGroupByPayload<T extends tbProdutosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbProdutosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbProdutosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbProdutosGroupByOutputType[P]>
            : GetScalarType<T[P], TbProdutosGroupByOutputType[P]>
        }
      >
    >


  export type tbProdutosSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idproduto?: boolean
    nomeprod?: boolean
    idtipprod?: boolean
    idunidade?: boolean
    quantminima?: boolean
    tbEstoque?: boolean | tbProdutos$tbEstoqueArgs<ExtArgs>
    tbMovitens?: boolean | tbProdutos$tbMovitensArgs<ExtArgs>
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: boolean | tbProdutos$tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosArgs<ExtArgs>
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: boolean | tbProdutos$tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosArgs<ExtArgs>
    tbTiposProdutos?: boolean | tbProdutos$tbTiposProdutosArgs<ExtArgs>
    tbUnidadeMedida?: boolean | tbProdutos$tbUnidadeMedidaArgs<ExtArgs>
    _count?: boolean | TbProdutosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbProdutos"]>

  export type tbProdutosSelectScalar = {
    idproduto?: boolean
    nomeprod?: boolean
    idtipprod?: boolean
    idunidade?: boolean
    quantminima?: boolean
  }

  export type tbProdutosInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbEstoque?: boolean | tbProdutos$tbEstoqueArgs<ExtArgs>
    tbMovitens?: boolean | tbProdutos$tbMovitensArgs<ExtArgs>
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: boolean | tbProdutos$tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosArgs<ExtArgs>
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: boolean | tbProdutos$tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosArgs<ExtArgs>
    tbTiposProdutos?: boolean | tbProdutos$tbTiposProdutosArgs<ExtArgs>
    tbUnidadeMedida?: boolean | tbProdutos$tbUnidadeMedidaArgs<ExtArgs>
    _count?: boolean | TbProdutosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbProdutosPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbProdutos"
    objects: {
      tbEstoque: Prisma.$tbEstoquePayload<ExtArgs>[]
      tbMovitens: Prisma.$tbMovitensPayload<ExtArgs>[]
      tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos: Prisma.$tbProdcomposicaoPayload<ExtArgs>[]
      tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos: Prisma.$tbProdcomposicaoPayload<ExtArgs>[]
      tbTiposProdutos: Prisma.$tbTiposprodutosPayload<ExtArgs> | null
      tbUnidadeMedida: Prisma.$tbUnidademedidaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      idproduto: number
      nomeprod: string | null
      idtipprod: number | null
      idunidade: number | null
      quantminima: number | null
    }, ExtArgs["result"]["tbProdutos"]>
    composites: {}
  }


  type tbProdutosGetPayload<S extends boolean | null | undefined | tbProdutosDefaultArgs> = $Result.GetResult<Prisma.$tbProdutosPayload, S>

  type tbProdutosCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbProdutosFindManyArgs, 'select' | 'include'> & {
      select?: TbProdutosCountAggregateInputType | true
    }

  export interface tbProdutosDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbProdutos'], meta: { name: 'tbProdutos' } }
    /**
     * Find zero or one TbProdutos that matches the filter.
     * @param {tbProdutosFindUniqueArgs} args - Arguments to find a TbProdutos
     * @example
     * // Get one TbProdutos
     * const tbProdutos = await prisma.tbProdutos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbProdutosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbProdutosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbProdutosClient<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbProdutos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbProdutosFindUniqueOrThrowArgs} args - Arguments to find a TbProdutos
     * @example
     * // Get one TbProdutos
     * const tbProdutos = await prisma.tbProdutos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbProdutosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbProdutosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbProdutosClient<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbProdutos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbProdutosFindFirstArgs} args - Arguments to find a TbProdutos
     * @example
     * // Get one TbProdutos
     * const tbProdutos = await prisma.tbProdutos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbProdutosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbProdutosFindFirstArgs<ExtArgs>>
    ): Prisma__tbProdutosClient<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbProdutos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbProdutosFindFirstOrThrowArgs} args - Arguments to find a TbProdutos
     * @example
     * // Get one TbProdutos
     * const tbProdutos = await prisma.tbProdutos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbProdutosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbProdutosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbProdutosClient<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbProdutos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbProdutosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbProdutos
     * const tbProdutos = await prisma.tbProdutos.findMany()
     * 
     * // Get first 10 TbProdutos
     * const tbProdutos = await prisma.tbProdutos.findMany({ take: 10 })
     * 
     * // Only select the `idproduto`
     * const tbProdutosWithIdprodutoOnly = await prisma.tbProdutos.findMany({ select: { idproduto: true } })
     * 
    **/
    findMany<T extends tbProdutosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbProdutosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbProdutos.
     * @param {tbProdutosCreateArgs} args - Arguments to create a TbProdutos.
     * @example
     * // Create one TbProdutos
     * const TbProdutos = await prisma.tbProdutos.create({
     *   data: {
     *     // ... data to create a TbProdutos
     *   }
     * })
     * 
    **/
    create<T extends tbProdutosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbProdutosCreateArgs<ExtArgs>>
    ): Prisma__tbProdutosClient<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbProdutos.
     *     @param {tbProdutosCreateManyArgs} args - Arguments to create many TbProdutos.
     *     @example
     *     // Create many TbProdutos
     *     const tbProdutos = await prisma.tbProdutos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbProdutosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbProdutosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbProdutos.
     * @param {tbProdutosDeleteArgs} args - Arguments to delete one TbProdutos.
     * @example
     * // Delete one TbProdutos
     * const TbProdutos = await prisma.tbProdutos.delete({
     *   where: {
     *     // ... filter to delete one TbProdutos
     *   }
     * })
     * 
    **/
    delete<T extends tbProdutosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbProdutosDeleteArgs<ExtArgs>>
    ): Prisma__tbProdutosClient<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbProdutos.
     * @param {tbProdutosUpdateArgs} args - Arguments to update one TbProdutos.
     * @example
     * // Update one TbProdutos
     * const tbProdutos = await prisma.tbProdutos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbProdutosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbProdutosUpdateArgs<ExtArgs>>
    ): Prisma__tbProdutosClient<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbProdutos.
     * @param {tbProdutosDeleteManyArgs} args - Arguments to filter TbProdutos to delete.
     * @example
     * // Delete a few TbProdutos
     * const { count } = await prisma.tbProdutos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbProdutosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbProdutosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbProdutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbProdutosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbProdutos
     * const tbProdutos = await prisma.tbProdutos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbProdutosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbProdutosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbProdutos.
     * @param {tbProdutosUpsertArgs} args - Arguments to update or create a TbProdutos.
     * @example
     * // Update or create a TbProdutos
     * const tbProdutos = await prisma.tbProdutos.upsert({
     *   create: {
     *     // ... data to create a TbProdutos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbProdutos we want to update
     *   }
     * })
    **/
    upsert<T extends tbProdutosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbProdutosUpsertArgs<ExtArgs>>
    ): Prisma__tbProdutosClient<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbProdutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbProdutosCountArgs} args - Arguments to filter TbProdutos to count.
     * @example
     * // Count the number of TbProdutos
     * const count = await prisma.tbProdutos.count({
     *   where: {
     *     // ... the filter for the TbProdutos we want to count
     *   }
     * })
    **/
    count<T extends tbProdutosCountArgs>(
      args?: Subset<T, tbProdutosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbProdutosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbProdutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbProdutosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbProdutosAggregateArgs>(args: Subset<T, TbProdutosAggregateArgs>): Prisma.PrismaPromise<GetTbProdutosAggregateType<T>>

    /**
     * Group by TbProdutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbProdutosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbProdutosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbProdutosGroupByArgs['orderBy'] }
        : { orderBy?: tbProdutosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbProdutosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbProdutosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbProdutos model
   */
  readonly fields: tbProdutosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbProdutos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbProdutosClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbEstoque<T extends tbProdutos$tbEstoqueArgs<ExtArgs> = {}>(args?: Subset<T, tbProdutos$tbEstoqueArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbEstoquePayload<ExtArgs>, T, 'findMany'> | Null>;

    tbMovitens<T extends tbProdutos$tbMovitensArgs<ExtArgs> = {}>(args?: Subset<T, tbProdutos$tbMovitensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos<T extends tbProdutos$tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosArgs<ExtArgs> = {}>(args?: Subset<T, tbProdutos$tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbProdcomposicaoPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos<T extends tbProdutos$tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosArgs<ExtArgs> = {}>(args?: Subset<T, tbProdutos$tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbProdcomposicaoPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbTiposProdutos<T extends tbProdutos$tbTiposProdutosArgs<ExtArgs> = {}>(args?: Subset<T, tbProdutos$tbTiposProdutosArgs<ExtArgs>>): Prisma__tbTiposprodutosClient<$Result.GetResult<Prisma.$tbTiposprodutosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbUnidadeMedida<T extends tbProdutos$tbUnidadeMedidaArgs<ExtArgs> = {}>(args?: Subset<T, tbProdutos$tbUnidadeMedidaArgs<ExtArgs>>): Prisma__tbUnidademedidaClient<$Result.GetResult<Prisma.$tbUnidademedidaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbProdutos model
   */ 
  interface tbProdutosFieldRefs {
    readonly idproduto: FieldRef<"tbProdutos", 'Int'>
    readonly nomeprod: FieldRef<"tbProdutos", 'String'>
    readonly idtipprod: FieldRef<"tbProdutos", 'Int'>
    readonly idunidade: FieldRef<"tbProdutos", 'Int'>
    readonly quantminima: FieldRef<"tbProdutos", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * tbProdutos findUnique
   */
  export type tbProdutosFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdutos
     */
    select?: tbProdutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdutosInclude<ExtArgs> | null
    /**
     * Filter, which tbProdutos to fetch.
     */
    where: tbProdutosWhereUniqueInput
  }


  /**
   * tbProdutos findUniqueOrThrow
   */
  export type tbProdutosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdutos
     */
    select?: tbProdutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdutosInclude<ExtArgs> | null
    /**
     * Filter, which tbProdutos to fetch.
     */
    where: tbProdutosWhereUniqueInput
  }


  /**
   * tbProdutos findFirst
   */
  export type tbProdutosFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdutos
     */
    select?: tbProdutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdutosInclude<ExtArgs> | null
    /**
     * Filter, which tbProdutos to fetch.
     */
    where?: tbProdutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbProdutos to fetch.
     */
    orderBy?: tbProdutosOrderByWithRelationInput | tbProdutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbProdutos.
     */
    cursor?: tbProdutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbProdutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbProdutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbProdutos.
     */
    distinct?: TbProdutosScalarFieldEnum | TbProdutosScalarFieldEnum[]
  }


  /**
   * tbProdutos findFirstOrThrow
   */
  export type tbProdutosFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdutos
     */
    select?: tbProdutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdutosInclude<ExtArgs> | null
    /**
     * Filter, which tbProdutos to fetch.
     */
    where?: tbProdutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbProdutos to fetch.
     */
    orderBy?: tbProdutosOrderByWithRelationInput | tbProdutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbProdutos.
     */
    cursor?: tbProdutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbProdutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbProdutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbProdutos.
     */
    distinct?: TbProdutosScalarFieldEnum | TbProdutosScalarFieldEnum[]
  }


  /**
   * tbProdutos findMany
   */
  export type tbProdutosFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdutos
     */
    select?: tbProdutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdutosInclude<ExtArgs> | null
    /**
     * Filter, which tbProdutos to fetch.
     */
    where?: tbProdutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbProdutos to fetch.
     */
    orderBy?: tbProdutosOrderByWithRelationInput | tbProdutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbProdutos.
     */
    cursor?: tbProdutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbProdutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbProdutos.
     */
    skip?: number
    distinct?: TbProdutosScalarFieldEnum | TbProdutosScalarFieldEnum[]
  }


  /**
   * tbProdutos create
   */
  export type tbProdutosCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdutos
     */
    select?: tbProdutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdutosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbProdutos.
     */
    data?: XOR<tbProdutosCreateInput, tbProdutosUncheckedCreateInput>
  }


  /**
   * tbProdutos createMany
   */
  export type tbProdutosCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbProdutos.
     */
    data: tbProdutosCreateManyInput | tbProdutosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbProdutos update
   */
  export type tbProdutosUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdutos
     */
    select?: tbProdutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdutosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbProdutos.
     */
    data: XOR<tbProdutosUpdateInput, tbProdutosUncheckedUpdateInput>
    /**
     * Choose, which tbProdutos to update.
     */
    where: tbProdutosWhereUniqueInput
  }


  /**
   * tbProdutos updateMany
   */
  export type tbProdutosUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbProdutos.
     */
    data: XOR<tbProdutosUpdateManyMutationInput, tbProdutosUncheckedUpdateManyInput>
    /**
     * Filter which tbProdutos to update
     */
    where?: tbProdutosWhereInput
  }


  /**
   * tbProdutos upsert
   */
  export type tbProdutosUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdutos
     */
    select?: tbProdutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdutosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbProdutos to update in case it exists.
     */
    where: tbProdutosWhereUniqueInput
    /**
     * In case the tbProdutos found by the `where` argument doesn't exist, create a new tbProdutos with this data.
     */
    create: XOR<tbProdutosCreateInput, tbProdutosUncheckedCreateInput>
    /**
     * In case the tbProdutos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbProdutosUpdateInput, tbProdutosUncheckedUpdateInput>
  }


  /**
   * tbProdutos delete
   */
  export type tbProdutosDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdutos
     */
    select?: tbProdutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdutosInclude<ExtArgs> | null
    /**
     * Filter which tbProdutos to delete.
     */
    where: tbProdutosWhereUniqueInput
  }


  /**
   * tbProdutos deleteMany
   */
  export type tbProdutosDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbProdutos to delete
     */
    where?: tbProdutosWhereInput
  }


  /**
   * tbProdutos.tbEstoque
   */
  export type tbProdutos$tbEstoqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbEstoque
     */
    select?: tbEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbEstoqueInclude<ExtArgs> | null
    where?: tbEstoqueWhereInput
    orderBy?: tbEstoqueOrderByWithRelationInput | tbEstoqueOrderByWithRelationInput[]
    cursor?: tbEstoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbEstoqueScalarFieldEnum | TbEstoqueScalarFieldEnum[]
  }


  /**
   * tbProdutos.tbMovitens
   */
  export type tbProdutos$tbMovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    where?: tbMovitensWhereInput
    orderBy?: tbMovitensOrderByWithRelationInput | tbMovitensOrderByWithRelationInput[]
    cursor?: tbMovitensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbMovitensScalarFieldEnum | TbMovitensScalarFieldEnum[]
  }


  /**
   * tbProdutos.tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos
   */
  export type tbProdutos$tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdcomposicao
     */
    select?: tbProdcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdcomposicaoInclude<ExtArgs> | null
    where?: tbProdcomposicaoWhereInput
    orderBy?: tbProdcomposicaoOrderByWithRelationInput | tbProdcomposicaoOrderByWithRelationInput[]
    cursor?: tbProdcomposicaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbProdcomposicaoScalarFieldEnum | TbProdcomposicaoScalarFieldEnum[]
  }


  /**
   * tbProdutos.tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos
   */
  export type tbProdutos$tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdcomposicao
     */
    select?: tbProdcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdcomposicaoInclude<ExtArgs> | null
    where?: tbProdcomposicaoWhereInput
    orderBy?: tbProdcomposicaoOrderByWithRelationInput | tbProdcomposicaoOrderByWithRelationInput[]
    cursor?: tbProdcomposicaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbProdcomposicaoScalarFieldEnum | TbProdcomposicaoScalarFieldEnum[]
  }


  /**
   * tbProdutos.tbTiposProdutos
   */
  export type tbProdutos$tbTiposProdutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbTiposprodutos
     */
    select?: tbTiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbTiposprodutosInclude<ExtArgs> | null
    where?: tbTiposprodutosWhereInput
  }


  /**
   * tbProdutos.tbUnidadeMedida
   */
  export type tbProdutos$tbUnidadeMedidaArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUnidademedida
     */
    select?: tbUnidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUnidademedidaInclude<ExtArgs> | null
    where?: tbUnidademedidaWhereInput
  }


  /**
   * tbProdutos without action
   */
  export type tbProdutosDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdutos
     */
    select?: tbProdutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdutosInclude<ExtArgs> | null
  }



  /**
   * Model tbEstoque
   */

  export type AggregateTbEstoque = {
    _count: TbEstoqueCountAggregateOutputType | null
    _avg: TbEstoqueAvgAggregateOutputType | null
    _sum: TbEstoqueSumAggregateOutputType | null
    _min: TbEstoqueMinAggregateOutputType | null
    _max: TbEstoqueMaxAggregateOutputType | null
  }

  export type TbEstoqueAvgAggregateOutputType = {
    idestoque: number | null
    idproduto: number | null
    idlocal: number | null
    quantidade: Decimal | null
  }

  export type TbEstoqueSumAggregateOutputType = {
    idestoque: number | null
    idproduto: number | null
    idlocal: number | null
    quantidade: Decimal | null
  }

  export type TbEstoqueMinAggregateOutputType = {
    idestoque: number | null
    idproduto: number | null
    idlocal: number | null
    quantidade: Decimal | null
    dtinc: Date | null
  }

  export type TbEstoqueMaxAggregateOutputType = {
    idestoque: number | null
    idproduto: number | null
    idlocal: number | null
    quantidade: Decimal | null
    dtinc: Date | null
  }

  export type TbEstoqueCountAggregateOutputType = {
    idestoque: number
    idproduto: number
    idlocal: number
    quantidade: number
    dtinc: number
    _all: number
  }


  export type TbEstoqueAvgAggregateInputType = {
    idestoque?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
  }

  export type TbEstoqueSumAggregateInputType = {
    idestoque?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
  }

  export type TbEstoqueMinAggregateInputType = {
    idestoque?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
    dtinc?: true
  }

  export type TbEstoqueMaxAggregateInputType = {
    idestoque?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
    dtinc?: true
  }

  export type TbEstoqueCountAggregateInputType = {
    idestoque?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
    dtinc?: true
    _all?: true
  }

  export type TbEstoqueAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbEstoque to aggregate.
     */
    where?: tbEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbEstoques to fetch.
     */
    orderBy?: tbEstoqueOrderByWithRelationInput | tbEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbEstoques
    **/
    _count?: true | TbEstoqueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbEstoqueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbEstoqueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbEstoqueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbEstoqueMaxAggregateInputType
  }

  export type GetTbEstoqueAggregateType<T extends TbEstoqueAggregateArgs> = {
        [P in keyof T & keyof AggregateTbEstoque]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbEstoque[P]>
      : GetScalarType<T[P], AggregateTbEstoque[P]>
  }




  export type tbEstoqueGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbEstoqueWhereInput
    orderBy?: tbEstoqueOrderByWithAggregationInput | tbEstoqueOrderByWithAggregationInput[]
    by: TbEstoqueScalarFieldEnum[] | TbEstoqueScalarFieldEnum
    having?: tbEstoqueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbEstoqueCountAggregateInputType | true
    _avg?: TbEstoqueAvgAggregateInputType
    _sum?: TbEstoqueSumAggregateInputType
    _min?: TbEstoqueMinAggregateInputType
    _max?: TbEstoqueMaxAggregateInputType
  }

  export type TbEstoqueGroupByOutputType = {
    idestoque: number
    idproduto: number
    idlocal: number | null
    quantidade: Decimal | null
    dtinc: Date | null
    _count: TbEstoqueCountAggregateOutputType | null
    _avg: TbEstoqueAvgAggregateOutputType | null
    _sum: TbEstoqueSumAggregateOutputType | null
    _min: TbEstoqueMinAggregateOutputType | null
    _max: TbEstoqueMaxAggregateOutputType | null
  }

  type GetTbEstoqueGroupByPayload<T extends tbEstoqueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbEstoqueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbEstoqueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbEstoqueGroupByOutputType[P]>
            : GetScalarType<T[P], TbEstoqueGroupByOutputType[P]>
        }
      >
    >


  export type tbEstoqueSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idestoque?: boolean
    idproduto?: boolean
    idlocal?: boolean
    quantidade?: boolean
    dtinc?: boolean
    tbLocais?: boolean | tbEstoque$tbLocaisArgs<ExtArgs>
    tbProdutos?: boolean | tbProdutosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbEstoque"]>

  export type tbEstoqueSelectScalar = {
    idestoque?: boolean
    idproduto?: boolean
    idlocal?: boolean
    quantidade?: boolean
    dtinc?: boolean
  }

  export type tbEstoqueInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbLocais?: boolean | tbEstoque$tbLocaisArgs<ExtArgs>
    tbProdutos?: boolean | tbProdutosDefaultArgs<ExtArgs>
  }


  export type $tbEstoquePayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbEstoque"
    objects: {
      tbLocais: Prisma.$tbLocaisPayload<ExtArgs> | null
      tbProdutos: Prisma.$tbProdutosPayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      idestoque: number
      idproduto: number
      idlocal: number | null
      quantidade: Prisma.Decimal | null
      dtinc: Date | null
    }, ExtArgs["result"]["tbEstoque"]>
    composites: {}
  }


  type tbEstoqueGetPayload<S extends boolean | null | undefined | tbEstoqueDefaultArgs> = $Result.GetResult<Prisma.$tbEstoquePayload, S>

  type tbEstoqueCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbEstoqueFindManyArgs, 'select' | 'include'> & {
      select?: TbEstoqueCountAggregateInputType | true
    }

  export interface tbEstoqueDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbEstoque'], meta: { name: 'tbEstoque' } }
    /**
     * Find zero or one TbEstoque that matches the filter.
     * @param {tbEstoqueFindUniqueArgs} args - Arguments to find a TbEstoque
     * @example
     * // Get one TbEstoque
     * const tbEstoque = await prisma.tbEstoque.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbEstoqueFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbEstoqueFindUniqueArgs<ExtArgs>>
    ): Prisma__tbEstoqueClient<$Result.GetResult<Prisma.$tbEstoquePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbEstoque that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbEstoqueFindUniqueOrThrowArgs} args - Arguments to find a TbEstoque
     * @example
     * // Get one TbEstoque
     * const tbEstoque = await prisma.tbEstoque.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbEstoqueFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbEstoqueFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbEstoqueClient<$Result.GetResult<Prisma.$tbEstoquePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbEstoque that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbEstoqueFindFirstArgs} args - Arguments to find a TbEstoque
     * @example
     * // Get one TbEstoque
     * const tbEstoque = await prisma.tbEstoque.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbEstoqueFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbEstoqueFindFirstArgs<ExtArgs>>
    ): Prisma__tbEstoqueClient<$Result.GetResult<Prisma.$tbEstoquePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbEstoque that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbEstoqueFindFirstOrThrowArgs} args - Arguments to find a TbEstoque
     * @example
     * // Get one TbEstoque
     * const tbEstoque = await prisma.tbEstoque.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbEstoqueFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbEstoqueFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbEstoqueClient<$Result.GetResult<Prisma.$tbEstoquePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbEstoques that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbEstoqueFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbEstoques
     * const tbEstoques = await prisma.tbEstoque.findMany()
     * 
     * // Get first 10 TbEstoques
     * const tbEstoques = await prisma.tbEstoque.findMany({ take: 10 })
     * 
     * // Only select the `idestoque`
     * const tbEstoqueWithIdestoqueOnly = await prisma.tbEstoque.findMany({ select: { idestoque: true } })
     * 
    **/
    findMany<T extends tbEstoqueFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbEstoqueFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbEstoquePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbEstoque.
     * @param {tbEstoqueCreateArgs} args - Arguments to create a TbEstoque.
     * @example
     * // Create one TbEstoque
     * const TbEstoque = await prisma.tbEstoque.create({
     *   data: {
     *     // ... data to create a TbEstoque
     *   }
     * })
     * 
    **/
    create<T extends tbEstoqueCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbEstoqueCreateArgs<ExtArgs>>
    ): Prisma__tbEstoqueClient<$Result.GetResult<Prisma.$tbEstoquePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbEstoques.
     *     @param {tbEstoqueCreateManyArgs} args - Arguments to create many TbEstoques.
     *     @example
     *     // Create many TbEstoques
     *     const tbEstoque = await prisma.tbEstoque.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbEstoqueCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbEstoqueCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbEstoque.
     * @param {tbEstoqueDeleteArgs} args - Arguments to delete one TbEstoque.
     * @example
     * // Delete one TbEstoque
     * const TbEstoque = await prisma.tbEstoque.delete({
     *   where: {
     *     // ... filter to delete one TbEstoque
     *   }
     * })
     * 
    **/
    delete<T extends tbEstoqueDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbEstoqueDeleteArgs<ExtArgs>>
    ): Prisma__tbEstoqueClient<$Result.GetResult<Prisma.$tbEstoquePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbEstoque.
     * @param {tbEstoqueUpdateArgs} args - Arguments to update one TbEstoque.
     * @example
     * // Update one TbEstoque
     * const tbEstoque = await prisma.tbEstoque.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbEstoqueUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbEstoqueUpdateArgs<ExtArgs>>
    ): Prisma__tbEstoqueClient<$Result.GetResult<Prisma.$tbEstoquePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbEstoques.
     * @param {tbEstoqueDeleteManyArgs} args - Arguments to filter TbEstoques to delete.
     * @example
     * // Delete a few TbEstoques
     * const { count } = await prisma.tbEstoque.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbEstoqueDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbEstoqueDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbEstoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbEstoqueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbEstoques
     * const tbEstoque = await prisma.tbEstoque.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbEstoqueUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbEstoqueUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbEstoque.
     * @param {tbEstoqueUpsertArgs} args - Arguments to update or create a TbEstoque.
     * @example
     * // Update or create a TbEstoque
     * const tbEstoque = await prisma.tbEstoque.upsert({
     *   create: {
     *     // ... data to create a TbEstoque
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbEstoque we want to update
     *   }
     * })
    **/
    upsert<T extends tbEstoqueUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbEstoqueUpsertArgs<ExtArgs>>
    ): Prisma__tbEstoqueClient<$Result.GetResult<Prisma.$tbEstoquePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbEstoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbEstoqueCountArgs} args - Arguments to filter TbEstoques to count.
     * @example
     * // Count the number of TbEstoques
     * const count = await prisma.tbEstoque.count({
     *   where: {
     *     // ... the filter for the TbEstoques we want to count
     *   }
     * })
    **/
    count<T extends tbEstoqueCountArgs>(
      args?: Subset<T, tbEstoqueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbEstoqueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbEstoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbEstoqueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbEstoqueAggregateArgs>(args: Subset<T, TbEstoqueAggregateArgs>): Prisma.PrismaPromise<GetTbEstoqueAggregateType<T>>

    /**
     * Group by TbEstoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbEstoqueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbEstoqueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbEstoqueGroupByArgs['orderBy'] }
        : { orderBy?: tbEstoqueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbEstoqueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbEstoqueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbEstoque model
   */
  readonly fields: tbEstoqueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbEstoque.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbEstoqueClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbLocais<T extends tbEstoque$tbLocaisArgs<ExtArgs> = {}>(args?: Subset<T, tbEstoque$tbLocaisArgs<ExtArgs>>): Prisma__tbLocaisClient<$Result.GetResult<Prisma.$tbLocaisPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbProdutos<T extends tbProdutosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbProdutosDefaultArgs<ExtArgs>>): Prisma__tbProdutosClient<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbEstoque model
   */ 
  interface tbEstoqueFieldRefs {
    readonly idestoque: FieldRef<"tbEstoque", 'Int'>
    readonly idproduto: FieldRef<"tbEstoque", 'Int'>
    readonly idlocal: FieldRef<"tbEstoque", 'Int'>
    readonly quantidade: FieldRef<"tbEstoque", 'Decimal'>
    readonly dtinc: FieldRef<"tbEstoque", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * tbEstoque findUnique
   */
  export type tbEstoqueFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbEstoque
     */
    select?: tbEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which tbEstoque to fetch.
     */
    where: tbEstoqueWhereUniqueInput
  }


  /**
   * tbEstoque findUniqueOrThrow
   */
  export type tbEstoqueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbEstoque
     */
    select?: tbEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which tbEstoque to fetch.
     */
    where: tbEstoqueWhereUniqueInput
  }


  /**
   * tbEstoque findFirst
   */
  export type tbEstoqueFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbEstoque
     */
    select?: tbEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which tbEstoque to fetch.
     */
    where?: tbEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbEstoques to fetch.
     */
    orderBy?: tbEstoqueOrderByWithRelationInput | tbEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbEstoques.
     */
    cursor?: tbEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbEstoques.
     */
    distinct?: TbEstoqueScalarFieldEnum | TbEstoqueScalarFieldEnum[]
  }


  /**
   * tbEstoque findFirstOrThrow
   */
  export type tbEstoqueFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbEstoque
     */
    select?: tbEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which tbEstoque to fetch.
     */
    where?: tbEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbEstoques to fetch.
     */
    orderBy?: tbEstoqueOrderByWithRelationInput | tbEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbEstoques.
     */
    cursor?: tbEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbEstoques.
     */
    distinct?: TbEstoqueScalarFieldEnum | TbEstoqueScalarFieldEnum[]
  }


  /**
   * tbEstoque findMany
   */
  export type tbEstoqueFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbEstoque
     */
    select?: tbEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which tbEstoques to fetch.
     */
    where?: tbEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbEstoques to fetch.
     */
    orderBy?: tbEstoqueOrderByWithRelationInput | tbEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbEstoques.
     */
    cursor?: tbEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbEstoques.
     */
    skip?: number
    distinct?: TbEstoqueScalarFieldEnum | TbEstoqueScalarFieldEnum[]
  }


  /**
   * tbEstoque create
   */
  export type tbEstoqueCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbEstoque
     */
    select?: tbEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbEstoqueInclude<ExtArgs> | null
    /**
     * The data needed to create a tbEstoque.
     */
    data: XOR<tbEstoqueCreateInput, tbEstoqueUncheckedCreateInput>
  }


  /**
   * tbEstoque createMany
   */
  export type tbEstoqueCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbEstoques.
     */
    data: tbEstoqueCreateManyInput | tbEstoqueCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbEstoque update
   */
  export type tbEstoqueUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbEstoque
     */
    select?: tbEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbEstoqueInclude<ExtArgs> | null
    /**
     * The data needed to update a tbEstoque.
     */
    data: XOR<tbEstoqueUpdateInput, tbEstoqueUncheckedUpdateInput>
    /**
     * Choose, which tbEstoque to update.
     */
    where: tbEstoqueWhereUniqueInput
  }


  /**
   * tbEstoque updateMany
   */
  export type tbEstoqueUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbEstoques.
     */
    data: XOR<tbEstoqueUpdateManyMutationInput, tbEstoqueUncheckedUpdateManyInput>
    /**
     * Filter which tbEstoques to update
     */
    where?: tbEstoqueWhereInput
  }


  /**
   * tbEstoque upsert
   */
  export type tbEstoqueUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbEstoque
     */
    select?: tbEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbEstoqueInclude<ExtArgs> | null
    /**
     * The filter to search for the tbEstoque to update in case it exists.
     */
    where: tbEstoqueWhereUniqueInput
    /**
     * In case the tbEstoque found by the `where` argument doesn't exist, create a new tbEstoque with this data.
     */
    create: XOR<tbEstoqueCreateInput, tbEstoqueUncheckedCreateInput>
    /**
     * In case the tbEstoque was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbEstoqueUpdateInput, tbEstoqueUncheckedUpdateInput>
  }


  /**
   * tbEstoque delete
   */
  export type tbEstoqueDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbEstoque
     */
    select?: tbEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbEstoqueInclude<ExtArgs> | null
    /**
     * Filter which tbEstoque to delete.
     */
    where: tbEstoqueWhereUniqueInput
  }


  /**
   * tbEstoque deleteMany
   */
  export type tbEstoqueDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbEstoques to delete
     */
    where?: tbEstoqueWhereInput
  }


  /**
   * tbEstoque.tbLocais
   */
  export type tbEstoque$tbLocaisArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbLocais
     */
    select?: tbLocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbLocaisInclude<ExtArgs> | null
    where?: tbLocaisWhereInput
  }


  /**
   * tbEstoque without action
   */
  export type tbEstoqueDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbEstoque
     */
    select?: tbEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbEstoqueInclude<ExtArgs> | null
  }



  /**
   * Model tbLocais
   */

  export type AggregateTbLocais = {
    _count: TbLocaisCountAggregateOutputType | null
    _avg: TbLocaisAvgAggregateOutputType | null
    _sum: TbLocaisSumAggregateOutputType | null
    _min: TbLocaisMinAggregateOutputType | null
    _max: TbLocaisMaxAggregateOutputType | null
  }

  export type TbLocaisAvgAggregateOutputType = {
    idlocal: number | null
  }

  export type TbLocaisSumAggregateOutputType = {
    idlocal: number | null
  }

  export type TbLocaisMinAggregateOutputType = {
    idlocal: number | null
    nomelocal: string | null
  }

  export type TbLocaisMaxAggregateOutputType = {
    idlocal: number | null
    nomelocal: string | null
  }

  export type TbLocaisCountAggregateOutputType = {
    idlocal: number
    nomelocal: number
    _all: number
  }


  export type TbLocaisAvgAggregateInputType = {
    idlocal?: true
  }

  export type TbLocaisSumAggregateInputType = {
    idlocal?: true
  }

  export type TbLocaisMinAggregateInputType = {
    idlocal?: true
    nomelocal?: true
  }

  export type TbLocaisMaxAggregateInputType = {
    idlocal?: true
    nomelocal?: true
  }

  export type TbLocaisCountAggregateInputType = {
    idlocal?: true
    nomelocal?: true
    _all?: true
  }

  export type TbLocaisAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbLocais to aggregate.
     */
    where?: tbLocaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbLocais to fetch.
     */
    orderBy?: tbLocaisOrderByWithRelationInput | tbLocaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbLocaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbLocais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbLocais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbLocais
    **/
    _count?: true | TbLocaisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbLocaisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbLocaisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbLocaisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbLocaisMaxAggregateInputType
  }

  export type GetTbLocaisAggregateType<T extends TbLocaisAggregateArgs> = {
        [P in keyof T & keyof AggregateTbLocais]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbLocais[P]>
      : GetScalarType<T[P], AggregateTbLocais[P]>
  }




  export type tbLocaisGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbLocaisWhereInput
    orderBy?: tbLocaisOrderByWithAggregationInput | tbLocaisOrderByWithAggregationInput[]
    by: TbLocaisScalarFieldEnum[] | TbLocaisScalarFieldEnum
    having?: tbLocaisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbLocaisCountAggregateInputType | true
    _avg?: TbLocaisAvgAggregateInputType
    _sum?: TbLocaisSumAggregateInputType
    _min?: TbLocaisMinAggregateInputType
    _max?: TbLocaisMaxAggregateInputType
  }

  export type TbLocaisGroupByOutputType = {
    idlocal: number
    nomelocal: string | null
    _count: TbLocaisCountAggregateOutputType | null
    _avg: TbLocaisAvgAggregateOutputType | null
    _sum: TbLocaisSumAggregateOutputType | null
    _min: TbLocaisMinAggregateOutputType | null
    _max: TbLocaisMaxAggregateOutputType | null
  }

  type GetTbLocaisGroupByPayload<T extends tbLocaisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbLocaisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbLocaisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbLocaisGroupByOutputType[P]>
            : GetScalarType<T[P], TbLocaisGroupByOutputType[P]>
        }
      >
    >


  export type tbLocaisSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idlocal?: boolean
    nomelocal?: boolean
    tbEstoque?: boolean | tbLocais$tbEstoqueArgs<ExtArgs>
    tbMovitens?: boolean | tbLocais$tbMovitensArgs<ExtArgs>
    _count?: boolean | TbLocaisCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbLocais"]>

  export type tbLocaisSelectScalar = {
    idlocal?: boolean
    nomelocal?: boolean
  }

  export type tbLocaisInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbEstoque?: boolean | tbLocais$tbEstoqueArgs<ExtArgs>
    tbMovitens?: boolean | tbLocais$tbMovitensArgs<ExtArgs>
    _count?: boolean | TbLocaisCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbLocaisPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbLocais"
    objects: {
      tbEstoque: Prisma.$tbEstoquePayload<ExtArgs>[]
      tbMovitens: Prisma.$tbMovitensPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idlocal: number
      nomelocal: string | null
    }, ExtArgs["result"]["tbLocais"]>
    composites: {}
  }


  type tbLocaisGetPayload<S extends boolean | null | undefined | tbLocaisDefaultArgs> = $Result.GetResult<Prisma.$tbLocaisPayload, S>

  type tbLocaisCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbLocaisFindManyArgs, 'select' | 'include'> & {
      select?: TbLocaisCountAggregateInputType | true
    }

  export interface tbLocaisDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbLocais'], meta: { name: 'tbLocais' } }
    /**
     * Find zero or one TbLocais that matches the filter.
     * @param {tbLocaisFindUniqueArgs} args - Arguments to find a TbLocais
     * @example
     * // Get one TbLocais
     * const tbLocais = await prisma.tbLocais.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbLocaisFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbLocaisFindUniqueArgs<ExtArgs>>
    ): Prisma__tbLocaisClient<$Result.GetResult<Prisma.$tbLocaisPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbLocais that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbLocaisFindUniqueOrThrowArgs} args - Arguments to find a TbLocais
     * @example
     * // Get one TbLocais
     * const tbLocais = await prisma.tbLocais.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbLocaisFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbLocaisFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbLocaisClient<$Result.GetResult<Prisma.$tbLocaisPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbLocais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbLocaisFindFirstArgs} args - Arguments to find a TbLocais
     * @example
     * // Get one TbLocais
     * const tbLocais = await prisma.tbLocais.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbLocaisFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbLocaisFindFirstArgs<ExtArgs>>
    ): Prisma__tbLocaisClient<$Result.GetResult<Prisma.$tbLocaisPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbLocais that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbLocaisFindFirstOrThrowArgs} args - Arguments to find a TbLocais
     * @example
     * // Get one TbLocais
     * const tbLocais = await prisma.tbLocais.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbLocaisFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbLocaisFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbLocaisClient<$Result.GetResult<Prisma.$tbLocaisPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbLocais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbLocaisFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbLocais
     * const tbLocais = await prisma.tbLocais.findMany()
     * 
     * // Get first 10 TbLocais
     * const tbLocais = await prisma.tbLocais.findMany({ take: 10 })
     * 
     * // Only select the `idlocal`
     * const tbLocaisWithIdlocalOnly = await prisma.tbLocais.findMany({ select: { idlocal: true } })
     * 
    **/
    findMany<T extends tbLocaisFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbLocaisFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbLocaisPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbLocais.
     * @param {tbLocaisCreateArgs} args - Arguments to create a TbLocais.
     * @example
     * // Create one TbLocais
     * const TbLocais = await prisma.tbLocais.create({
     *   data: {
     *     // ... data to create a TbLocais
     *   }
     * })
     * 
    **/
    create<T extends tbLocaisCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbLocaisCreateArgs<ExtArgs>>
    ): Prisma__tbLocaisClient<$Result.GetResult<Prisma.$tbLocaisPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbLocais.
     *     @param {tbLocaisCreateManyArgs} args - Arguments to create many TbLocais.
     *     @example
     *     // Create many TbLocais
     *     const tbLocais = await prisma.tbLocais.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbLocaisCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbLocaisCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbLocais.
     * @param {tbLocaisDeleteArgs} args - Arguments to delete one TbLocais.
     * @example
     * // Delete one TbLocais
     * const TbLocais = await prisma.tbLocais.delete({
     *   where: {
     *     // ... filter to delete one TbLocais
     *   }
     * })
     * 
    **/
    delete<T extends tbLocaisDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbLocaisDeleteArgs<ExtArgs>>
    ): Prisma__tbLocaisClient<$Result.GetResult<Prisma.$tbLocaisPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbLocais.
     * @param {tbLocaisUpdateArgs} args - Arguments to update one TbLocais.
     * @example
     * // Update one TbLocais
     * const tbLocais = await prisma.tbLocais.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbLocaisUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbLocaisUpdateArgs<ExtArgs>>
    ): Prisma__tbLocaisClient<$Result.GetResult<Prisma.$tbLocaisPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbLocais.
     * @param {tbLocaisDeleteManyArgs} args - Arguments to filter TbLocais to delete.
     * @example
     * // Delete a few TbLocais
     * const { count } = await prisma.tbLocais.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbLocaisDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbLocaisDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbLocais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbLocaisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbLocais
     * const tbLocais = await prisma.tbLocais.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbLocaisUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbLocaisUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbLocais.
     * @param {tbLocaisUpsertArgs} args - Arguments to update or create a TbLocais.
     * @example
     * // Update or create a TbLocais
     * const tbLocais = await prisma.tbLocais.upsert({
     *   create: {
     *     // ... data to create a TbLocais
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbLocais we want to update
     *   }
     * })
    **/
    upsert<T extends tbLocaisUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbLocaisUpsertArgs<ExtArgs>>
    ): Prisma__tbLocaisClient<$Result.GetResult<Prisma.$tbLocaisPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbLocais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbLocaisCountArgs} args - Arguments to filter TbLocais to count.
     * @example
     * // Count the number of TbLocais
     * const count = await prisma.tbLocais.count({
     *   where: {
     *     // ... the filter for the TbLocais we want to count
     *   }
     * })
    **/
    count<T extends tbLocaisCountArgs>(
      args?: Subset<T, tbLocaisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbLocaisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbLocais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbLocaisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbLocaisAggregateArgs>(args: Subset<T, TbLocaisAggregateArgs>): Prisma.PrismaPromise<GetTbLocaisAggregateType<T>>

    /**
     * Group by TbLocais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbLocaisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbLocaisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbLocaisGroupByArgs['orderBy'] }
        : { orderBy?: tbLocaisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbLocaisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbLocaisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbLocais model
   */
  readonly fields: tbLocaisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbLocais.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbLocaisClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbEstoque<T extends tbLocais$tbEstoqueArgs<ExtArgs> = {}>(args?: Subset<T, tbLocais$tbEstoqueArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbEstoquePayload<ExtArgs>, T, 'findMany'> | Null>;

    tbMovitens<T extends tbLocais$tbMovitensArgs<ExtArgs> = {}>(args?: Subset<T, tbLocais$tbMovitensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbLocais model
   */ 
  interface tbLocaisFieldRefs {
    readonly idlocal: FieldRef<"tbLocais", 'Int'>
    readonly nomelocal: FieldRef<"tbLocais", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tbLocais findUnique
   */
  export type tbLocaisFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbLocais
     */
    select?: tbLocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbLocaisInclude<ExtArgs> | null
    /**
     * Filter, which tbLocais to fetch.
     */
    where: tbLocaisWhereUniqueInput
  }


  /**
   * tbLocais findUniqueOrThrow
   */
  export type tbLocaisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbLocais
     */
    select?: tbLocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbLocaisInclude<ExtArgs> | null
    /**
     * Filter, which tbLocais to fetch.
     */
    where: tbLocaisWhereUniqueInput
  }


  /**
   * tbLocais findFirst
   */
  export type tbLocaisFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbLocais
     */
    select?: tbLocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbLocaisInclude<ExtArgs> | null
    /**
     * Filter, which tbLocais to fetch.
     */
    where?: tbLocaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbLocais to fetch.
     */
    orderBy?: tbLocaisOrderByWithRelationInput | tbLocaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbLocais.
     */
    cursor?: tbLocaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbLocais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbLocais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbLocais.
     */
    distinct?: TbLocaisScalarFieldEnum | TbLocaisScalarFieldEnum[]
  }


  /**
   * tbLocais findFirstOrThrow
   */
  export type tbLocaisFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbLocais
     */
    select?: tbLocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbLocaisInclude<ExtArgs> | null
    /**
     * Filter, which tbLocais to fetch.
     */
    where?: tbLocaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbLocais to fetch.
     */
    orderBy?: tbLocaisOrderByWithRelationInput | tbLocaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbLocais.
     */
    cursor?: tbLocaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbLocais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbLocais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbLocais.
     */
    distinct?: TbLocaisScalarFieldEnum | TbLocaisScalarFieldEnum[]
  }


  /**
   * tbLocais findMany
   */
  export type tbLocaisFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbLocais
     */
    select?: tbLocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbLocaisInclude<ExtArgs> | null
    /**
     * Filter, which tbLocais to fetch.
     */
    where?: tbLocaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbLocais to fetch.
     */
    orderBy?: tbLocaisOrderByWithRelationInput | tbLocaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbLocais.
     */
    cursor?: tbLocaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbLocais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbLocais.
     */
    skip?: number
    distinct?: TbLocaisScalarFieldEnum | TbLocaisScalarFieldEnum[]
  }


  /**
   * tbLocais create
   */
  export type tbLocaisCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbLocais
     */
    select?: tbLocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbLocaisInclude<ExtArgs> | null
    /**
     * The data needed to create a tbLocais.
     */
    data?: XOR<tbLocaisCreateInput, tbLocaisUncheckedCreateInput>
  }


  /**
   * tbLocais createMany
   */
  export type tbLocaisCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbLocais.
     */
    data: tbLocaisCreateManyInput | tbLocaisCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbLocais update
   */
  export type tbLocaisUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbLocais
     */
    select?: tbLocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbLocaisInclude<ExtArgs> | null
    /**
     * The data needed to update a tbLocais.
     */
    data: XOR<tbLocaisUpdateInput, tbLocaisUncheckedUpdateInput>
    /**
     * Choose, which tbLocais to update.
     */
    where: tbLocaisWhereUniqueInput
  }


  /**
   * tbLocais updateMany
   */
  export type tbLocaisUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbLocais.
     */
    data: XOR<tbLocaisUpdateManyMutationInput, tbLocaisUncheckedUpdateManyInput>
    /**
     * Filter which tbLocais to update
     */
    where?: tbLocaisWhereInput
  }


  /**
   * tbLocais upsert
   */
  export type tbLocaisUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbLocais
     */
    select?: tbLocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbLocaisInclude<ExtArgs> | null
    /**
     * The filter to search for the tbLocais to update in case it exists.
     */
    where: tbLocaisWhereUniqueInput
    /**
     * In case the tbLocais found by the `where` argument doesn't exist, create a new tbLocais with this data.
     */
    create: XOR<tbLocaisCreateInput, tbLocaisUncheckedCreateInput>
    /**
     * In case the tbLocais was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbLocaisUpdateInput, tbLocaisUncheckedUpdateInput>
  }


  /**
   * tbLocais delete
   */
  export type tbLocaisDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbLocais
     */
    select?: tbLocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbLocaisInclude<ExtArgs> | null
    /**
     * Filter which tbLocais to delete.
     */
    where: tbLocaisWhereUniqueInput
  }


  /**
   * tbLocais deleteMany
   */
  export type tbLocaisDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbLocais to delete
     */
    where?: tbLocaisWhereInput
  }


  /**
   * tbLocais.tbEstoque
   */
  export type tbLocais$tbEstoqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbEstoque
     */
    select?: tbEstoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbEstoqueInclude<ExtArgs> | null
    where?: tbEstoqueWhereInput
    orderBy?: tbEstoqueOrderByWithRelationInput | tbEstoqueOrderByWithRelationInput[]
    cursor?: tbEstoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbEstoqueScalarFieldEnum | TbEstoqueScalarFieldEnum[]
  }


  /**
   * tbLocais.tbMovitens
   */
  export type tbLocais$tbMovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    where?: tbMovitensWhereInput
    orderBy?: tbMovitensOrderByWithRelationInput | tbMovitensOrderByWithRelationInput[]
    cursor?: tbMovitensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbMovitensScalarFieldEnum | TbMovitensScalarFieldEnum[]
  }


  /**
   * tbLocais without action
   */
  export type tbLocaisDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbLocais
     */
    select?: tbLocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbLocaisInclude<ExtArgs> | null
  }



  /**
   * Model tbMovimentos
   */

  export type AggregateTbMovimentos = {
    _count: TbMovimentosCountAggregateOutputType | null
    _avg: TbMovimentosAvgAggregateOutputType | null
    _sum: TbMovimentosSumAggregateOutputType | null
    _min: TbMovimentosMinAggregateOutputType | null
    _max: TbMovimentosMaxAggregateOutputType | null
  }

  export type TbMovimentosAvgAggregateOutputType = {
    idmovimento: number | null
    idfor: number | null
    idusuario_alteracao: number | null
  }

  export type TbMovimentosSumAggregateOutputType = {
    idmovimento: number | null
    idfor: number | null
    idusuario_alteracao: number | null
  }

  export type TbMovimentosMinAggregateOutputType = {
    idmovimento: number | null
    tipmov: string | null
    idfor: number | null
    idusuario_alteracao: number | null
    dtinc: Date | null
  }

  export type TbMovimentosMaxAggregateOutputType = {
    idmovimento: number | null
    tipmov: string | null
    idfor: number | null
    idusuario_alteracao: number | null
    dtinc: Date | null
  }

  export type TbMovimentosCountAggregateOutputType = {
    idmovimento: number
    tipmov: number
    idfor: number
    idusuario_alteracao: number
    dtinc: number
    _all: number
  }


  export type TbMovimentosAvgAggregateInputType = {
    idmovimento?: true
    idfor?: true
    idusuario_alteracao?: true
  }

  export type TbMovimentosSumAggregateInputType = {
    idmovimento?: true
    idfor?: true
    idusuario_alteracao?: true
  }

  export type TbMovimentosMinAggregateInputType = {
    idmovimento?: true
    tipmov?: true
    idfor?: true
    idusuario_alteracao?: true
    dtinc?: true
  }

  export type TbMovimentosMaxAggregateInputType = {
    idmovimento?: true
    tipmov?: true
    idfor?: true
    idusuario_alteracao?: true
    dtinc?: true
  }

  export type TbMovimentosCountAggregateInputType = {
    idmovimento?: true
    tipmov?: true
    idfor?: true
    idusuario_alteracao?: true
    dtinc?: true
    _all?: true
  }

  export type TbMovimentosAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbMovimentos to aggregate.
     */
    where?: tbMovimentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbMovimentos to fetch.
     */
    orderBy?: tbMovimentosOrderByWithRelationInput | tbMovimentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbMovimentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbMovimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbMovimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbMovimentos
    **/
    _count?: true | TbMovimentosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbMovimentosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbMovimentosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbMovimentosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbMovimentosMaxAggregateInputType
  }

  export type GetTbMovimentosAggregateType<T extends TbMovimentosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbMovimentos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbMovimentos[P]>
      : GetScalarType<T[P], AggregateTbMovimentos[P]>
  }




  export type tbMovimentosGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbMovimentosWhereInput
    orderBy?: tbMovimentosOrderByWithAggregationInput | tbMovimentosOrderByWithAggregationInput[]
    by: TbMovimentosScalarFieldEnum[] | TbMovimentosScalarFieldEnum
    having?: tbMovimentosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbMovimentosCountAggregateInputType | true
    _avg?: TbMovimentosAvgAggregateInputType
    _sum?: TbMovimentosSumAggregateInputType
    _min?: TbMovimentosMinAggregateInputType
    _max?: TbMovimentosMaxAggregateInputType
  }

  export type TbMovimentosGroupByOutputType = {
    idmovimento: number
    tipmov: string | null
    idfor: number | null
    idusuario_alteracao: number | null
    dtinc: Date | null
    _count: TbMovimentosCountAggregateOutputType | null
    _avg: TbMovimentosAvgAggregateOutputType | null
    _sum: TbMovimentosSumAggregateOutputType | null
    _min: TbMovimentosMinAggregateOutputType | null
    _max: TbMovimentosMaxAggregateOutputType | null
  }

  type GetTbMovimentosGroupByPayload<T extends tbMovimentosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbMovimentosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbMovimentosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbMovimentosGroupByOutputType[P]>
            : GetScalarType<T[P], TbMovimentosGroupByOutputType[P]>
        }
      >
    >


  export type tbMovimentosSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idmovimento?: boolean
    tipmov?: boolean
    idfor?: boolean
    idusuario_alteracao?: boolean
    dtinc?: boolean
    tbFornecedores?: boolean | tbMovimentos$tbFornecedoresArgs<ExtArgs>
    tbUsuarios?: boolean | tbMovimentos$tbUsuariosArgs<ExtArgs>
    tbMovitens?: boolean | tbMovimentos$tbMovitensArgs<ExtArgs>
    tbNf?: boolean | tbMovimentos$tbNfArgs<ExtArgs>
    _count?: boolean | TbMovimentosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbMovimentos"]>

  export type tbMovimentosSelectScalar = {
    idmovimento?: boolean
    tipmov?: boolean
    idfor?: boolean
    idusuario_alteracao?: boolean
    dtinc?: boolean
  }

  export type tbMovimentosInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbFornecedores?: boolean | tbMovimentos$tbFornecedoresArgs<ExtArgs>
    tbUsuarios?: boolean | tbMovimentos$tbUsuariosArgs<ExtArgs>
    tbMovitens?: boolean | tbMovimentos$tbMovitensArgs<ExtArgs>
    tbNf?: boolean | tbMovimentos$tbNfArgs<ExtArgs>
    _count?: boolean | TbMovimentosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbMovimentosPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbMovimentos"
    objects: {
      tbFornecedores: Prisma.$tbFornecedoresPayload<ExtArgs> | null
      tbUsuarios: Prisma.$tbUsuariosPayload<ExtArgs> | null
      tbMovitens: Prisma.$tbMovitensPayload<ExtArgs>[]
      tbNf: Prisma.$tbNfPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      idmovimento: number
      tipmov: string | null
      idfor: number | null
      idusuario_alteracao: number | null
      dtinc: Date | null
    }, ExtArgs["result"]["tbMovimentos"]>
    composites: {}
  }


  type tbMovimentosGetPayload<S extends boolean | null | undefined | tbMovimentosDefaultArgs> = $Result.GetResult<Prisma.$tbMovimentosPayload, S>

  type tbMovimentosCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbMovimentosFindManyArgs, 'select' | 'include'> & {
      select?: TbMovimentosCountAggregateInputType | true
    }

  export interface tbMovimentosDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbMovimentos'], meta: { name: 'tbMovimentos' } }
    /**
     * Find zero or one TbMovimentos that matches the filter.
     * @param {tbMovimentosFindUniqueArgs} args - Arguments to find a TbMovimentos
     * @example
     * // Get one TbMovimentos
     * const tbMovimentos = await prisma.tbMovimentos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbMovimentosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbMovimentosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbMovimentosClient<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbMovimentos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbMovimentosFindUniqueOrThrowArgs} args - Arguments to find a TbMovimentos
     * @example
     * // Get one TbMovimentos
     * const tbMovimentos = await prisma.tbMovimentos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbMovimentosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbMovimentosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbMovimentosClient<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbMovimentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbMovimentosFindFirstArgs} args - Arguments to find a TbMovimentos
     * @example
     * // Get one TbMovimentos
     * const tbMovimentos = await prisma.tbMovimentos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbMovimentosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbMovimentosFindFirstArgs<ExtArgs>>
    ): Prisma__tbMovimentosClient<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbMovimentos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbMovimentosFindFirstOrThrowArgs} args - Arguments to find a TbMovimentos
     * @example
     * // Get one TbMovimentos
     * const tbMovimentos = await prisma.tbMovimentos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbMovimentosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbMovimentosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbMovimentosClient<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbMovimentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbMovimentosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbMovimentos
     * const tbMovimentos = await prisma.tbMovimentos.findMany()
     * 
     * // Get first 10 TbMovimentos
     * const tbMovimentos = await prisma.tbMovimentos.findMany({ take: 10 })
     * 
     * // Only select the `idmovimento`
     * const tbMovimentosWithIdmovimentoOnly = await prisma.tbMovimentos.findMany({ select: { idmovimento: true } })
     * 
    **/
    findMany<T extends tbMovimentosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbMovimentosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbMovimentos.
     * @param {tbMovimentosCreateArgs} args - Arguments to create a TbMovimentos.
     * @example
     * // Create one TbMovimentos
     * const TbMovimentos = await prisma.tbMovimentos.create({
     *   data: {
     *     // ... data to create a TbMovimentos
     *   }
     * })
     * 
    **/
    create<T extends tbMovimentosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbMovimentosCreateArgs<ExtArgs>>
    ): Prisma__tbMovimentosClient<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbMovimentos.
     *     @param {tbMovimentosCreateManyArgs} args - Arguments to create many TbMovimentos.
     *     @example
     *     // Create many TbMovimentos
     *     const tbMovimentos = await prisma.tbMovimentos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbMovimentosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbMovimentosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbMovimentos.
     * @param {tbMovimentosDeleteArgs} args - Arguments to delete one TbMovimentos.
     * @example
     * // Delete one TbMovimentos
     * const TbMovimentos = await prisma.tbMovimentos.delete({
     *   where: {
     *     // ... filter to delete one TbMovimentos
     *   }
     * })
     * 
    **/
    delete<T extends tbMovimentosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbMovimentosDeleteArgs<ExtArgs>>
    ): Prisma__tbMovimentosClient<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbMovimentos.
     * @param {tbMovimentosUpdateArgs} args - Arguments to update one TbMovimentos.
     * @example
     * // Update one TbMovimentos
     * const tbMovimentos = await prisma.tbMovimentos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbMovimentosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbMovimentosUpdateArgs<ExtArgs>>
    ): Prisma__tbMovimentosClient<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbMovimentos.
     * @param {tbMovimentosDeleteManyArgs} args - Arguments to filter TbMovimentos to delete.
     * @example
     * // Delete a few TbMovimentos
     * const { count } = await prisma.tbMovimentos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbMovimentosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbMovimentosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbMovimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbMovimentosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbMovimentos
     * const tbMovimentos = await prisma.tbMovimentos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbMovimentosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbMovimentosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbMovimentos.
     * @param {tbMovimentosUpsertArgs} args - Arguments to update or create a TbMovimentos.
     * @example
     * // Update or create a TbMovimentos
     * const tbMovimentos = await prisma.tbMovimentos.upsert({
     *   create: {
     *     // ... data to create a TbMovimentos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbMovimentos we want to update
     *   }
     * })
    **/
    upsert<T extends tbMovimentosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbMovimentosUpsertArgs<ExtArgs>>
    ): Prisma__tbMovimentosClient<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbMovimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbMovimentosCountArgs} args - Arguments to filter TbMovimentos to count.
     * @example
     * // Count the number of TbMovimentos
     * const count = await prisma.tbMovimentos.count({
     *   where: {
     *     // ... the filter for the TbMovimentos we want to count
     *   }
     * })
    **/
    count<T extends tbMovimentosCountArgs>(
      args?: Subset<T, tbMovimentosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbMovimentosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbMovimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbMovimentosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbMovimentosAggregateArgs>(args: Subset<T, TbMovimentosAggregateArgs>): Prisma.PrismaPromise<GetTbMovimentosAggregateType<T>>

    /**
     * Group by TbMovimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbMovimentosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbMovimentosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbMovimentosGroupByArgs['orderBy'] }
        : { orderBy?: tbMovimentosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbMovimentosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbMovimentosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbMovimentos model
   */
  readonly fields: tbMovimentosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbMovimentos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbMovimentosClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbFornecedores<T extends tbMovimentos$tbFornecedoresArgs<ExtArgs> = {}>(args?: Subset<T, tbMovimentos$tbFornecedoresArgs<ExtArgs>>): Prisma__tbFornecedoresClient<$Result.GetResult<Prisma.$tbFornecedoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbUsuarios<T extends tbMovimentos$tbUsuariosArgs<ExtArgs> = {}>(args?: Subset<T, tbMovimentos$tbUsuariosArgs<ExtArgs>>): Prisma__tbUsuariosClient<$Result.GetResult<Prisma.$tbUsuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbMovitens<T extends tbMovimentos$tbMovitensArgs<ExtArgs> = {}>(args?: Subset<T, tbMovimentos$tbMovitensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbNf<T extends tbMovimentos$tbNfArgs<ExtArgs> = {}>(args?: Subset<T, tbMovimentos$tbNfArgs<ExtArgs>>): Prisma__tbNfClient<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbMovimentos model
   */ 
  interface tbMovimentosFieldRefs {
    readonly idmovimento: FieldRef<"tbMovimentos", 'Int'>
    readonly tipmov: FieldRef<"tbMovimentos", 'String'>
    readonly idfor: FieldRef<"tbMovimentos", 'Int'>
    readonly idusuario_alteracao: FieldRef<"tbMovimentos", 'Int'>
    readonly dtinc: FieldRef<"tbMovimentos", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * tbMovimentos findUnique
   */
  export type tbMovimentosFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
    /**
     * Filter, which tbMovimentos to fetch.
     */
    where: tbMovimentosWhereUniqueInput
  }


  /**
   * tbMovimentos findUniqueOrThrow
   */
  export type tbMovimentosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
    /**
     * Filter, which tbMovimentos to fetch.
     */
    where: tbMovimentosWhereUniqueInput
  }


  /**
   * tbMovimentos findFirst
   */
  export type tbMovimentosFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
    /**
     * Filter, which tbMovimentos to fetch.
     */
    where?: tbMovimentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbMovimentos to fetch.
     */
    orderBy?: tbMovimentosOrderByWithRelationInput | tbMovimentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbMovimentos.
     */
    cursor?: tbMovimentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbMovimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbMovimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbMovimentos.
     */
    distinct?: TbMovimentosScalarFieldEnum | TbMovimentosScalarFieldEnum[]
  }


  /**
   * tbMovimentos findFirstOrThrow
   */
  export type tbMovimentosFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
    /**
     * Filter, which tbMovimentos to fetch.
     */
    where?: tbMovimentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbMovimentos to fetch.
     */
    orderBy?: tbMovimentosOrderByWithRelationInput | tbMovimentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbMovimentos.
     */
    cursor?: tbMovimentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbMovimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbMovimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbMovimentos.
     */
    distinct?: TbMovimentosScalarFieldEnum | TbMovimentosScalarFieldEnum[]
  }


  /**
   * tbMovimentos findMany
   */
  export type tbMovimentosFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
    /**
     * Filter, which tbMovimentos to fetch.
     */
    where?: tbMovimentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbMovimentos to fetch.
     */
    orderBy?: tbMovimentosOrderByWithRelationInput | tbMovimentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbMovimentos.
     */
    cursor?: tbMovimentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbMovimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbMovimentos.
     */
    skip?: number
    distinct?: TbMovimentosScalarFieldEnum | TbMovimentosScalarFieldEnum[]
  }


  /**
   * tbMovimentos create
   */
  export type tbMovimentosCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbMovimentos.
     */
    data?: XOR<tbMovimentosCreateInput, tbMovimentosUncheckedCreateInput>
  }


  /**
   * tbMovimentos createMany
   */
  export type tbMovimentosCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbMovimentos.
     */
    data: tbMovimentosCreateManyInput | tbMovimentosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbMovimentos update
   */
  export type tbMovimentosUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbMovimentos.
     */
    data: XOR<tbMovimentosUpdateInput, tbMovimentosUncheckedUpdateInput>
    /**
     * Choose, which tbMovimentos to update.
     */
    where: tbMovimentosWhereUniqueInput
  }


  /**
   * tbMovimentos updateMany
   */
  export type tbMovimentosUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbMovimentos.
     */
    data: XOR<tbMovimentosUpdateManyMutationInput, tbMovimentosUncheckedUpdateManyInput>
    /**
     * Filter which tbMovimentos to update
     */
    where?: tbMovimentosWhereInput
  }


  /**
   * tbMovimentos upsert
   */
  export type tbMovimentosUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbMovimentos to update in case it exists.
     */
    where: tbMovimentosWhereUniqueInput
    /**
     * In case the tbMovimentos found by the `where` argument doesn't exist, create a new tbMovimentos with this data.
     */
    create: XOR<tbMovimentosCreateInput, tbMovimentosUncheckedCreateInput>
    /**
     * In case the tbMovimentos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbMovimentosUpdateInput, tbMovimentosUncheckedUpdateInput>
  }


  /**
   * tbMovimentos delete
   */
  export type tbMovimentosDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
    /**
     * Filter which tbMovimentos to delete.
     */
    where: tbMovimentosWhereUniqueInput
  }


  /**
   * tbMovimentos deleteMany
   */
  export type tbMovimentosDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbMovimentos to delete
     */
    where?: tbMovimentosWhereInput
  }


  /**
   * tbMovimentos.tbFornecedores
   */
  export type tbMovimentos$tbFornecedoresArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbFornecedores
     */
    select?: tbFornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbFornecedoresInclude<ExtArgs> | null
    where?: tbFornecedoresWhereInput
  }


  /**
   * tbMovimentos.tbUsuarios
   */
  export type tbMovimentos$tbUsuariosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUsuarios
     */
    select?: tbUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUsuariosInclude<ExtArgs> | null
    where?: tbUsuariosWhereInput
  }


  /**
   * tbMovimentos.tbMovitens
   */
  export type tbMovimentos$tbMovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    where?: tbMovitensWhereInput
    orderBy?: tbMovitensOrderByWithRelationInput | tbMovitensOrderByWithRelationInput[]
    cursor?: tbMovitensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbMovitensScalarFieldEnum | TbMovitensScalarFieldEnum[]
  }


  /**
   * tbMovimentos.tbNf
   */
  export type tbMovimentos$tbNfArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
    where?: tbNfWhereInput
  }


  /**
   * tbMovimentos without action
   */
  export type tbMovimentosDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
  }



  /**
   * Model tbUsuarios
   */

  export type AggregateTbUsuarios = {
    _count: TbUsuariosCountAggregateOutputType | null
    _avg: TbUsuariosAvgAggregateOutputType | null
    _sum: TbUsuariosSumAggregateOutputType | null
    _min: TbUsuariosMinAggregateOutputType | null
    _max: TbUsuariosMaxAggregateOutputType | null
  }

  export type TbUsuariosAvgAggregateOutputType = {
    idusuario: number | null
  }

  export type TbUsuariosSumAggregateOutputType = {
    idusuario: number | null
  }

  export type TbUsuariosMinAggregateOutputType = {
    idusuario: number | null
    usu_login: string | null
    nome: string | null
    senha: string | null
    dtcriacao: Date | null
    usu_admin: boolean | null
  }

  export type TbUsuariosMaxAggregateOutputType = {
    idusuario: number | null
    usu_login: string | null
    nome: string | null
    senha: string | null
    dtcriacao: Date | null
    usu_admin: boolean | null
  }

  export type TbUsuariosCountAggregateOutputType = {
    idusuario: number
    usu_login: number
    nome: number
    senha: number
    dtcriacao: number
    usu_admin: number
    _all: number
  }


  export type TbUsuariosAvgAggregateInputType = {
    idusuario?: true
  }

  export type TbUsuariosSumAggregateInputType = {
    idusuario?: true
  }

  export type TbUsuariosMinAggregateInputType = {
    idusuario?: true
    usu_login?: true
    nome?: true
    senha?: true
    dtcriacao?: true
    usu_admin?: true
  }

  export type TbUsuariosMaxAggregateInputType = {
    idusuario?: true
    usu_login?: true
    nome?: true
    senha?: true
    dtcriacao?: true
    usu_admin?: true
  }

  export type TbUsuariosCountAggregateInputType = {
    idusuario?: true
    usu_login?: true
    nome?: true
    senha?: true
    dtcriacao?: true
    usu_admin?: true
    _all?: true
  }

  export type TbUsuariosAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbUsuarios to aggregate.
     */
    where?: tbUsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbUsuarios to fetch.
     */
    orderBy?: tbUsuariosOrderByWithRelationInput | tbUsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbUsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbUsuarios
    **/
    _count?: true | TbUsuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbUsuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbUsuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbUsuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbUsuariosMaxAggregateInputType
  }

  export type GetTbUsuariosAggregateType<T extends TbUsuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbUsuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbUsuarios[P]>
      : GetScalarType<T[P], AggregateTbUsuarios[P]>
  }




  export type tbUsuariosGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbUsuariosWhereInput
    orderBy?: tbUsuariosOrderByWithAggregationInput | tbUsuariosOrderByWithAggregationInput[]
    by: TbUsuariosScalarFieldEnum[] | TbUsuariosScalarFieldEnum
    having?: tbUsuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbUsuariosCountAggregateInputType | true
    _avg?: TbUsuariosAvgAggregateInputType
    _sum?: TbUsuariosSumAggregateInputType
    _min?: TbUsuariosMinAggregateInputType
    _max?: TbUsuariosMaxAggregateInputType
  }

  export type TbUsuariosGroupByOutputType = {
    idusuario: number
    usu_login: string | null
    nome: string | null
    senha: string | null
    dtcriacao: Date | null
    usu_admin: boolean | null
    _count: TbUsuariosCountAggregateOutputType | null
    _avg: TbUsuariosAvgAggregateOutputType | null
    _sum: TbUsuariosSumAggregateOutputType | null
    _min: TbUsuariosMinAggregateOutputType | null
    _max: TbUsuariosMaxAggregateOutputType | null
  }

  type GetTbUsuariosGroupByPayload<T extends tbUsuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbUsuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbUsuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbUsuariosGroupByOutputType[P]>
            : GetScalarType<T[P], TbUsuariosGroupByOutputType[P]>
        }
      >
    >


  export type tbUsuariosSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idusuario?: boolean
    usu_login?: boolean
    nome?: boolean
    senha?: boolean
    dtcriacao?: boolean
    usu_admin?: boolean
    tbMovimentos?: boolean | tbUsuarios$tbMovimentosArgs<ExtArgs>
    tbNf?: boolean | tbUsuarios$tbNfArgs<ExtArgs>
    _count?: boolean | TbUsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbUsuarios"]>

  export type tbUsuariosSelectScalar = {
    idusuario?: boolean
    usu_login?: boolean
    nome?: boolean
    senha?: boolean
    dtcriacao?: boolean
    usu_admin?: boolean
  }

  export type tbUsuariosInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbMovimentos?: boolean | tbUsuarios$tbMovimentosArgs<ExtArgs>
    tbNf?: boolean | tbUsuarios$tbNfArgs<ExtArgs>
    _count?: boolean | TbUsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbUsuariosPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbUsuarios"
    objects: {
      tbMovimentos: Prisma.$tbMovimentosPayload<ExtArgs>[]
      tbNf: Prisma.$tbNfPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idusuario: number
      usu_login: string | null
      nome: string | null
      senha: string | null
      dtcriacao: Date | null
      usu_admin: boolean | null
    }, ExtArgs["result"]["tbUsuarios"]>
    composites: {}
  }


  type tbUsuariosGetPayload<S extends boolean | null | undefined | tbUsuariosDefaultArgs> = $Result.GetResult<Prisma.$tbUsuariosPayload, S>

  type tbUsuariosCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbUsuariosFindManyArgs, 'select' | 'include'> & {
      select?: TbUsuariosCountAggregateInputType | true
    }

  export interface tbUsuariosDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbUsuarios'], meta: { name: 'tbUsuarios' } }
    /**
     * Find zero or one TbUsuarios that matches the filter.
     * @param {tbUsuariosFindUniqueArgs} args - Arguments to find a TbUsuarios
     * @example
     * // Get one TbUsuarios
     * const tbUsuarios = await prisma.tbUsuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbUsuariosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbUsuariosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbUsuariosClient<$Result.GetResult<Prisma.$tbUsuariosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbUsuarios that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbUsuariosFindUniqueOrThrowArgs} args - Arguments to find a TbUsuarios
     * @example
     * // Get one TbUsuarios
     * const tbUsuarios = await prisma.tbUsuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbUsuariosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbUsuariosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbUsuariosClient<$Result.GetResult<Prisma.$tbUsuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbUsuariosFindFirstArgs} args - Arguments to find a TbUsuarios
     * @example
     * // Get one TbUsuarios
     * const tbUsuarios = await prisma.tbUsuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbUsuariosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbUsuariosFindFirstArgs<ExtArgs>>
    ): Prisma__tbUsuariosClient<$Result.GetResult<Prisma.$tbUsuariosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbUsuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbUsuariosFindFirstOrThrowArgs} args - Arguments to find a TbUsuarios
     * @example
     * // Get one TbUsuarios
     * const tbUsuarios = await prisma.tbUsuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbUsuariosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbUsuariosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbUsuariosClient<$Result.GetResult<Prisma.$tbUsuariosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbUsuariosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbUsuarios
     * const tbUsuarios = await prisma.tbUsuarios.findMany()
     * 
     * // Get first 10 TbUsuarios
     * const tbUsuarios = await prisma.tbUsuarios.findMany({ take: 10 })
     * 
     * // Only select the `idusuario`
     * const tbUsuariosWithIdusuarioOnly = await prisma.tbUsuarios.findMany({ select: { idusuario: true } })
     * 
    **/
    findMany<T extends tbUsuariosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbUsuariosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbUsuariosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbUsuarios.
     * @param {tbUsuariosCreateArgs} args - Arguments to create a TbUsuarios.
     * @example
     * // Create one TbUsuarios
     * const TbUsuarios = await prisma.tbUsuarios.create({
     *   data: {
     *     // ... data to create a TbUsuarios
     *   }
     * })
     * 
    **/
    create<T extends tbUsuariosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbUsuariosCreateArgs<ExtArgs>>
    ): Prisma__tbUsuariosClient<$Result.GetResult<Prisma.$tbUsuariosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbUsuarios.
     *     @param {tbUsuariosCreateManyArgs} args - Arguments to create many TbUsuarios.
     *     @example
     *     // Create many TbUsuarios
     *     const tbUsuarios = await prisma.tbUsuarios.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbUsuariosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbUsuariosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbUsuarios.
     * @param {tbUsuariosDeleteArgs} args - Arguments to delete one TbUsuarios.
     * @example
     * // Delete one TbUsuarios
     * const TbUsuarios = await prisma.tbUsuarios.delete({
     *   where: {
     *     // ... filter to delete one TbUsuarios
     *   }
     * })
     * 
    **/
    delete<T extends tbUsuariosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbUsuariosDeleteArgs<ExtArgs>>
    ): Prisma__tbUsuariosClient<$Result.GetResult<Prisma.$tbUsuariosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbUsuarios.
     * @param {tbUsuariosUpdateArgs} args - Arguments to update one TbUsuarios.
     * @example
     * // Update one TbUsuarios
     * const tbUsuarios = await prisma.tbUsuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbUsuariosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbUsuariosUpdateArgs<ExtArgs>>
    ): Prisma__tbUsuariosClient<$Result.GetResult<Prisma.$tbUsuariosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbUsuarios.
     * @param {tbUsuariosDeleteManyArgs} args - Arguments to filter TbUsuarios to delete.
     * @example
     * // Delete a few TbUsuarios
     * const { count } = await prisma.tbUsuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbUsuariosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbUsuariosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbUsuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbUsuarios
     * const tbUsuarios = await prisma.tbUsuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbUsuariosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbUsuariosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbUsuarios.
     * @param {tbUsuariosUpsertArgs} args - Arguments to update or create a TbUsuarios.
     * @example
     * // Update or create a TbUsuarios
     * const tbUsuarios = await prisma.tbUsuarios.upsert({
     *   create: {
     *     // ... data to create a TbUsuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbUsuarios we want to update
     *   }
     * })
    **/
    upsert<T extends tbUsuariosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbUsuariosUpsertArgs<ExtArgs>>
    ): Prisma__tbUsuariosClient<$Result.GetResult<Prisma.$tbUsuariosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbUsuariosCountArgs} args - Arguments to filter TbUsuarios to count.
     * @example
     * // Count the number of TbUsuarios
     * const count = await prisma.tbUsuarios.count({
     *   where: {
     *     // ... the filter for the TbUsuarios we want to count
     *   }
     * })
    **/
    count<T extends tbUsuariosCountArgs>(
      args?: Subset<T, tbUsuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbUsuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbUsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbUsuariosAggregateArgs>(args: Subset<T, TbUsuariosAggregateArgs>): Prisma.PrismaPromise<GetTbUsuariosAggregateType<T>>

    /**
     * Group by TbUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbUsuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbUsuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbUsuariosGroupByArgs['orderBy'] }
        : { orderBy?: tbUsuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbUsuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbUsuarios model
   */
  readonly fields: tbUsuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbUsuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbUsuariosClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbMovimentos<T extends tbUsuarios$tbMovimentosArgs<ExtArgs> = {}>(args?: Subset<T, tbUsuarios$tbMovimentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbNf<T extends tbUsuarios$tbNfArgs<ExtArgs> = {}>(args?: Subset<T, tbUsuarios$tbNfArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbUsuarios model
   */ 
  interface tbUsuariosFieldRefs {
    readonly idusuario: FieldRef<"tbUsuarios", 'Int'>
    readonly usu_login: FieldRef<"tbUsuarios", 'String'>
    readonly nome: FieldRef<"tbUsuarios", 'String'>
    readonly senha: FieldRef<"tbUsuarios", 'String'>
    readonly dtcriacao: FieldRef<"tbUsuarios", 'DateTime'>
    readonly usu_admin: FieldRef<"tbUsuarios", 'Boolean'>
  }
    

  // Custom InputTypes

  /**
   * tbUsuarios findUnique
   */
  export type tbUsuariosFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUsuarios
     */
    select?: tbUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUsuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbUsuarios to fetch.
     */
    where: tbUsuariosWhereUniqueInput
  }


  /**
   * tbUsuarios findUniqueOrThrow
   */
  export type tbUsuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUsuarios
     */
    select?: tbUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUsuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbUsuarios to fetch.
     */
    where: tbUsuariosWhereUniqueInput
  }


  /**
   * tbUsuarios findFirst
   */
  export type tbUsuariosFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUsuarios
     */
    select?: tbUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUsuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbUsuarios to fetch.
     */
    where?: tbUsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbUsuarios to fetch.
     */
    orderBy?: tbUsuariosOrderByWithRelationInput | tbUsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbUsuarios.
     */
    cursor?: tbUsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbUsuarios.
     */
    distinct?: TbUsuariosScalarFieldEnum | TbUsuariosScalarFieldEnum[]
  }


  /**
   * tbUsuarios findFirstOrThrow
   */
  export type tbUsuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUsuarios
     */
    select?: tbUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUsuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbUsuarios to fetch.
     */
    where?: tbUsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbUsuarios to fetch.
     */
    orderBy?: tbUsuariosOrderByWithRelationInput | tbUsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbUsuarios.
     */
    cursor?: tbUsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbUsuarios.
     */
    distinct?: TbUsuariosScalarFieldEnum | TbUsuariosScalarFieldEnum[]
  }


  /**
   * tbUsuarios findMany
   */
  export type tbUsuariosFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUsuarios
     */
    select?: tbUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUsuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbUsuarios to fetch.
     */
    where?: tbUsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbUsuarios to fetch.
     */
    orderBy?: tbUsuariosOrderByWithRelationInput | tbUsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbUsuarios.
     */
    cursor?: tbUsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbUsuarios.
     */
    skip?: number
    distinct?: TbUsuariosScalarFieldEnum | TbUsuariosScalarFieldEnum[]
  }


  /**
   * tbUsuarios create
   */
  export type tbUsuariosCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUsuarios
     */
    select?: tbUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUsuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbUsuarios.
     */
    data?: XOR<tbUsuariosCreateInput, tbUsuariosUncheckedCreateInput>
  }


  /**
   * tbUsuarios createMany
   */
  export type tbUsuariosCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbUsuarios.
     */
    data: tbUsuariosCreateManyInput | tbUsuariosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbUsuarios update
   */
  export type tbUsuariosUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUsuarios
     */
    select?: tbUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUsuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbUsuarios.
     */
    data: XOR<tbUsuariosUpdateInput, tbUsuariosUncheckedUpdateInput>
    /**
     * Choose, which tbUsuarios to update.
     */
    where: tbUsuariosWhereUniqueInput
  }


  /**
   * tbUsuarios updateMany
   */
  export type tbUsuariosUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbUsuarios.
     */
    data: XOR<tbUsuariosUpdateManyMutationInput, tbUsuariosUncheckedUpdateManyInput>
    /**
     * Filter which tbUsuarios to update
     */
    where?: tbUsuariosWhereInput
  }


  /**
   * tbUsuarios upsert
   */
  export type tbUsuariosUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUsuarios
     */
    select?: tbUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUsuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbUsuarios to update in case it exists.
     */
    where: tbUsuariosWhereUniqueInput
    /**
     * In case the tbUsuarios found by the `where` argument doesn't exist, create a new tbUsuarios with this data.
     */
    create: XOR<tbUsuariosCreateInput, tbUsuariosUncheckedCreateInput>
    /**
     * In case the tbUsuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbUsuariosUpdateInput, tbUsuariosUncheckedUpdateInput>
  }


  /**
   * tbUsuarios delete
   */
  export type tbUsuariosDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUsuarios
     */
    select?: tbUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUsuariosInclude<ExtArgs> | null
    /**
     * Filter which tbUsuarios to delete.
     */
    where: tbUsuariosWhereUniqueInput
  }


  /**
   * tbUsuarios deleteMany
   */
  export type tbUsuariosDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbUsuarios to delete
     */
    where?: tbUsuariosWhereInput
  }


  /**
   * tbUsuarios.tbMovimentos
   */
  export type tbUsuarios$tbMovimentosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
    where?: tbMovimentosWhereInput
    orderBy?: tbMovimentosOrderByWithRelationInput | tbMovimentosOrderByWithRelationInput[]
    cursor?: tbMovimentosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbMovimentosScalarFieldEnum | TbMovimentosScalarFieldEnum[]
  }


  /**
   * tbUsuarios.tbNf
   */
  export type tbUsuarios$tbNfArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
    where?: tbNfWhereInput
    orderBy?: tbNfOrderByWithRelationInput | tbNfOrderByWithRelationInput[]
    cursor?: tbNfWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbNfScalarFieldEnum | TbNfScalarFieldEnum[]
  }


  /**
   * tbUsuarios without action
   */
  export type tbUsuariosDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUsuarios
     */
    select?: tbUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUsuariosInclude<ExtArgs> | null
  }



  /**
   * Model tbMovitens
   */

  export type AggregateTbMovitens = {
    _count: TbMovitensCountAggregateOutputType | null
    _avg: TbMovitensAvgAggregateOutputType | null
    _sum: TbMovitensSumAggregateOutputType | null
    _min: TbMovitensMinAggregateOutputType | null
    _max: TbMovitensMaxAggregateOutputType | null
  }

  export type TbMovitensAvgAggregateOutputType = {
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    idlocal: number | null
    quantidade: Decimal | null
  }

  export type TbMovitensSumAggregateOutputType = {
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    idlocal: number | null
    quantidade: Decimal | null
  }

  export type TbMovitensMinAggregateOutputType = {
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    idlocal: number | null
    dtinc: Date | null
    quantidade: Decimal | null
  }

  export type TbMovitensMaxAggregateOutputType = {
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    idlocal: number | null
    dtinc: Date | null
    quantidade: Decimal | null
  }

  export type TbMovitensCountAggregateOutputType = {
    idmovimento: number
    seqitem: number
    idproduto: number
    idlocal: number
    dtinc: number
    quantidade: number
    _all: number
  }


  export type TbMovitensAvgAggregateInputType = {
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
  }

  export type TbMovitensSumAggregateInputType = {
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
  }

  export type TbMovitensMinAggregateInputType = {
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    idlocal?: true
    dtinc?: true
    quantidade?: true
  }

  export type TbMovitensMaxAggregateInputType = {
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    idlocal?: true
    dtinc?: true
    quantidade?: true
  }

  export type TbMovitensCountAggregateInputType = {
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    idlocal?: true
    dtinc?: true
    quantidade?: true
    _all?: true
  }

  export type TbMovitensAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbMovitens to aggregate.
     */
    where?: tbMovitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbMovitens to fetch.
     */
    orderBy?: tbMovitensOrderByWithRelationInput | tbMovitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbMovitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbMovitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbMovitens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbMovitens
    **/
    _count?: true | TbMovitensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbMovitensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbMovitensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbMovitensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbMovitensMaxAggregateInputType
  }

  export type GetTbMovitensAggregateType<T extends TbMovitensAggregateArgs> = {
        [P in keyof T & keyof AggregateTbMovitens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbMovitens[P]>
      : GetScalarType<T[P], AggregateTbMovitens[P]>
  }




  export type tbMovitensGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbMovitensWhereInput
    orderBy?: tbMovitensOrderByWithAggregationInput | tbMovitensOrderByWithAggregationInput[]
    by: TbMovitensScalarFieldEnum[] | TbMovitensScalarFieldEnum
    having?: tbMovitensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbMovitensCountAggregateInputType | true
    _avg?: TbMovitensAvgAggregateInputType
    _sum?: TbMovitensSumAggregateInputType
    _min?: TbMovitensMinAggregateInputType
    _max?: TbMovitensMaxAggregateInputType
  }

  export type TbMovitensGroupByOutputType = {
    idmovimento: number
    seqitem: number
    idproduto: number
    idlocal: number | null
    dtinc: Date | null
    quantidade: Decimal | null
    _count: TbMovitensCountAggregateOutputType | null
    _avg: TbMovitensAvgAggregateOutputType | null
    _sum: TbMovitensSumAggregateOutputType | null
    _min: TbMovitensMinAggregateOutputType | null
    _max: TbMovitensMaxAggregateOutputType | null
  }

  type GetTbMovitensGroupByPayload<T extends tbMovitensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbMovitensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbMovitensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbMovitensGroupByOutputType[P]>
            : GetScalarType<T[P], TbMovitensGroupByOutputType[P]>
        }
      >
    >


  export type tbMovitensSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idmovimento?: boolean
    seqitem?: boolean
    idproduto?: boolean
    idlocal?: boolean
    dtinc?: boolean
    quantidade?: boolean
    tbLocais?: boolean | tbMovitens$tbLocaisArgs<ExtArgs>
    tbMovimentos?: boolean | tbMovimentosDefaultArgs<ExtArgs>
    tbProdutos?: boolean | tbProdutosDefaultArgs<ExtArgs>
    tbNfitens?: boolean | tbMovitens$tbNfitensArgs<ExtArgs>
    _count?: boolean | TbMovitensCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbMovitens"]>

  export type tbMovitensSelectScalar = {
    idmovimento?: boolean
    seqitem?: boolean
    idproduto?: boolean
    idlocal?: boolean
    dtinc?: boolean
    quantidade?: boolean
  }

  export type tbMovitensInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbLocais?: boolean | tbMovitens$tbLocaisArgs<ExtArgs>
    tbMovimentos?: boolean | tbMovimentosDefaultArgs<ExtArgs>
    tbProdutos?: boolean | tbProdutosDefaultArgs<ExtArgs>
    tbNfitens?: boolean | tbMovitens$tbNfitensArgs<ExtArgs>
    _count?: boolean | TbMovitensCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbMovitensPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbMovitens"
    objects: {
      tbLocais: Prisma.$tbLocaisPayload<ExtArgs> | null
      tbMovimentos: Prisma.$tbMovimentosPayload<ExtArgs>
      tbProdutos: Prisma.$tbProdutosPayload<ExtArgs>
      tbNfitens: Prisma.$tbNfitensPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idmovimento: number
      seqitem: number
      idproduto: number
      idlocal: number | null
      dtinc: Date | null
      quantidade: Prisma.Decimal | null
    }, ExtArgs["result"]["tbMovitens"]>
    composites: {}
  }


  type tbMovitensGetPayload<S extends boolean | null | undefined | tbMovitensDefaultArgs> = $Result.GetResult<Prisma.$tbMovitensPayload, S>

  type tbMovitensCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbMovitensFindManyArgs, 'select' | 'include'> & {
      select?: TbMovitensCountAggregateInputType | true
    }

  export interface tbMovitensDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbMovitens'], meta: { name: 'tbMovitens' } }
    /**
     * Find zero or one TbMovitens that matches the filter.
     * @param {tbMovitensFindUniqueArgs} args - Arguments to find a TbMovitens
     * @example
     * // Get one TbMovitens
     * const tbMovitens = await prisma.tbMovitens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbMovitensFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbMovitensFindUniqueArgs<ExtArgs>>
    ): Prisma__tbMovitensClient<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbMovitens that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbMovitensFindUniqueOrThrowArgs} args - Arguments to find a TbMovitens
     * @example
     * // Get one TbMovitens
     * const tbMovitens = await prisma.tbMovitens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbMovitensFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbMovitensFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbMovitensClient<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbMovitens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbMovitensFindFirstArgs} args - Arguments to find a TbMovitens
     * @example
     * // Get one TbMovitens
     * const tbMovitens = await prisma.tbMovitens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbMovitensFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbMovitensFindFirstArgs<ExtArgs>>
    ): Prisma__tbMovitensClient<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbMovitens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbMovitensFindFirstOrThrowArgs} args - Arguments to find a TbMovitens
     * @example
     * // Get one TbMovitens
     * const tbMovitens = await prisma.tbMovitens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbMovitensFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbMovitensFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbMovitensClient<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbMovitens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbMovitensFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbMovitens
     * const tbMovitens = await prisma.tbMovitens.findMany()
     * 
     * // Get first 10 TbMovitens
     * const tbMovitens = await prisma.tbMovitens.findMany({ take: 10 })
     * 
     * // Only select the `idmovimento`
     * const tbMovitensWithIdmovimentoOnly = await prisma.tbMovitens.findMany({ select: { idmovimento: true } })
     * 
    **/
    findMany<T extends tbMovitensFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbMovitensFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbMovitens.
     * @param {tbMovitensCreateArgs} args - Arguments to create a TbMovitens.
     * @example
     * // Create one TbMovitens
     * const TbMovitens = await prisma.tbMovitens.create({
     *   data: {
     *     // ... data to create a TbMovitens
     *   }
     * })
     * 
    **/
    create<T extends tbMovitensCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbMovitensCreateArgs<ExtArgs>>
    ): Prisma__tbMovitensClient<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbMovitens.
     *     @param {tbMovitensCreateManyArgs} args - Arguments to create many TbMovitens.
     *     @example
     *     // Create many TbMovitens
     *     const tbMovitens = await prisma.tbMovitens.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbMovitensCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbMovitensCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbMovitens.
     * @param {tbMovitensDeleteArgs} args - Arguments to delete one TbMovitens.
     * @example
     * // Delete one TbMovitens
     * const TbMovitens = await prisma.tbMovitens.delete({
     *   where: {
     *     // ... filter to delete one TbMovitens
     *   }
     * })
     * 
    **/
    delete<T extends tbMovitensDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbMovitensDeleteArgs<ExtArgs>>
    ): Prisma__tbMovitensClient<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbMovitens.
     * @param {tbMovitensUpdateArgs} args - Arguments to update one TbMovitens.
     * @example
     * // Update one TbMovitens
     * const tbMovitens = await prisma.tbMovitens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbMovitensUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbMovitensUpdateArgs<ExtArgs>>
    ): Prisma__tbMovitensClient<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbMovitens.
     * @param {tbMovitensDeleteManyArgs} args - Arguments to filter TbMovitens to delete.
     * @example
     * // Delete a few TbMovitens
     * const { count } = await prisma.tbMovitens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbMovitensDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbMovitensDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbMovitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbMovitensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbMovitens
     * const tbMovitens = await prisma.tbMovitens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbMovitensUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbMovitensUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbMovitens.
     * @param {tbMovitensUpsertArgs} args - Arguments to update or create a TbMovitens.
     * @example
     * // Update or create a TbMovitens
     * const tbMovitens = await prisma.tbMovitens.upsert({
     *   create: {
     *     // ... data to create a TbMovitens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbMovitens we want to update
     *   }
     * })
    **/
    upsert<T extends tbMovitensUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbMovitensUpsertArgs<ExtArgs>>
    ): Prisma__tbMovitensClient<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbMovitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbMovitensCountArgs} args - Arguments to filter TbMovitens to count.
     * @example
     * // Count the number of TbMovitens
     * const count = await prisma.tbMovitens.count({
     *   where: {
     *     // ... the filter for the TbMovitens we want to count
     *   }
     * })
    **/
    count<T extends tbMovitensCountArgs>(
      args?: Subset<T, tbMovitensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbMovitensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbMovitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbMovitensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbMovitensAggregateArgs>(args: Subset<T, TbMovitensAggregateArgs>): Prisma.PrismaPromise<GetTbMovitensAggregateType<T>>

    /**
     * Group by TbMovitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbMovitensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbMovitensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbMovitensGroupByArgs['orderBy'] }
        : { orderBy?: tbMovitensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbMovitensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbMovitensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbMovitens model
   */
  readonly fields: tbMovitensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbMovitens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbMovitensClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbLocais<T extends tbMovitens$tbLocaisArgs<ExtArgs> = {}>(args?: Subset<T, tbMovitens$tbLocaisArgs<ExtArgs>>): Prisma__tbLocaisClient<$Result.GetResult<Prisma.$tbLocaisPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbMovimentos<T extends tbMovimentosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbMovimentosDefaultArgs<ExtArgs>>): Prisma__tbMovimentosClient<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbProdutos<T extends tbProdutosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbProdutosDefaultArgs<ExtArgs>>): Prisma__tbProdutosClient<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbNfitens<T extends tbMovitens$tbNfitensArgs<ExtArgs> = {}>(args?: Subset<T, tbMovitens$tbNfitensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbNfitensPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbMovitens model
   */ 
  interface tbMovitensFieldRefs {
    readonly idmovimento: FieldRef<"tbMovitens", 'Int'>
    readonly seqitem: FieldRef<"tbMovitens", 'Int'>
    readonly idproduto: FieldRef<"tbMovitens", 'Int'>
    readonly idlocal: FieldRef<"tbMovitens", 'Int'>
    readonly dtinc: FieldRef<"tbMovitens", 'DateTime'>
    readonly quantidade: FieldRef<"tbMovitens", 'Decimal'>
  }
    

  // Custom InputTypes

  /**
   * tbMovitens findUnique
   */
  export type tbMovitensFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    /**
     * Filter, which tbMovitens to fetch.
     */
    where: tbMovitensWhereUniqueInput
  }


  /**
   * tbMovitens findUniqueOrThrow
   */
  export type tbMovitensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    /**
     * Filter, which tbMovitens to fetch.
     */
    where: tbMovitensWhereUniqueInput
  }


  /**
   * tbMovitens findFirst
   */
  export type tbMovitensFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    /**
     * Filter, which tbMovitens to fetch.
     */
    where?: tbMovitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbMovitens to fetch.
     */
    orderBy?: tbMovitensOrderByWithRelationInput | tbMovitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbMovitens.
     */
    cursor?: tbMovitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbMovitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbMovitens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbMovitens.
     */
    distinct?: TbMovitensScalarFieldEnum | TbMovitensScalarFieldEnum[]
  }


  /**
   * tbMovitens findFirstOrThrow
   */
  export type tbMovitensFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    /**
     * Filter, which tbMovitens to fetch.
     */
    where?: tbMovitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbMovitens to fetch.
     */
    orderBy?: tbMovitensOrderByWithRelationInput | tbMovitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbMovitens.
     */
    cursor?: tbMovitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbMovitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbMovitens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbMovitens.
     */
    distinct?: TbMovitensScalarFieldEnum | TbMovitensScalarFieldEnum[]
  }


  /**
   * tbMovitens findMany
   */
  export type tbMovitensFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    /**
     * Filter, which tbMovitens to fetch.
     */
    where?: tbMovitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbMovitens to fetch.
     */
    orderBy?: tbMovitensOrderByWithRelationInput | tbMovitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbMovitens.
     */
    cursor?: tbMovitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbMovitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbMovitens.
     */
    skip?: number
    distinct?: TbMovitensScalarFieldEnum | TbMovitensScalarFieldEnum[]
  }


  /**
   * tbMovitens create
   */
  export type tbMovitensCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    /**
     * The data needed to create a tbMovitens.
     */
    data: XOR<tbMovitensCreateInput, tbMovitensUncheckedCreateInput>
  }


  /**
   * tbMovitens createMany
   */
  export type tbMovitensCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbMovitens.
     */
    data: tbMovitensCreateManyInput | tbMovitensCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbMovitens update
   */
  export type tbMovitensUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    /**
     * The data needed to update a tbMovitens.
     */
    data: XOR<tbMovitensUpdateInput, tbMovitensUncheckedUpdateInput>
    /**
     * Choose, which tbMovitens to update.
     */
    where: tbMovitensWhereUniqueInput
  }


  /**
   * tbMovitens updateMany
   */
  export type tbMovitensUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbMovitens.
     */
    data: XOR<tbMovitensUpdateManyMutationInput, tbMovitensUncheckedUpdateManyInput>
    /**
     * Filter which tbMovitens to update
     */
    where?: tbMovitensWhereInput
  }


  /**
   * tbMovitens upsert
   */
  export type tbMovitensUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    /**
     * The filter to search for the tbMovitens to update in case it exists.
     */
    where: tbMovitensWhereUniqueInput
    /**
     * In case the tbMovitens found by the `where` argument doesn't exist, create a new tbMovitens with this data.
     */
    create: XOR<tbMovitensCreateInput, tbMovitensUncheckedCreateInput>
    /**
     * In case the tbMovitens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbMovitensUpdateInput, tbMovitensUncheckedUpdateInput>
  }


  /**
   * tbMovitens delete
   */
  export type tbMovitensDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    /**
     * Filter which tbMovitens to delete.
     */
    where: tbMovitensWhereUniqueInput
  }


  /**
   * tbMovitens deleteMany
   */
  export type tbMovitensDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbMovitens to delete
     */
    where?: tbMovitensWhereInput
  }


  /**
   * tbMovitens.tbLocais
   */
  export type tbMovitens$tbLocaisArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbLocais
     */
    select?: tbLocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbLocaisInclude<ExtArgs> | null
    where?: tbLocaisWhereInput
  }


  /**
   * tbMovitens.tbNfitens
   */
  export type tbMovitens$tbNfitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNfitens
     */
    select?: tbNfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfitensInclude<ExtArgs> | null
    where?: tbNfitensWhereInput
    orderBy?: tbNfitensOrderByWithRelationInput | tbNfitensOrderByWithRelationInput[]
    cursor?: tbNfitensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbNfitensScalarFieldEnum | TbNfitensScalarFieldEnum[]
  }


  /**
   * tbMovitens without action
   */
  export type tbMovitensDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
  }



  /**
   * Model tbNf
   */

  export type AggregateTbNf = {
    _count: TbNfCountAggregateOutputType | null
    _avg: TbNfAvgAggregateOutputType | null
    _sum: TbNfSumAggregateOutputType | null
    _min: TbNfMinAggregateOutputType | null
    _max: TbNfMaxAggregateOutputType | null
  }

  export type TbNfAvgAggregateOutputType = {
    idnf: number | null
    numnf: number | null
    idmovimento: number | null
    serienf: number | null
    idfor: number | null
    idusuario_inclusao: number | null
    vlrtotal: Decimal | null
  }

  export type TbNfSumAggregateOutputType = {
    idnf: number | null
    numnf: number | null
    idmovimento: number | null
    serienf: number | null
    idfor: number | null
    idusuario_inclusao: number | null
    vlrtotal: Decimal | null
  }

  export type TbNfMinAggregateOutputType = {
    idnf: number | null
    numnf: number | null
    idmovimento: number | null
    serienf: number | null
    idfor: number | null
    idusuario_inclusao: number | null
    dtemissao: Date | null
    vlrtotal: Decimal | null
  }

  export type TbNfMaxAggregateOutputType = {
    idnf: number | null
    numnf: number | null
    idmovimento: number | null
    serienf: number | null
    idfor: number | null
    idusuario_inclusao: number | null
    dtemissao: Date | null
    vlrtotal: Decimal | null
  }

  export type TbNfCountAggregateOutputType = {
    idnf: number
    numnf: number
    idmovimento: number
    serienf: number
    idfor: number
    idusuario_inclusao: number
    dtemissao: number
    vlrtotal: number
    _all: number
  }


  export type TbNfAvgAggregateInputType = {
    idnf?: true
    numnf?: true
    idmovimento?: true
    serienf?: true
    idfor?: true
    idusuario_inclusao?: true
    vlrtotal?: true
  }

  export type TbNfSumAggregateInputType = {
    idnf?: true
    numnf?: true
    idmovimento?: true
    serienf?: true
    idfor?: true
    idusuario_inclusao?: true
    vlrtotal?: true
  }

  export type TbNfMinAggregateInputType = {
    idnf?: true
    numnf?: true
    idmovimento?: true
    serienf?: true
    idfor?: true
    idusuario_inclusao?: true
    dtemissao?: true
    vlrtotal?: true
  }

  export type TbNfMaxAggregateInputType = {
    idnf?: true
    numnf?: true
    idmovimento?: true
    serienf?: true
    idfor?: true
    idusuario_inclusao?: true
    dtemissao?: true
    vlrtotal?: true
  }

  export type TbNfCountAggregateInputType = {
    idnf?: true
    numnf?: true
    idmovimento?: true
    serienf?: true
    idfor?: true
    idusuario_inclusao?: true
    dtemissao?: true
    vlrtotal?: true
    _all?: true
  }

  export type TbNfAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbNf to aggregate.
     */
    where?: tbNfWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbNfs to fetch.
     */
    orderBy?: tbNfOrderByWithRelationInput | tbNfOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbNfWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbNfs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbNfs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbNfs
    **/
    _count?: true | TbNfCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbNfAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbNfSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbNfMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbNfMaxAggregateInputType
  }

  export type GetTbNfAggregateType<T extends TbNfAggregateArgs> = {
        [P in keyof T & keyof AggregateTbNf]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbNf[P]>
      : GetScalarType<T[P], AggregateTbNf[P]>
  }




  export type tbNfGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbNfWhereInput
    orderBy?: tbNfOrderByWithAggregationInput | tbNfOrderByWithAggregationInput[]
    by: TbNfScalarFieldEnum[] | TbNfScalarFieldEnum
    having?: tbNfScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbNfCountAggregateInputType | true
    _avg?: TbNfAvgAggregateInputType
    _sum?: TbNfSumAggregateInputType
    _min?: TbNfMinAggregateInputType
    _max?: TbNfMaxAggregateInputType
  }

  export type TbNfGroupByOutputType = {
    idnf: number
    numnf: number | null
    idmovimento: number | null
    serienf: number | null
    idfor: number | null
    idusuario_inclusao: number | null
    dtemissao: Date | null
    vlrtotal: Decimal | null
    _count: TbNfCountAggregateOutputType | null
    _avg: TbNfAvgAggregateOutputType | null
    _sum: TbNfSumAggregateOutputType | null
    _min: TbNfMinAggregateOutputType | null
    _max: TbNfMaxAggregateOutputType | null
  }

  type GetTbNfGroupByPayload<T extends tbNfGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbNfGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbNfGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbNfGroupByOutputType[P]>
            : GetScalarType<T[P], TbNfGroupByOutputType[P]>
        }
      >
    >


  export type tbNfSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idnf?: boolean
    numnf?: boolean
    idmovimento?: boolean
    serienf?: boolean
    idfor?: boolean
    idusuario_inclusao?: boolean
    dtemissao?: boolean
    vlrtotal?: boolean
    tbMovimentos?: boolean | tbNf$tbMovimentosArgs<ExtArgs>
    tbFornecedores?: boolean | tbNf$tbFornecedoresArgs<ExtArgs>
    tbUsuarios?: boolean | tbNf$tbUsuariosArgs<ExtArgs>
    tbNfitens?: boolean | tbNf$tbNfitensArgs<ExtArgs>
    _count?: boolean | TbNfCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbNf"]>

  export type tbNfSelectScalar = {
    idnf?: boolean
    numnf?: boolean
    idmovimento?: boolean
    serienf?: boolean
    idfor?: boolean
    idusuario_inclusao?: boolean
    dtemissao?: boolean
    vlrtotal?: boolean
  }

  export type tbNfInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbMovimentos?: boolean | tbNf$tbMovimentosArgs<ExtArgs>
    tbFornecedores?: boolean | tbNf$tbFornecedoresArgs<ExtArgs>
    tbUsuarios?: boolean | tbNf$tbUsuariosArgs<ExtArgs>
    tbNfitens?: boolean | tbNf$tbNfitensArgs<ExtArgs>
    _count?: boolean | TbNfCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbNfPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbNf"
    objects: {
      tbMovimentos: Prisma.$tbMovimentosPayload<ExtArgs> | null
      tbFornecedores: Prisma.$tbFornecedoresPayload<ExtArgs> | null
      tbUsuarios: Prisma.$tbUsuariosPayload<ExtArgs> | null
      tbNfitens: Prisma.$tbNfitensPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idnf: number
      numnf: number | null
      idmovimento: number | null
      serienf: number | null
      idfor: number | null
      idusuario_inclusao: number | null
      dtemissao: Date | null
      vlrtotal: Prisma.Decimal | null
    }, ExtArgs["result"]["tbNf"]>
    composites: {}
  }


  type tbNfGetPayload<S extends boolean | null | undefined | tbNfDefaultArgs> = $Result.GetResult<Prisma.$tbNfPayload, S>

  type tbNfCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbNfFindManyArgs, 'select' | 'include'> & {
      select?: TbNfCountAggregateInputType | true
    }

  export interface tbNfDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbNf'], meta: { name: 'tbNf' } }
    /**
     * Find zero or one TbNf that matches the filter.
     * @param {tbNfFindUniqueArgs} args - Arguments to find a TbNf
     * @example
     * // Get one TbNf
     * const tbNf = await prisma.tbNf.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbNfFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbNfFindUniqueArgs<ExtArgs>>
    ): Prisma__tbNfClient<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbNf that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbNfFindUniqueOrThrowArgs} args - Arguments to find a TbNf
     * @example
     * // Get one TbNf
     * const tbNf = await prisma.tbNf.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbNfFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbNfFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbNfClient<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbNf that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbNfFindFirstArgs} args - Arguments to find a TbNf
     * @example
     * // Get one TbNf
     * const tbNf = await prisma.tbNf.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbNfFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbNfFindFirstArgs<ExtArgs>>
    ): Prisma__tbNfClient<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbNf that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbNfFindFirstOrThrowArgs} args - Arguments to find a TbNf
     * @example
     * // Get one TbNf
     * const tbNf = await prisma.tbNf.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbNfFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbNfFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbNfClient<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbNfs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbNfFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbNfs
     * const tbNfs = await prisma.tbNf.findMany()
     * 
     * // Get first 10 TbNfs
     * const tbNfs = await prisma.tbNf.findMany({ take: 10 })
     * 
     * // Only select the `idnf`
     * const tbNfWithIdnfOnly = await prisma.tbNf.findMany({ select: { idnf: true } })
     * 
    **/
    findMany<T extends tbNfFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbNfFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbNf.
     * @param {tbNfCreateArgs} args - Arguments to create a TbNf.
     * @example
     * // Create one TbNf
     * const TbNf = await prisma.tbNf.create({
     *   data: {
     *     // ... data to create a TbNf
     *   }
     * })
     * 
    **/
    create<T extends tbNfCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbNfCreateArgs<ExtArgs>>
    ): Prisma__tbNfClient<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbNfs.
     *     @param {tbNfCreateManyArgs} args - Arguments to create many TbNfs.
     *     @example
     *     // Create many TbNfs
     *     const tbNf = await prisma.tbNf.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbNfCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbNfCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbNf.
     * @param {tbNfDeleteArgs} args - Arguments to delete one TbNf.
     * @example
     * // Delete one TbNf
     * const TbNf = await prisma.tbNf.delete({
     *   where: {
     *     // ... filter to delete one TbNf
     *   }
     * })
     * 
    **/
    delete<T extends tbNfDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbNfDeleteArgs<ExtArgs>>
    ): Prisma__tbNfClient<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbNf.
     * @param {tbNfUpdateArgs} args - Arguments to update one TbNf.
     * @example
     * // Update one TbNf
     * const tbNf = await prisma.tbNf.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbNfUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbNfUpdateArgs<ExtArgs>>
    ): Prisma__tbNfClient<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbNfs.
     * @param {tbNfDeleteManyArgs} args - Arguments to filter TbNfs to delete.
     * @example
     * // Delete a few TbNfs
     * const { count } = await prisma.tbNf.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbNfDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbNfDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbNfs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbNfUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbNfs
     * const tbNf = await prisma.tbNf.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbNfUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbNfUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbNf.
     * @param {tbNfUpsertArgs} args - Arguments to update or create a TbNf.
     * @example
     * // Update or create a TbNf
     * const tbNf = await prisma.tbNf.upsert({
     *   create: {
     *     // ... data to create a TbNf
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbNf we want to update
     *   }
     * })
    **/
    upsert<T extends tbNfUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbNfUpsertArgs<ExtArgs>>
    ): Prisma__tbNfClient<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbNfs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbNfCountArgs} args - Arguments to filter TbNfs to count.
     * @example
     * // Count the number of TbNfs
     * const count = await prisma.tbNf.count({
     *   where: {
     *     // ... the filter for the TbNfs we want to count
     *   }
     * })
    **/
    count<T extends tbNfCountArgs>(
      args?: Subset<T, tbNfCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbNfCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbNf.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNfAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbNfAggregateArgs>(args: Subset<T, TbNfAggregateArgs>): Prisma.PrismaPromise<GetTbNfAggregateType<T>>

    /**
     * Group by TbNf.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbNfGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbNfGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbNfGroupByArgs['orderBy'] }
        : { orderBy?: tbNfGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbNfGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbNfGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbNf model
   */
  readonly fields: tbNfFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbNf.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbNfClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbMovimentos<T extends tbNf$tbMovimentosArgs<ExtArgs> = {}>(args?: Subset<T, tbNf$tbMovimentosArgs<ExtArgs>>): Prisma__tbMovimentosClient<$Result.GetResult<Prisma.$tbMovimentosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbFornecedores<T extends tbNf$tbFornecedoresArgs<ExtArgs> = {}>(args?: Subset<T, tbNf$tbFornecedoresArgs<ExtArgs>>): Prisma__tbFornecedoresClient<$Result.GetResult<Prisma.$tbFornecedoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbUsuarios<T extends tbNf$tbUsuariosArgs<ExtArgs> = {}>(args?: Subset<T, tbNf$tbUsuariosArgs<ExtArgs>>): Prisma__tbUsuariosClient<$Result.GetResult<Prisma.$tbUsuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbNfitens<T extends tbNf$tbNfitensArgs<ExtArgs> = {}>(args?: Subset<T, tbNf$tbNfitensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbNfitensPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbNf model
   */ 
  interface tbNfFieldRefs {
    readonly idnf: FieldRef<"tbNf", 'Int'>
    readonly numnf: FieldRef<"tbNf", 'Int'>
    readonly idmovimento: FieldRef<"tbNf", 'Int'>
    readonly serienf: FieldRef<"tbNf", 'Int'>
    readonly idfor: FieldRef<"tbNf", 'Int'>
    readonly idusuario_inclusao: FieldRef<"tbNf", 'Int'>
    readonly dtemissao: FieldRef<"tbNf", 'DateTime'>
    readonly vlrtotal: FieldRef<"tbNf", 'Decimal'>
  }
    

  // Custom InputTypes

  /**
   * tbNf findUnique
   */
  export type tbNfFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
    /**
     * Filter, which tbNf to fetch.
     */
    where: tbNfWhereUniqueInput
  }


  /**
   * tbNf findUniqueOrThrow
   */
  export type tbNfFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
    /**
     * Filter, which tbNf to fetch.
     */
    where: tbNfWhereUniqueInput
  }


  /**
   * tbNf findFirst
   */
  export type tbNfFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
    /**
     * Filter, which tbNf to fetch.
     */
    where?: tbNfWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbNfs to fetch.
     */
    orderBy?: tbNfOrderByWithRelationInput | tbNfOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbNfs.
     */
    cursor?: tbNfWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbNfs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbNfs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbNfs.
     */
    distinct?: TbNfScalarFieldEnum | TbNfScalarFieldEnum[]
  }


  /**
   * tbNf findFirstOrThrow
   */
  export type tbNfFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
    /**
     * Filter, which tbNf to fetch.
     */
    where?: tbNfWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbNfs to fetch.
     */
    orderBy?: tbNfOrderByWithRelationInput | tbNfOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbNfs.
     */
    cursor?: tbNfWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbNfs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbNfs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbNfs.
     */
    distinct?: TbNfScalarFieldEnum | TbNfScalarFieldEnum[]
  }


  /**
   * tbNf findMany
   */
  export type tbNfFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
    /**
     * Filter, which tbNfs to fetch.
     */
    where?: tbNfWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbNfs to fetch.
     */
    orderBy?: tbNfOrderByWithRelationInput | tbNfOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbNfs.
     */
    cursor?: tbNfWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbNfs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbNfs.
     */
    skip?: number
    distinct?: TbNfScalarFieldEnum | TbNfScalarFieldEnum[]
  }


  /**
   * tbNf create
   */
  export type tbNfCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
    /**
     * The data needed to create a tbNf.
     */
    data?: XOR<tbNfCreateInput, tbNfUncheckedCreateInput>
  }


  /**
   * tbNf createMany
   */
  export type tbNfCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbNfs.
     */
    data: tbNfCreateManyInput | tbNfCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbNf update
   */
  export type tbNfUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
    /**
     * The data needed to update a tbNf.
     */
    data: XOR<tbNfUpdateInput, tbNfUncheckedUpdateInput>
    /**
     * Choose, which tbNf to update.
     */
    where: tbNfWhereUniqueInput
  }


  /**
   * tbNf updateMany
   */
  export type tbNfUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbNfs.
     */
    data: XOR<tbNfUpdateManyMutationInput, tbNfUncheckedUpdateManyInput>
    /**
     * Filter which tbNfs to update
     */
    where?: tbNfWhereInput
  }


  /**
   * tbNf upsert
   */
  export type tbNfUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
    /**
     * The filter to search for the tbNf to update in case it exists.
     */
    where: tbNfWhereUniqueInput
    /**
     * In case the tbNf found by the `where` argument doesn't exist, create a new tbNf with this data.
     */
    create: XOR<tbNfCreateInput, tbNfUncheckedCreateInput>
    /**
     * In case the tbNf was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbNfUpdateInput, tbNfUncheckedUpdateInput>
  }


  /**
   * tbNf delete
   */
  export type tbNfDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
    /**
     * Filter which tbNf to delete.
     */
    where: tbNfWhereUniqueInput
  }


  /**
   * tbNf deleteMany
   */
  export type tbNfDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbNfs to delete
     */
    where?: tbNfWhereInput
  }


  /**
   * tbNf.tbMovimentos
   */
  export type tbNf$tbMovimentosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovimentos
     */
    select?: tbMovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovimentosInclude<ExtArgs> | null
    where?: tbMovimentosWhereInput
  }


  /**
   * tbNf.tbFornecedores
   */
  export type tbNf$tbFornecedoresArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbFornecedores
     */
    select?: tbFornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbFornecedoresInclude<ExtArgs> | null
    where?: tbFornecedoresWhereInput
  }


  /**
   * tbNf.tbUsuarios
   */
  export type tbNf$tbUsuariosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUsuarios
     */
    select?: tbUsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUsuariosInclude<ExtArgs> | null
    where?: tbUsuariosWhereInput
  }


  /**
   * tbNf.tbNfitens
   */
  export type tbNf$tbNfitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNfitens
     */
    select?: tbNfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfitensInclude<ExtArgs> | null
    where?: tbNfitensWhereInput
    orderBy?: tbNfitensOrderByWithRelationInput | tbNfitensOrderByWithRelationInput[]
    cursor?: tbNfitensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbNfitensScalarFieldEnum | TbNfitensScalarFieldEnum[]
  }


  /**
   * tbNf without action
   */
  export type tbNfDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNf
     */
    select?: tbNfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfInclude<ExtArgs> | null
  }



  /**
   * Model tbNfitens
   */

  export type AggregateTbNfitens = {
    _count: TbNfitensCountAggregateOutputType | null
    _avg: TbNfitensAvgAggregateOutputType | null
    _sum: TbNfitensSumAggregateOutputType | null
    _min: TbNfitensMinAggregateOutputType | null
    _max: TbNfitensMaxAggregateOutputType | null
  }

  export type TbNfitensAvgAggregateOutputType = {
    idnf: number | null
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    vlrunitario: Decimal | null
    quantidade: Decimal | null
    vlrtotitem: Decimal | null
  }

  export type TbNfitensSumAggregateOutputType = {
    idnf: number | null
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    vlrunitario: Decimal | null
    quantidade: Decimal | null
    vlrtotitem: Decimal | null
  }

  export type TbNfitensMinAggregateOutputType = {
    idnf: number | null
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    vlrunitario: Decimal | null
    quantidade: Decimal | null
    vlrtotitem: Decimal | null
  }

  export type TbNfitensMaxAggregateOutputType = {
    idnf: number | null
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    vlrunitario: Decimal | null
    quantidade: Decimal | null
    vlrtotitem: Decimal | null
  }

  export type TbNfitensCountAggregateOutputType = {
    idnf: number
    idmovimento: number
    seqitem: number
    idproduto: number
    vlrunitario: number
    quantidade: number
    vlrtotitem: number
    _all: number
  }


  export type TbNfitensAvgAggregateInputType = {
    idnf?: true
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    vlrunitario?: true
    quantidade?: true
    vlrtotitem?: true
  }

  export type TbNfitensSumAggregateInputType = {
    idnf?: true
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    vlrunitario?: true
    quantidade?: true
    vlrtotitem?: true
  }

  export type TbNfitensMinAggregateInputType = {
    idnf?: true
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    vlrunitario?: true
    quantidade?: true
    vlrtotitem?: true
  }

  export type TbNfitensMaxAggregateInputType = {
    idnf?: true
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    vlrunitario?: true
    quantidade?: true
    vlrtotitem?: true
  }

  export type TbNfitensCountAggregateInputType = {
    idnf?: true
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    vlrunitario?: true
    quantidade?: true
    vlrtotitem?: true
    _all?: true
  }

  export type TbNfitensAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbNfitens to aggregate.
     */
    where?: tbNfitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbNfitens to fetch.
     */
    orderBy?: tbNfitensOrderByWithRelationInput | tbNfitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbNfitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbNfitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbNfitens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbNfitens
    **/
    _count?: true | TbNfitensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbNfitensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbNfitensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbNfitensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbNfitensMaxAggregateInputType
  }

  export type GetTbNfitensAggregateType<T extends TbNfitensAggregateArgs> = {
        [P in keyof T & keyof AggregateTbNfitens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbNfitens[P]>
      : GetScalarType<T[P], AggregateTbNfitens[P]>
  }




  export type tbNfitensGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbNfitensWhereInput
    orderBy?: tbNfitensOrderByWithAggregationInput | tbNfitensOrderByWithAggregationInput[]
    by: TbNfitensScalarFieldEnum[] | TbNfitensScalarFieldEnum
    having?: tbNfitensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbNfitensCountAggregateInputType | true
    _avg?: TbNfitensAvgAggregateInputType
    _sum?: TbNfitensSumAggregateInputType
    _min?: TbNfitensMinAggregateInputType
    _max?: TbNfitensMaxAggregateInputType
  }

  export type TbNfitensGroupByOutputType = {
    idnf: number
    idmovimento: number | null
    seqitem: number
    idproduto: number
    vlrunitario: Decimal | null
    quantidade: Decimal | null
    vlrtotitem: Decimal | null
    _count: TbNfitensCountAggregateOutputType | null
    _avg: TbNfitensAvgAggregateOutputType | null
    _sum: TbNfitensSumAggregateOutputType | null
    _min: TbNfitensMinAggregateOutputType | null
    _max: TbNfitensMaxAggregateOutputType | null
  }

  type GetTbNfitensGroupByPayload<T extends tbNfitensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbNfitensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbNfitensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbNfitensGroupByOutputType[P]>
            : GetScalarType<T[P], TbNfitensGroupByOutputType[P]>
        }
      >
    >


  export type tbNfitensSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idnf?: boolean
    idmovimento?: boolean
    seqitem?: boolean
    idproduto?: boolean
    vlrunitario?: boolean
    quantidade?: boolean
    vlrtotitem?: boolean
    tbMovitens?: boolean | tbNfitens$tbMovitensArgs<ExtArgs>
    tbNf?: boolean | tbNfDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbNfitens"]>

  export type tbNfitensSelectScalar = {
    idnf?: boolean
    idmovimento?: boolean
    seqitem?: boolean
    idproduto?: boolean
    vlrunitario?: boolean
    quantidade?: boolean
    vlrtotitem?: boolean
  }

  export type tbNfitensInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbMovitens?: boolean | tbNfitens$tbMovitensArgs<ExtArgs>
    tbNf?: boolean | tbNfDefaultArgs<ExtArgs>
  }


  export type $tbNfitensPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbNfitens"
    objects: {
      tbMovitens: Prisma.$tbMovitensPayload<ExtArgs> | null
      tbNf: Prisma.$tbNfPayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      idnf: number
      idmovimento: number | null
      seqitem: number
      idproduto: number
      vlrunitario: Prisma.Decimal | null
      quantidade: Prisma.Decimal | null
      vlrtotitem: Prisma.Decimal | null
    }, ExtArgs["result"]["tbNfitens"]>
    composites: {}
  }


  type tbNfitensGetPayload<S extends boolean | null | undefined | tbNfitensDefaultArgs> = $Result.GetResult<Prisma.$tbNfitensPayload, S>

  type tbNfitensCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbNfitensFindManyArgs, 'select' | 'include'> & {
      select?: TbNfitensCountAggregateInputType | true
    }

  export interface tbNfitensDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbNfitens'], meta: { name: 'tbNfitens' } }
    /**
     * Find zero or one TbNfitens that matches the filter.
     * @param {tbNfitensFindUniqueArgs} args - Arguments to find a TbNfitens
     * @example
     * // Get one TbNfitens
     * const tbNfitens = await prisma.tbNfitens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbNfitensFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbNfitensFindUniqueArgs<ExtArgs>>
    ): Prisma__tbNfitensClient<$Result.GetResult<Prisma.$tbNfitensPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbNfitens that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbNfitensFindUniqueOrThrowArgs} args - Arguments to find a TbNfitens
     * @example
     * // Get one TbNfitens
     * const tbNfitens = await prisma.tbNfitens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbNfitensFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbNfitensFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbNfitensClient<$Result.GetResult<Prisma.$tbNfitensPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbNfitens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbNfitensFindFirstArgs} args - Arguments to find a TbNfitens
     * @example
     * // Get one TbNfitens
     * const tbNfitens = await prisma.tbNfitens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbNfitensFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbNfitensFindFirstArgs<ExtArgs>>
    ): Prisma__tbNfitensClient<$Result.GetResult<Prisma.$tbNfitensPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbNfitens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbNfitensFindFirstOrThrowArgs} args - Arguments to find a TbNfitens
     * @example
     * // Get one TbNfitens
     * const tbNfitens = await prisma.tbNfitens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbNfitensFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbNfitensFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbNfitensClient<$Result.GetResult<Prisma.$tbNfitensPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbNfitens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbNfitensFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbNfitens
     * const tbNfitens = await prisma.tbNfitens.findMany()
     * 
     * // Get first 10 TbNfitens
     * const tbNfitens = await prisma.tbNfitens.findMany({ take: 10 })
     * 
     * // Only select the `idnf`
     * const tbNfitensWithIdnfOnly = await prisma.tbNfitens.findMany({ select: { idnf: true } })
     * 
    **/
    findMany<T extends tbNfitensFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbNfitensFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbNfitensPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbNfitens.
     * @param {tbNfitensCreateArgs} args - Arguments to create a TbNfitens.
     * @example
     * // Create one TbNfitens
     * const TbNfitens = await prisma.tbNfitens.create({
     *   data: {
     *     // ... data to create a TbNfitens
     *   }
     * })
     * 
    **/
    create<T extends tbNfitensCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbNfitensCreateArgs<ExtArgs>>
    ): Prisma__tbNfitensClient<$Result.GetResult<Prisma.$tbNfitensPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbNfitens.
     *     @param {tbNfitensCreateManyArgs} args - Arguments to create many TbNfitens.
     *     @example
     *     // Create many TbNfitens
     *     const tbNfitens = await prisma.tbNfitens.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbNfitensCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbNfitensCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbNfitens.
     * @param {tbNfitensDeleteArgs} args - Arguments to delete one TbNfitens.
     * @example
     * // Delete one TbNfitens
     * const TbNfitens = await prisma.tbNfitens.delete({
     *   where: {
     *     // ... filter to delete one TbNfitens
     *   }
     * })
     * 
    **/
    delete<T extends tbNfitensDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbNfitensDeleteArgs<ExtArgs>>
    ): Prisma__tbNfitensClient<$Result.GetResult<Prisma.$tbNfitensPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbNfitens.
     * @param {tbNfitensUpdateArgs} args - Arguments to update one TbNfitens.
     * @example
     * // Update one TbNfitens
     * const tbNfitens = await prisma.tbNfitens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbNfitensUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbNfitensUpdateArgs<ExtArgs>>
    ): Prisma__tbNfitensClient<$Result.GetResult<Prisma.$tbNfitensPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbNfitens.
     * @param {tbNfitensDeleteManyArgs} args - Arguments to filter TbNfitens to delete.
     * @example
     * // Delete a few TbNfitens
     * const { count } = await prisma.tbNfitens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbNfitensDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbNfitensDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbNfitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbNfitensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbNfitens
     * const tbNfitens = await prisma.tbNfitens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbNfitensUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbNfitensUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbNfitens.
     * @param {tbNfitensUpsertArgs} args - Arguments to update or create a TbNfitens.
     * @example
     * // Update or create a TbNfitens
     * const tbNfitens = await prisma.tbNfitens.upsert({
     *   create: {
     *     // ... data to create a TbNfitens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbNfitens we want to update
     *   }
     * })
    **/
    upsert<T extends tbNfitensUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbNfitensUpsertArgs<ExtArgs>>
    ): Prisma__tbNfitensClient<$Result.GetResult<Prisma.$tbNfitensPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbNfitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbNfitensCountArgs} args - Arguments to filter TbNfitens to count.
     * @example
     * // Count the number of TbNfitens
     * const count = await prisma.tbNfitens.count({
     *   where: {
     *     // ... the filter for the TbNfitens we want to count
     *   }
     * })
    **/
    count<T extends tbNfitensCountArgs>(
      args?: Subset<T, tbNfitensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbNfitensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbNfitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbNfitensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbNfitensAggregateArgs>(args: Subset<T, TbNfitensAggregateArgs>): Prisma.PrismaPromise<GetTbNfitensAggregateType<T>>

    /**
     * Group by TbNfitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbNfitensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbNfitensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbNfitensGroupByArgs['orderBy'] }
        : { orderBy?: tbNfitensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbNfitensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbNfitensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbNfitens model
   */
  readonly fields: tbNfitensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbNfitens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbNfitensClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbMovitens<T extends tbNfitens$tbMovitensArgs<ExtArgs> = {}>(args?: Subset<T, tbNfitens$tbMovitensArgs<ExtArgs>>): Prisma__tbMovitensClient<$Result.GetResult<Prisma.$tbMovitensPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbNf<T extends tbNfDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbNfDefaultArgs<ExtArgs>>): Prisma__tbNfClient<$Result.GetResult<Prisma.$tbNfPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbNfitens model
   */ 
  interface tbNfitensFieldRefs {
    readonly idnf: FieldRef<"tbNfitens", 'Int'>
    readonly idmovimento: FieldRef<"tbNfitens", 'Int'>
    readonly seqitem: FieldRef<"tbNfitens", 'Int'>
    readonly idproduto: FieldRef<"tbNfitens", 'Int'>
    readonly vlrunitario: FieldRef<"tbNfitens", 'Decimal'>
    readonly quantidade: FieldRef<"tbNfitens", 'Decimal'>
    readonly vlrtotitem: FieldRef<"tbNfitens", 'Decimal'>
  }
    

  // Custom InputTypes

  /**
   * tbNfitens findUnique
   */
  export type tbNfitensFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNfitens
     */
    select?: tbNfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfitensInclude<ExtArgs> | null
    /**
     * Filter, which tbNfitens to fetch.
     */
    where: tbNfitensWhereUniqueInput
  }


  /**
   * tbNfitens findUniqueOrThrow
   */
  export type tbNfitensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNfitens
     */
    select?: tbNfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfitensInclude<ExtArgs> | null
    /**
     * Filter, which tbNfitens to fetch.
     */
    where: tbNfitensWhereUniqueInput
  }


  /**
   * tbNfitens findFirst
   */
  export type tbNfitensFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNfitens
     */
    select?: tbNfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfitensInclude<ExtArgs> | null
    /**
     * Filter, which tbNfitens to fetch.
     */
    where?: tbNfitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbNfitens to fetch.
     */
    orderBy?: tbNfitensOrderByWithRelationInput | tbNfitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbNfitens.
     */
    cursor?: tbNfitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbNfitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbNfitens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbNfitens.
     */
    distinct?: TbNfitensScalarFieldEnum | TbNfitensScalarFieldEnum[]
  }


  /**
   * tbNfitens findFirstOrThrow
   */
  export type tbNfitensFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNfitens
     */
    select?: tbNfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfitensInclude<ExtArgs> | null
    /**
     * Filter, which tbNfitens to fetch.
     */
    where?: tbNfitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbNfitens to fetch.
     */
    orderBy?: tbNfitensOrderByWithRelationInput | tbNfitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbNfitens.
     */
    cursor?: tbNfitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbNfitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbNfitens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbNfitens.
     */
    distinct?: TbNfitensScalarFieldEnum | TbNfitensScalarFieldEnum[]
  }


  /**
   * tbNfitens findMany
   */
  export type tbNfitensFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNfitens
     */
    select?: tbNfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfitensInclude<ExtArgs> | null
    /**
     * Filter, which tbNfitens to fetch.
     */
    where?: tbNfitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbNfitens to fetch.
     */
    orderBy?: tbNfitensOrderByWithRelationInput | tbNfitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbNfitens.
     */
    cursor?: tbNfitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbNfitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbNfitens.
     */
    skip?: number
    distinct?: TbNfitensScalarFieldEnum | TbNfitensScalarFieldEnum[]
  }


  /**
   * tbNfitens create
   */
  export type tbNfitensCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNfitens
     */
    select?: tbNfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfitensInclude<ExtArgs> | null
    /**
     * The data needed to create a tbNfitens.
     */
    data: XOR<tbNfitensCreateInput, tbNfitensUncheckedCreateInput>
  }


  /**
   * tbNfitens createMany
   */
  export type tbNfitensCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbNfitens.
     */
    data: tbNfitensCreateManyInput | tbNfitensCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbNfitens update
   */
  export type tbNfitensUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNfitens
     */
    select?: tbNfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfitensInclude<ExtArgs> | null
    /**
     * The data needed to update a tbNfitens.
     */
    data: XOR<tbNfitensUpdateInput, tbNfitensUncheckedUpdateInput>
    /**
     * Choose, which tbNfitens to update.
     */
    where: tbNfitensWhereUniqueInput
  }


  /**
   * tbNfitens updateMany
   */
  export type tbNfitensUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbNfitens.
     */
    data: XOR<tbNfitensUpdateManyMutationInput, tbNfitensUncheckedUpdateManyInput>
    /**
     * Filter which tbNfitens to update
     */
    where?: tbNfitensWhereInput
  }


  /**
   * tbNfitens upsert
   */
  export type tbNfitensUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNfitens
     */
    select?: tbNfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfitensInclude<ExtArgs> | null
    /**
     * The filter to search for the tbNfitens to update in case it exists.
     */
    where: tbNfitensWhereUniqueInput
    /**
     * In case the tbNfitens found by the `where` argument doesn't exist, create a new tbNfitens with this data.
     */
    create: XOR<tbNfitensCreateInput, tbNfitensUncheckedCreateInput>
    /**
     * In case the tbNfitens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbNfitensUpdateInput, tbNfitensUncheckedUpdateInput>
  }


  /**
   * tbNfitens delete
   */
  export type tbNfitensDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNfitens
     */
    select?: tbNfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfitensInclude<ExtArgs> | null
    /**
     * Filter which tbNfitens to delete.
     */
    where: tbNfitensWhereUniqueInput
  }


  /**
   * tbNfitens deleteMany
   */
  export type tbNfitensDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbNfitens to delete
     */
    where?: tbNfitensWhereInput
  }


  /**
   * tbNfitens.tbMovitens
   */
  export type tbNfitens$tbMovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbMovitens
     */
    select?: tbMovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbMovitensInclude<ExtArgs> | null
    where?: tbMovitensWhereInput
  }


  /**
   * tbNfitens without action
   */
  export type tbNfitensDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbNfitens
     */
    select?: tbNfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbNfitensInclude<ExtArgs> | null
  }



  /**
   * Model tbProdcomposicao
   */

  export type AggregateTbProdcomposicao = {
    _count: TbProdcomposicaoCountAggregateOutputType | null
    _avg: TbProdcomposicaoAvgAggregateOutputType | null
    _sum: TbProdcomposicaoSumAggregateOutputType | null
    _min: TbProdcomposicaoMinAggregateOutputType | null
    _max: TbProdcomposicaoMaxAggregateOutputType | null
  }

  export type TbProdcomposicaoAvgAggregateOutputType = {
    idcomp: number | null
    idproduto: number | null
    idprodutocomp: number | null
    quantidade: Decimal | null
  }

  export type TbProdcomposicaoSumAggregateOutputType = {
    idcomp: number | null
    idproduto: number | null
    idprodutocomp: number | null
    quantidade: Decimal | null
  }

  export type TbProdcomposicaoMinAggregateOutputType = {
    idcomp: number | null
    idproduto: number | null
    idprodutocomp: number | null
    quantidade: Decimal | null
  }

  export type TbProdcomposicaoMaxAggregateOutputType = {
    idcomp: number | null
    idproduto: number | null
    idprodutocomp: number | null
    quantidade: Decimal | null
  }

  export type TbProdcomposicaoCountAggregateOutputType = {
    idcomp: number
    idproduto: number
    idprodutocomp: number
    quantidade: number
    _all: number
  }


  export type TbProdcomposicaoAvgAggregateInputType = {
    idcomp?: true
    idproduto?: true
    idprodutocomp?: true
    quantidade?: true
  }

  export type TbProdcomposicaoSumAggregateInputType = {
    idcomp?: true
    idproduto?: true
    idprodutocomp?: true
    quantidade?: true
  }

  export type TbProdcomposicaoMinAggregateInputType = {
    idcomp?: true
    idproduto?: true
    idprodutocomp?: true
    quantidade?: true
  }

  export type TbProdcomposicaoMaxAggregateInputType = {
    idcomp?: true
    idproduto?: true
    idprodutocomp?: true
    quantidade?: true
  }

  export type TbProdcomposicaoCountAggregateInputType = {
    idcomp?: true
    idproduto?: true
    idprodutocomp?: true
    quantidade?: true
    _all?: true
  }

  export type TbProdcomposicaoAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbProdcomposicao to aggregate.
     */
    where?: tbProdcomposicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbProdcomposicaos to fetch.
     */
    orderBy?: tbProdcomposicaoOrderByWithRelationInput | tbProdcomposicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbProdcomposicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbProdcomposicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbProdcomposicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbProdcomposicaos
    **/
    _count?: true | TbProdcomposicaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbProdcomposicaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbProdcomposicaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbProdcomposicaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbProdcomposicaoMaxAggregateInputType
  }

  export type GetTbProdcomposicaoAggregateType<T extends TbProdcomposicaoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbProdcomposicao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbProdcomposicao[P]>
      : GetScalarType<T[P], AggregateTbProdcomposicao[P]>
  }




  export type tbProdcomposicaoGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbProdcomposicaoWhereInput
    orderBy?: tbProdcomposicaoOrderByWithAggregationInput | tbProdcomposicaoOrderByWithAggregationInput[]
    by: TbProdcomposicaoScalarFieldEnum[] | TbProdcomposicaoScalarFieldEnum
    having?: tbProdcomposicaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbProdcomposicaoCountAggregateInputType | true
    _avg?: TbProdcomposicaoAvgAggregateInputType
    _sum?: TbProdcomposicaoSumAggregateInputType
    _min?: TbProdcomposicaoMinAggregateInputType
    _max?: TbProdcomposicaoMaxAggregateInputType
  }

  export type TbProdcomposicaoGroupByOutputType = {
    idcomp: number
    idproduto: number
    idprodutocomp: number
    quantidade: Decimal | null
    _count: TbProdcomposicaoCountAggregateOutputType | null
    _avg: TbProdcomposicaoAvgAggregateOutputType | null
    _sum: TbProdcomposicaoSumAggregateOutputType | null
    _min: TbProdcomposicaoMinAggregateOutputType | null
    _max: TbProdcomposicaoMaxAggregateOutputType | null
  }

  type GetTbProdcomposicaoGroupByPayload<T extends tbProdcomposicaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbProdcomposicaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbProdcomposicaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbProdcomposicaoGroupByOutputType[P]>
            : GetScalarType<T[P], TbProdcomposicaoGroupByOutputType[P]>
        }
      >
    >


  export type tbProdcomposicaoSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idcomp?: boolean
    idproduto?: boolean
    idprodutocomp?: boolean
    quantidade?: boolean
    tbProdutos_tbProdcomposicao_idprodutoTotbProdutos?: boolean | tbProdutosDefaultArgs<ExtArgs>
    tbProdutos_tbProdcomposicao_idprodutocompTotbProdutos?: boolean | tbProdutosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbProdcomposicao"]>

  export type tbProdcomposicaoSelectScalar = {
    idcomp?: boolean
    idproduto?: boolean
    idprodutocomp?: boolean
    quantidade?: boolean
  }

  export type tbProdcomposicaoInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbProdutos_tbProdcomposicao_idprodutoTotbProdutos?: boolean | tbProdutosDefaultArgs<ExtArgs>
    tbProdutos_tbProdcomposicao_idprodutocompTotbProdutos?: boolean | tbProdutosDefaultArgs<ExtArgs>
  }


  export type $tbProdcomposicaoPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbProdcomposicao"
    objects: {
      tbProdutos_tbProdcomposicao_idprodutoTotbProdutos: Prisma.$tbProdutosPayload<ExtArgs>
      tbProdutos_tbProdcomposicao_idprodutocompTotbProdutos: Prisma.$tbProdutosPayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      idcomp: number
      idproduto: number
      idprodutocomp: number
      quantidade: Prisma.Decimal | null
    }, ExtArgs["result"]["tbProdcomposicao"]>
    composites: {}
  }


  type tbProdcomposicaoGetPayload<S extends boolean | null | undefined | tbProdcomposicaoDefaultArgs> = $Result.GetResult<Prisma.$tbProdcomposicaoPayload, S>

  type tbProdcomposicaoCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbProdcomposicaoFindManyArgs, 'select' | 'include'> & {
      select?: TbProdcomposicaoCountAggregateInputType | true
    }

  export interface tbProdcomposicaoDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbProdcomposicao'], meta: { name: 'tbProdcomposicao' } }
    /**
     * Find zero or one TbProdcomposicao that matches the filter.
     * @param {tbProdcomposicaoFindUniqueArgs} args - Arguments to find a TbProdcomposicao
     * @example
     * // Get one TbProdcomposicao
     * const tbProdcomposicao = await prisma.tbProdcomposicao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbProdcomposicaoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbProdcomposicaoFindUniqueArgs<ExtArgs>>
    ): Prisma__tbProdcomposicaoClient<$Result.GetResult<Prisma.$tbProdcomposicaoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbProdcomposicao that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbProdcomposicaoFindUniqueOrThrowArgs} args - Arguments to find a TbProdcomposicao
     * @example
     * // Get one TbProdcomposicao
     * const tbProdcomposicao = await prisma.tbProdcomposicao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbProdcomposicaoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbProdcomposicaoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbProdcomposicaoClient<$Result.GetResult<Prisma.$tbProdcomposicaoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbProdcomposicao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbProdcomposicaoFindFirstArgs} args - Arguments to find a TbProdcomposicao
     * @example
     * // Get one TbProdcomposicao
     * const tbProdcomposicao = await prisma.tbProdcomposicao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbProdcomposicaoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbProdcomposicaoFindFirstArgs<ExtArgs>>
    ): Prisma__tbProdcomposicaoClient<$Result.GetResult<Prisma.$tbProdcomposicaoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbProdcomposicao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbProdcomposicaoFindFirstOrThrowArgs} args - Arguments to find a TbProdcomposicao
     * @example
     * // Get one TbProdcomposicao
     * const tbProdcomposicao = await prisma.tbProdcomposicao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbProdcomposicaoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbProdcomposicaoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbProdcomposicaoClient<$Result.GetResult<Prisma.$tbProdcomposicaoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbProdcomposicaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbProdcomposicaoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbProdcomposicaos
     * const tbProdcomposicaos = await prisma.tbProdcomposicao.findMany()
     * 
     * // Get first 10 TbProdcomposicaos
     * const tbProdcomposicaos = await prisma.tbProdcomposicao.findMany({ take: 10 })
     * 
     * // Only select the `idcomp`
     * const tbProdcomposicaoWithIdcompOnly = await prisma.tbProdcomposicao.findMany({ select: { idcomp: true } })
     * 
    **/
    findMany<T extends tbProdcomposicaoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbProdcomposicaoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbProdcomposicaoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbProdcomposicao.
     * @param {tbProdcomposicaoCreateArgs} args - Arguments to create a TbProdcomposicao.
     * @example
     * // Create one TbProdcomposicao
     * const TbProdcomposicao = await prisma.tbProdcomposicao.create({
     *   data: {
     *     // ... data to create a TbProdcomposicao
     *   }
     * })
     * 
    **/
    create<T extends tbProdcomposicaoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbProdcomposicaoCreateArgs<ExtArgs>>
    ): Prisma__tbProdcomposicaoClient<$Result.GetResult<Prisma.$tbProdcomposicaoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbProdcomposicaos.
     *     @param {tbProdcomposicaoCreateManyArgs} args - Arguments to create many TbProdcomposicaos.
     *     @example
     *     // Create many TbProdcomposicaos
     *     const tbProdcomposicao = await prisma.tbProdcomposicao.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbProdcomposicaoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbProdcomposicaoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbProdcomposicao.
     * @param {tbProdcomposicaoDeleteArgs} args - Arguments to delete one TbProdcomposicao.
     * @example
     * // Delete one TbProdcomposicao
     * const TbProdcomposicao = await prisma.tbProdcomposicao.delete({
     *   where: {
     *     // ... filter to delete one TbProdcomposicao
     *   }
     * })
     * 
    **/
    delete<T extends tbProdcomposicaoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbProdcomposicaoDeleteArgs<ExtArgs>>
    ): Prisma__tbProdcomposicaoClient<$Result.GetResult<Prisma.$tbProdcomposicaoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbProdcomposicao.
     * @param {tbProdcomposicaoUpdateArgs} args - Arguments to update one TbProdcomposicao.
     * @example
     * // Update one TbProdcomposicao
     * const tbProdcomposicao = await prisma.tbProdcomposicao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbProdcomposicaoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbProdcomposicaoUpdateArgs<ExtArgs>>
    ): Prisma__tbProdcomposicaoClient<$Result.GetResult<Prisma.$tbProdcomposicaoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbProdcomposicaos.
     * @param {tbProdcomposicaoDeleteManyArgs} args - Arguments to filter TbProdcomposicaos to delete.
     * @example
     * // Delete a few TbProdcomposicaos
     * const { count } = await prisma.tbProdcomposicao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbProdcomposicaoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbProdcomposicaoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbProdcomposicaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbProdcomposicaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbProdcomposicaos
     * const tbProdcomposicao = await prisma.tbProdcomposicao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbProdcomposicaoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbProdcomposicaoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbProdcomposicao.
     * @param {tbProdcomposicaoUpsertArgs} args - Arguments to update or create a TbProdcomposicao.
     * @example
     * // Update or create a TbProdcomposicao
     * const tbProdcomposicao = await prisma.tbProdcomposicao.upsert({
     *   create: {
     *     // ... data to create a TbProdcomposicao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbProdcomposicao we want to update
     *   }
     * })
    **/
    upsert<T extends tbProdcomposicaoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbProdcomposicaoUpsertArgs<ExtArgs>>
    ): Prisma__tbProdcomposicaoClient<$Result.GetResult<Prisma.$tbProdcomposicaoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbProdcomposicaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbProdcomposicaoCountArgs} args - Arguments to filter TbProdcomposicaos to count.
     * @example
     * // Count the number of TbProdcomposicaos
     * const count = await prisma.tbProdcomposicao.count({
     *   where: {
     *     // ... the filter for the TbProdcomposicaos we want to count
     *   }
     * })
    **/
    count<T extends tbProdcomposicaoCountArgs>(
      args?: Subset<T, tbProdcomposicaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbProdcomposicaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbProdcomposicao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbProdcomposicaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbProdcomposicaoAggregateArgs>(args: Subset<T, TbProdcomposicaoAggregateArgs>): Prisma.PrismaPromise<GetTbProdcomposicaoAggregateType<T>>

    /**
     * Group by TbProdcomposicao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbProdcomposicaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbProdcomposicaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbProdcomposicaoGroupByArgs['orderBy'] }
        : { orderBy?: tbProdcomposicaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbProdcomposicaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbProdcomposicaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbProdcomposicao model
   */
  readonly fields: tbProdcomposicaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbProdcomposicao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbProdcomposicaoClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbProdutos_tbProdcomposicao_idprodutoTotbProdutos<T extends tbProdutosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbProdutosDefaultArgs<ExtArgs>>): Prisma__tbProdutosClient<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbProdutos_tbProdcomposicao_idprodutocompTotbProdutos<T extends tbProdutosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbProdutosDefaultArgs<ExtArgs>>): Prisma__tbProdutosClient<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbProdcomposicao model
   */ 
  interface tbProdcomposicaoFieldRefs {
    readonly idcomp: FieldRef<"tbProdcomposicao", 'Int'>
    readonly idproduto: FieldRef<"tbProdcomposicao", 'Int'>
    readonly idprodutocomp: FieldRef<"tbProdcomposicao", 'Int'>
    readonly quantidade: FieldRef<"tbProdcomposicao", 'Decimal'>
  }
    

  // Custom InputTypes

  /**
   * tbProdcomposicao findUnique
   */
  export type tbProdcomposicaoFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdcomposicao
     */
    select?: tbProdcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdcomposicaoInclude<ExtArgs> | null
    /**
     * Filter, which tbProdcomposicao to fetch.
     */
    where: tbProdcomposicaoWhereUniqueInput
  }


  /**
   * tbProdcomposicao findUniqueOrThrow
   */
  export type tbProdcomposicaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdcomposicao
     */
    select?: tbProdcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdcomposicaoInclude<ExtArgs> | null
    /**
     * Filter, which tbProdcomposicao to fetch.
     */
    where: tbProdcomposicaoWhereUniqueInput
  }


  /**
   * tbProdcomposicao findFirst
   */
  export type tbProdcomposicaoFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdcomposicao
     */
    select?: tbProdcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdcomposicaoInclude<ExtArgs> | null
    /**
     * Filter, which tbProdcomposicao to fetch.
     */
    where?: tbProdcomposicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbProdcomposicaos to fetch.
     */
    orderBy?: tbProdcomposicaoOrderByWithRelationInput | tbProdcomposicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbProdcomposicaos.
     */
    cursor?: tbProdcomposicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbProdcomposicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbProdcomposicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbProdcomposicaos.
     */
    distinct?: TbProdcomposicaoScalarFieldEnum | TbProdcomposicaoScalarFieldEnum[]
  }


  /**
   * tbProdcomposicao findFirstOrThrow
   */
  export type tbProdcomposicaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdcomposicao
     */
    select?: tbProdcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdcomposicaoInclude<ExtArgs> | null
    /**
     * Filter, which tbProdcomposicao to fetch.
     */
    where?: tbProdcomposicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbProdcomposicaos to fetch.
     */
    orderBy?: tbProdcomposicaoOrderByWithRelationInput | tbProdcomposicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbProdcomposicaos.
     */
    cursor?: tbProdcomposicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbProdcomposicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbProdcomposicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbProdcomposicaos.
     */
    distinct?: TbProdcomposicaoScalarFieldEnum | TbProdcomposicaoScalarFieldEnum[]
  }


  /**
   * tbProdcomposicao findMany
   */
  export type tbProdcomposicaoFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdcomposicao
     */
    select?: tbProdcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdcomposicaoInclude<ExtArgs> | null
    /**
     * Filter, which tbProdcomposicaos to fetch.
     */
    where?: tbProdcomposicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbProdcomposicaos to fetch.
     */
    orderBy?: tbProdcomposicaoOrderByWithRelationInput | tbProdcomposicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbProdcomposicaos.
     */
    cursor?: tbProdcomposicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbProdcomposicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbProdcomposicaos.
     */
    skip?: number
    distinct?: TbProdcomposicaoScalarFieldEnum | TbProdcomposicaoScalarFieldEnum[]
  }


  /**
   * tbProdcomposicao create
   */
  export type tbProdcomposicaoCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdcomposicao
     */
    select?: tbProdcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdcomposicaoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbProdcomposicao.
     */
    data: XOR<tbProdcomposicaoCreateInput, tbProdcomposicaoUncheckedCreateInput>
  }


  /**
   * tbProdcomposicao createMany
   */
  export type tbProdcomposicaoCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbProdcomposicaos.
     */
    data: tbProdcomposicaoCreateManyInput | tbProdcomposicaoCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbProdcomposicao update
   */
  export type tbProdcomposicaoUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdcomposicao
     */
    select?: tbProdcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdcomposicaoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbProdcomposicao.
     */
    data: XOR<tbProdcomposicaoUpdateInput, tbProdcomposicaoUncheckedUpdateInput>
    /**
     * Choose, which tbProdcomposicao to update.
     */
    where: tbProdcomposicaoWhereUniqueInput
  }


  /**
   * tbProdcomposicao updateMany
   */
  export type tbProdcomposicaoUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbProdcomposicaos.
     */
    data: XOR<tbProdcomposicaoUpdateManyMutationInput, tbProdcomposicaoUncheckedUpdateManyInput>
    /**
     * Filter which tbProdcomposicaos to update
     */
    where?: tbProdcomposicaoWhereInput
  }


  /**
   * tbProdcomposicao upsert
   */
  export type tbProdcomposicaoUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdcomposicao
     */
    select?: tbProdcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdcomposicaoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbProdcomposicao to update in case it exists.
     */
    where: tbProdcomposicaoWhereUniqueInput
    /**
     * In case the tbProdcomposicao found by the `where` argument doesn't exist, create a new tbProdcomposicao with this data.
     */
    create: XOR<tbProdcomposicaoCreateInput, tbProdcomposicaoUncheckedCreateInput>
    /**
     * In case the tbProdcomposicao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbProdcomposicaoUpdateInput, tbProdcomposicaoUncheckedUpdateInput>
  }


  /**
   * tbProdcomposicao delete
   */
  export type tbProdcomposicaoDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdcomposicao
     */
    select?: tbProdcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdcomposicaoInclude<ExtArgs> | null
    /**
     * Filter which tbProdcomposicao to delete.
     */
    where: tbProdcomposicaoWhereUniqueInput
  }


  /**
   * tbProdcomposicao deleteMany
   */
  export type tbProdcomposicaoDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbProdcomposicaos to delete
     */
    where?: tbProdcomposicaoWhereInput
  }


  /**
   * tbProdcomposicao without action
   */
  export type tbProdcomposicaoDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdcomposicao
     */
    select?: tbProdcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdcomposicaoInclude<ExtArgs> | null
  }



  /**
   * Model tbTiposprodutos
   */

  export type AggregateTbTiposprodutos = {
    _count: TbTiposprodutosCountAggregateOutputType | null
    _avg: TbTiposprodutosAvgAggregateOutputType | null
    _sum: TbTiposprodutosSumAggregateOutputType | null
    _min: TbTiposprodutosMinAggregateOutputType | null
    _max: TbTiposprodutosMaxAggregateOutputType | null
  }

  export type TbTiposprodutosAvgAggregateOutputType = {
    idtipprod: number | null
  }

  export type TbTiposprodutosSumAggregateOutputType = {
    idtipprod: number | null
  }

  export type TbTiposprodutosMinAggregateOutputType = {
    idtipprod: number | null
    nometipprod: string | null
  }

  export type TbTiposprodutosMaxAggregateOutputType = {
    idtipprod: number | null
    nometipprod: string | null
  }

  export type TbTiposprodutosCountAggregateOutputType = {
    idtipprod: number
    nometipprod: number
    _all: number
  }


  export type TbTiposprodutosAvgAggregateInputType = {
    idtipprod?: true
  }

  export type TbTiposprodutosSumAggregateInputType = {
    idtipprod?: true
  }

  export type TbTiposprodutosMinAggregateInputType = {
    idtipprod?: true
    nometipprod?: true
  }

  export type TbTiposprodutosMaxAggregateInputType = {
    idtipprod?: true
    nometipprod?: true
  }

  export type TbTiposprodutosCountAggregateInputType = {
    idtipprod?: true
    nometipprod?: true
    _all?: true
  }

  export type TbTiposprodutosAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbTiposprodutos to aggregate.
     */
    where?: tbTiposprodutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbTiposprodutos to fetch.
     */
    orderBy?: tbTiposprodutosOrderByWithRelationInput | tbTiposprodutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbTiposprodutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbTiposprodutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbTiposprodutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbTiposprodutos
    **/
    _count?: true | TbTiposprodutosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbTiposprodutosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbTiposprodutosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbTiposprodutosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbTiposprodutosMaxAggregateInputType
  }

  export type GetTbTiposprodutosAggregateType<T extends TbTiposprodutosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbTiposprodutos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbTiposprodutos[P]>
      : GetScalarType<T[P], AggregateTbTiposprodutos[P]>
  }




  export type tbTiposprodutosGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbTiposprodutosWhereInput
    orderBy?: tbTiposprodutosOrderByWithAggregationInput | tbTiposprodutosOrderByWithAggregationInput[]
    by: TbTiposprodutosScalarFieldEnum[] | TbTiposprodutosScalarFieldEnum
    having?: tbTiposprodutosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbTiposprodutosCountAggregateInputType | true
    _avg?: TbTiposprodutosAvgAggregateInputType
    _sum?: TbTiposprodutosSumAggregateInputType
    _min?: TbTiposprodutosMinAggregateInputType
    _max?: TbTiposprodutosMaxAggregateInputType
  }

  export type TbTiposprodutosGroupByOutputType = {
    idtipprod: number
    nometipprod: string | null
    _count: TbTiposprodutosCountAggregateOutputType | null
    _avg: TbTiposprodutosAvgAggregateOutputType | null
    _sum: TbTiposprodutosSumAggregateOutputType | null
    _min: TbTiposprodutosMinAggregateOutputType | null
    _max: TbTiposprodutosMaxAggregateOutputType | null
  }

  type GetTbTiposprodutosGroupByPayload<T extends tbTiposprodutosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbTiposprodutosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbTiposprodutosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbTiposprodutosGroupByOutputType[P]>
            : GetScalarType<T[P], TbTiposprodutosGroupByOutputType[P]>
        }
      >
    >


  export type tbTiposprodutosSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idtipprod?: boolean
    nometipprod?: boolean
    tbProdutos?: boolean | tbTiposprodutos$tbProdutosArgs<ExtArgs>
    _count?: boolean | TbTiposprodutosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbTiposprodutos"]>

  export type tbTiposprodutosSelectScalar = {
    idtipprod?: boolean
    nometipprod?: boolean
  }

  export type tbTiposprodutosInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbProdutos?: boolean | tbTiposprodutos$tbProdutosArgs<ExtArgs>
    _count?: boolean | TbTiposprodutosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbTiposprodutosPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbTiposprodutos"
    objects: {
      tbProdutos: Prisma.$tbProdutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idtipprod: number
      nometipprod: string | null
    }, ExtArgs["result"]["tbTiposprodutos"]>
    composites: {}
  }


  type tbTiposprodutosGetPayload<S extends boolean | null | undefined | tbTiposprodutosDefaultArgs> = $Result.GetResult<Prisma.$tbTiposprodutosPayload, S>

  type tbTiposprodutosCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbTiposprodutosFindManyArgs, 'select' | 'include'> & {
      select?: TbTiposprodutosCountAggregateInputType | true
    }

  export interface tbTiposprodutosDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbTiposprodutos'], meta: { name: 'tbTiposprodutos' } }
    /**
     * Find zero or one TbTiposprodutos that matches the filter.
     * @param {tbTiposprodutosFindUniqueArgs} args - Arguments to find a TbTiposprodutos
     * @example
     * // Get one TbTiposprodutos
     * const tbTiposprodutos = await prisma.tbTiposprodutos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbTiposprodutosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbTiposprodutosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbTiposprodutosClient<$Result.GetResult<Prisma.$tbTiposprodutosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbTiposprodutos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbTiposprodutosFindUniqueOrThrowArgs} args - Arguments to find a TbTiposprodutos
     * @example
     * // Get one TbTiposprodutos
     * const tbTiposprodutos = await prisma.tbTiposprodutos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbTiposprodutosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbTiposprodutosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbTiposprodutosClient<$Result.GetResult<Prisma.$tbTiposprodutosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbTiposprodutos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbTiposprodutosFindFirstArgs} args - Arguments to find a TbTiposprodutos
     * @example
     * // Get one TbTiposprodutos
     * const tbTiposprodutos = await prisma.tbTiposprodutos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbTiposprodutosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbTiposprodutosFindFirstArgs<ExtArgs>>
    ): Prisma__tbTiposprodutosClient<$Result.GetResult<Prisma.$tbTiposprodutosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbTiposprodutos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbTiposprodutosFindFirstOrThrowArgs} args - Arguments to find a TbTiposprodutos
     * @example
     * // Get one TbTiposprodutos
     * const tbTiposprodutos = await prisma.tbTiposprodutos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbTiposprodutosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbTiposprodutosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbTiposprodutosClient<$Result.GetResult<Prisma.$tbTiposprodutosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbTiposprodutos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbTiposprodutosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbTiposprodutos
     * const tbTiposprodutos = await prisma.tbTiposprodutos.findMany()
     * 
     * // Get first 10 TbTiposprodutos
     * const tbTiposprodutos = await prisma.tbTiposprodutos.findMany({ take: 10 })
     * 
     * // Only select the `idtipprod`
     * const tbTiposprodutosWithIdtipprodOnly = await prisma.tbTiposprodutos.findMany({ select: { idtipprod: true } })
     * 
    **/
    findMany<T extends tbTiposprodutosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbTiposprodutosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbTiposprodutosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbTiposprodutos.
     * @param {tbTiposprodutosCreateArgs} args - Arguments to create a TbTiposprodutos.
     * @example
     * // Create one TbTiposprodutos
     * const TbTiposprodutos = await prisma.tbTiposprodutos.create({
     *   data: {
     *     // ... data to create a TbTiposprodutos
     *   }
     * })
     * 
    **/
    create<T extends tbTiposprodutosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbTiposprodutosCreateArgs<ExtArgs>>
    ): Prisma__tbTiposprodutosClient<$Result.GetResult<Prisma.$tbTiposprodutosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbTiposprodutos.
     *     @param {tbTiposprodutosCreateManyArgs} args - Arguments to create many TbTiposprodutos.
     *     @example
     *     // Create many TbTiposprodutos
     *     const tbTiposprodutos = await prisma.tbTiposprodutos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbTiposprodutosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbTiposprodutosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbTiposprodutos.
     * @param {tbTiposprodutosDeleteArgs} args - Arguments to delete one TbTiposprodutos.
     * @example
     * // Delete one TbTiposprodutos
     * const TbTiposprodutos = await prisma.tbTiposprodutos.delete({
     *   where: {
     *     // ... filter to delete one TbTiposprodutos
     *   }
     * })
     * 
    **/
    delete<T extends tbTiposprodutosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbTiposprodutosDeleteArgs<ExtArgs>>
    ): Prisma__tbTiposprodutosClient<$Result.GetResult<Prisma.$tbTiposprodutosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbTiposprodutos.
     * @param {tbTiposprodutosUpdateArgs} args - Arguments to update one TbTiposprodutos.
     * @example
     * // Update one TbTiposprodutos
     * const tbTiposprodutos = await prisma.tbTiposprodutos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbTiposprodutosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbTiposprodutosUpdateArgs<ExtArgs>>
    ): Prisma__tbTiposprodutosClient<$Result.GetResult<Prisma.$tbTiposprodutosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbTiposprodutos.
     * @param {tbTiposprodutosDeleteManyArgs} args - Arguments to filter TbTiposprodutos to delete.
     * @example
     * // Delete a few TbTiposprodutos
     * const { count } = await prisma.tbTiposprodutos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbTiposprodutosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbTiposprodutosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbTiposprodutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbTiposprodutosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbTiposprodutos
     * const tbTiposprodutos = await prisma.tbTiposprodutos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbTiposprodutosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbTiposprodutosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbTiposprodutos.
     * @param {tbTiposprodutosUpsertArgs} args - Arguments to update or create a TbTiposprodutos.
     * @example
     * // Update or create a TbTiposprodutos
     * const tbTiposprodutos = await prisma.tbTiposprodutos.upsert({
     *   create: {
     *     // ... data to create a TbTiposprodutos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbTiposprodutos we want to update
     *   }
     * })
    **/
    upsert<T extends tbTiposprodutosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbTiposprodutosUpsertArgs<ExtArgs>>
    ): Prisma__tbTiposprodutosClient<$Result.GetResult<Prisma.$tbTiposprodutosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbTiposprodutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbTiposprodutosCountArgs} args - Arguments to filter TbTiposprodutos to count.
     * @example
     * // Count the number of TbTiposprodutos
     * const count = await prisma.tbTiposprodutos.count({
     *   where: {
     *     // ... the filter for the TbTiposprodutos we want to count
     *   }
     * })
    **/
    count<T extends tbTiposprodutosCountArgs>(
      args?: Subset<T, tbTiposprodutosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbTiposprodutosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbTiposprodutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbTiposprodutosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbTiposprodutosAggregateArgs>(args: Subset<T, TbTiposprodutosAggregateArgs>): Prisma.PrismaPromise<GetTbTiposprodutosAggregateType<T>>

    /**
     * Group by TbTiposprodutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbTiposprodutosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbTiposprodutosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbTiposprodutosGroupByArgs['orderBy'] }
        : { orderBy?: tbTiposprodutosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbTiposprodutosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbTiposprodutosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbTiposprodutos model
   */
  readonly fields: tbTiposprodutosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbTiposprodutos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbTiposprodutosClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbProdutos<T extends tbTiposprodutos$tbProdutosArgs<ExtArgs> = {}>(args?: Subset<T, tbTiposprodutos$tbProdutosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbTiposprodutos model
   */ 
  interface tbTiposprodutosFieldRefs {
    readonly idtipprod: FieldRef<"tbTiposprodutos", 'Int'>
    readonly nometipprod: FieldRef<"tbTiposprodutos", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tbTiposprodutos findUnique
   */
  export type tbTiposprodutosFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbTiposprodutos
     */
    select?: tbTiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbTiposprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbTiposprodutos to fetch.
     */
    where: tbTiposprodutosWhereUniqueInput
  }


  /**
   * tbTiposprodutos findUniqueOrThrow
   */
  export type tbTiposprodutosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbTiposprodutos
     */
    select?: tbTiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbTiposprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbTiposprodutos to fetch.
     */
    where: tbTiposprodutosWhereUniqueInput
  }


  /**
   * tbTiposprodutos findFirst
   */
  export type tbTiposprodutosFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbTiposprodutos
     */
    select?: tbTiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbTiposprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbTiposprodutos to fetch.
     */
    where?: tbTiposprodutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbTiposprodutos to fetch.
     */
    orderBy?: tbTiposprodutosOrderByWithRelationInput | tbTiposprodutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbTiposprodutos.
     */
    cursor?: tbTiposprodutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbTiposprodutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbTiposprodutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbTiposprodutos.
     */
    distinct?: TbTiposprodutosScalarFieldEnum | TbTiposprodutosScalarFieldEnum[]
  }


  /**
   * tbTiposprodutos findFirstOrThrow
   */
  export type tbTiposprodutosFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbTiposprodutos
     */
    select?: tbTiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbTiposprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbTiposprodutos to fetch.
     */
    where?: tbTiposprodutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbTiposprodutos to fetch.
     */
    orderBy?: tbTiposprodutosOrderByWithRelationInput | tbTiposprodutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbTiposprodutos.
     */
    cursor?: tbTiposprodutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbTiposprodutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbTiposprodutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbTiposprodutos.
     */
    distinct?: TbTiposprodutosScalarFieldEnum | TbTiposprodutosScalarFieldEnum[]
  }


  /**
   * tbTiposprodutos findMany
   */
  export type tbTiposprodutosFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbTiposprodutos
     */
    select?: tbTiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbTiposprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbTiposprodutos to fetch.
     */
    where?: tbTiposprodutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbTiposprodutos to fetch.
     */
    orderBy?: tbTiposprodutosOrderByWithRelationInput | tbTiposprodutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbTiposprodutos.
     */
    cursor?: tbTiposprodutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbTiposprodutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbTiposprodutos.
     */
    skip?: number
    distinct?: TbTiposprodutosScalarFieldEnum | TbTiposprodutosScalarFieldEnum[]
  }


  /**
   * tbTiposprodutos create
   */
  export type tbTiposprodutosCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbTiposprodutos
     */
    select?: tbTiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbTiposprodutosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbTiposprodutos.
     */
    data?: XOR<tbTiposprodutosCreateInput, tbTiposprodutosUncheckedCreateInput>
  }


  /**
   * tbTiposprodutos createMany
   */
  export type tbTiposprodutosCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbTiposprodutos.
     */
    data: tbTiposprodutosCreateManyInput | tbTiposprodutosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbTiposprodutos update
   */
  export type tbTiposprodutosUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbTiposprodutos
     */
    select?: tbTiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbTiposprodutosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbTiposprodutos.
     */
    data: XOR<tbTiposprodutosUpdateInput, tbTiposprodutosUncheckedUpdateInput>
    /**
     * Choose, which tbTiposprodutos to update.
     */
    where: tbTiposprodutosWhereUniqueInput
  }


  /**
   * tbTiposprodutos updateMany
   */
  export type tbTiposprodutosUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbTiposprodutos.
     */
    data: XOR<tbTiposprodutosUpdateManyMutationInput, tbTiposprodutosUncheckedUpdateManyInput>
    /**
     * Filter which tbTiposprodutos to update
     */
    where?: tbTiposprodutosWhereInput
  }


  /**
   * tbTiposprodutos upsert
   */
  export type tbTiposprodutosUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbTiposprodutos
     */
    select?: tbTiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbTiposprodutosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbTiposprodutos to update in case it exists.
     */
    where: tbTiposprodutosWhereUniqueInput
    /**
     * In case the tbTiposprodutos found by the `where` argument doesn't exist, create a new tbTiposprodutos with this data.
     */
    create: XOR<tbTiposprodutosCreateInput, tbTiposprodutosUncheckedCreateInput>
    /**
     * In case the tbTiposprodutos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbTiposprodutosUpdateInput, tbTiposprodutosUncheckedUpdateInput>
  }


  /**
   * tbTiposprodutos delete
   */
  export type tbTiposprodutosDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbTiposprodutos
     */
    select?: tbTiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbTiposprodutosInclude<ExtArgs> | null
    /**
     * Filter which tbTiposprodutos to delete.
     */
    where: tbTiposprodutosWhereUniqueInput
  }


  /**
   * tbTiposprodutos deleteMany
   */
  export type tbTiposprodutosDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbTiposprodutos to delete
     */
    where?: tbTiposprodutosWhereInput
  }


  /**
   * tbTiposprodutos.tbProdutos
   */
  export type tbTiposprodutos$tbProdutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdutos
     */
    select?: tbProdutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdutosInclude<ExtArgs> | null
    where?: tbProdutosWhereInput
    orderBy?: tbProdutosOrderByWithRelationInput | tbProdutosOrderByWithRelationInput[]
    cursor?: tbProdutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbProdutosScalarFieldEnum | TbProdutosScalarFieldEnum[]
  }


  /**
   * tbTiposprodutos without action
   */
  export type tbTiposprodutosDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbTiposprodutos
     */
    select?: tbTiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbTiposprodutosInclude<ExtArgs> | null
  }



  /**
   * Model tbUnidademedida
   */

  export type AggregateTbUnidademedida = {
    _count: TbUnidademedidaCountAggregateOutputType | null
    _avg: TbUnidademedidaAvgAggregateOutputType | null
    _sum: TbUnidademedidaSumAggregateOutputType | null
    _min: TbUnidademedidaMinAggregateOutputType | null
    _max: TbUnidademedidaMaxAggregateOutputType | null
  }

  export type TbUnidademedidaAvgAggregateOutputType = {
    idunidade: number | null
  }

  export type TbUnidademedidaSumAggregateOutputType = {
    idunidade: number | null
  }

  export type TbUnidademedidaMinAggregateOutputType = {
    idunidade: number | null
    siglaun: string | null
    nomeunidade: string | null
  }

  export type TbUnidademedidaMaxAggregateOutputType = {
    idunidade: number | null
    siglaun: string | null
    nomeunidade: string | null
  }

  export type TbUnidademedidaCountAggregateOutputType = {
    idunidade: number
    siglaun: number
    nomeunidade: number
    _all: number
  }


  export type TbUnidademedidaAvgAggregateInputType = {
    idunidade?: true
  }

  export type TbUnidademedidaSumAggregateInputType = {
    idunidade?: true
  }

  export type TbUnidademedidaMinAggregateInputType = {
    idunidade?: true
    siglaun?: true
    nomeunidade?: true
  }

  export type TbUnidademedidaMaxAggregateInputType = {
    idunidade?: true
    siglaun?: true
    nomeunidade?: true
  }

  export type TbUnidademedidaCountAggregateInputType = {
    idunidade?: true
    siglaun?: true
    nomeunidade?: true
    _all?: true
  }

  export type TbUnidademedidaAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbUnidademedida to aggregate.
     */
    where?: tbUnidademedidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbUnidademedidas to fetch.
     */
    orderBy?: tbUnidademedidaOrderByWithRelationInput | tbUnidademedidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbUnidademedidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbUnidademedidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbUnidademedidas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbUnidademedidas
    **/
    _count?: true | TbUnidademedidaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbUnidademedidaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbUnidademedidaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbUnidademedidaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbUnidademedidaMaxAggregateInputType
  }

  export type GetTbUnidademedidaAggregateType<T extends TbUnidademedidaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbUnidademedida]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbUnidademedida[P]>
      : GetScalarType<T[P], AggregateTbUnidademedida[P]>
  }




  export type tbUnidademedidaGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbUnidademedidaWhereInput
    orderBy?: tbUnidademedidaOrderByWithAggregationInput | tbUnidademedidaOrderByWithAggregationInput[]
    by: TbUnidademedidaScalarFieldEnum[] | TbUnidademedidaScalarFieldEnum
    having?: tbUnidademedidaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbUnidademedidaCountAggregateInputType | true
    _avg?: TbUnidademedidaAvgAggregateInputType
    _sum?: TbUnidademedidaSumAggregateInputType
    _min?: TbUnidademedidaMinAggregateInputType
    _max?: TbUnidademedidaMaxAggregateInputType
  }

  export type TbUnidademedidaGroupByOutputType = {
    idunidade: number
    siglaun: string | null
    nomeunidade: string | null
    _count: TbUnidademedidaCountAggregateOutputType | null
    _avg: TbUnidademedidaAvgAggregateOutputType | null
    _sum: TbUnidademedidaSumAggregateOutputType | null
    _min: TbUnidademedidaMinAggregateOutputType | null
    _max: TbUnidademedidaMaxAggregateOutputType | null
  }

  type GetTbUnidademedidaGroupByPayload<T extends tbUnidademedidaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbUnidademedidaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbUnidademedidaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbUnidademedidaGroupByOutputType[P]>
            : GetScalarType<T[P], TbUnidademedidaGroupByOutputType[P]>
        }
      >
    >


  export type tbUnidademedidaSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idunidade?: boolean
    siglaun?: boolean
    nomeunidade?: boolean
    tbProdutos?: boolean | tbUnidademedida$tbProdutosArgs<ExtArgs>
    _count?: boolean | TbUnidademedidaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbUnidademedida"]>

  export type tbUnidademedidaSelectScalar = {
    idunidade?: boolean
    siglaun?: boolean
    nomeunidade?: boolean
  }

  export type tbUnidademedidaInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbProdutos?: boolean | tbUnidademedida$tbProdutosArgs<ExtArgs>
    _count?: boolean | TbUnidademedidaCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbUnidademedidaPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbUnidademedida"
    objects: {
      tbProdutos: Prisma.$tbProdutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idunidade: number
      siglaun: string | null
      nomeunidade: string | null
    }, ExtArgs["result"]["tbUnidademedida"]>
    composites: {}
  }


  type tbUnidademedidaGetPayload<S extends boolean | null | undefined | tbUnidademedidaDefaultArgs> = $Result.GetResult<Prisma.$tbUnidademedidaPayload, S>

  type tbUnidademedidaCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbUnidademedidaFindManyArgs, 'select' | 'include'> & {
      select?: TbUnidademedidaCountAggregateInputType | true
    }

  export interface tbUnidademedidaDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbUnidademedida'], meta: { name: 'tbUnidademedida' } }
    /**
     * Find zero or one TbUnidademedida that matches the filter.
     * @param {tbUnidademedidaFindUniqueArgs} args - Arguments to find a TbUnidademedida
     * @example
     * // Get one TbUnidademedida
     * const tbUnidademedida = await prisma.tbUnidademedida.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbUnidademedidaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbUnidademedidaFindUniqueArgs<ExtArgs>>
    ): Prisma__tbUnidademedidaClient<$Result.GetResult<Prisma.$tbUnidademedidaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TbUnidademedida that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbUnidademedidaFindUniqueOrThrowArgs} args - Arguments to find a TbUnidademedida
     * @example
     * // Get one TbUnidademedida
     * const tbUnidademedida = await prisma.tbUnidademedida.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbUnidademedidaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbUnidademedidaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbUnidademedidaClient<$Result.GetResult<Prisma.$tbUnidademedidaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TbUnidademedida that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbUnidademedidaFindFirstArgs} args - Arguments to find a TbUnidademedida
     * @example
     * // Get one TbUnidademedida
     * const tbUnidademedida = await prisma.tbUnidademedida.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbUnidademedidaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbUnidademedidaFindFirstArgs<ExtArgs>>
    ): Prisma__tbUnidademedidaClient<$Result.GetResult<Prisma.$tbUnidademedidaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TbUnidademedida that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbUnidademedidaFindFirstOrThrowArgs} args - Arguments to find a TbUnidademedida
     * @example
     * // Get one TbUnidademedida
     * const tbUnidademedida = await prisma.tbUnidademedida.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbUnidademedidaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbUnidademedidaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbUnidademedidaClient<$Result.GetResult<Prisma.$tbUnidademedidaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TbUnidademedidas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbUnidademedidaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TbUnidademedidas
     * const tbUnidademedidas = await prisma.tbUnidademedida.findMany()
     * 
     * // Get first 10 TbUnidademedidas
     * const tbUnidademedidas = await prisma.tbUnidademedida.findMany({ take: 10 })
     * 
     * // Only select the `idunidade`
     * const tbUnidademedidaWithIdunidadeOnly = await prisma.tbUnidademedida.findMany({ select: { idunidade: true } })
     * 
    **/
    findMany<T extends tbUnidademedidaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbUnidademedidaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbUnidademedidaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TbUnidademedida.
     * @param {tbUnidademedidaCreateArgs} args - Arguments to create a TbUnidademedida.
     * @example
     * // Create one TbUnidademedida
     * const TbUnidademedida = await prisma.tbUnidademedida.create({
     *   data: {
     *     // ... data to create a TbUnidademedida
     *   }
     * })
     * 
    **/
    create<T extends tbUnidademedidaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbUnidademedidaCreateArgs<ExtArgs>>
    ): Prisma__tbUnidademedidaClient<$Result.GetResult<Prisma.$tbUnidademedidaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TbUnidademedidas.
     *     @param {tbUnidademedidaCreateManyArgs} args - Arguments to create many TbUnidademedidas.
     *     @example
     *     // Create many TbUnidademedidas
     *     const tbUnidademedida = await prisma.tbUnidademedida.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbUnidademedidaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbUnidademedidaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TbUnidademedida.
     * @param {tbUnidademedidaDeleteArgs} args - Arguments to delete one TbUnidademedida.
     * @example
     * // Delete one TbUnidademedida
     * const TbUnidademedida = await prisma.tbUnidademedida.delete({
     *   where: {
     *     // ... filter to delete one TbUnidademedida
     *   }
     * })
     * 
    **/
    delete<T extends tbUnidademedidaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbUnidademedidaDeleteArgs<ExtArgs>>
    ): Prisma__tbUnidademedidaClient<$Result.GetResult<Prisma.$tbUnidademedidaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TbUnidademedida.
     * @param {tbUnidademedidaUpdateArgs} args - Arguments to update one TbUnidademedida.
     * @example
     * // Update one TbUnidademedida
     * const tbUnidademedida = await prisma.tbUnidademedida.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbUnidademedidaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbUnidademedidaUpdateArgs<ExtArgs>>
    ): Prisma__tbUnidademedidaClient<$Result.GetResult<Prisma.$tbUnidademedidaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TbUnidademedidas.
     * @param {tbUnidademedidaDeleteManyArgs} args - Arguments to filter TbUnidademedidas to delete.
     * @example
     * // Delete a few TbUnidademedidas
     * const { count } = await prisma.tbUnidademedida.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbUnidademedidaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbUnidademedidaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TbUnidademedidas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbUnidademedidaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TbUnidademedidas
     * const tbUnidademedida = await prisma.tbUnidademedida.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbUnidademedidaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbUnidademedidaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TbUnidademedida.
     * @param {tbUnidademedidaUpsertArgs} args - Arguments to update or create a TbUnidademedida.
     * @example
     * // Update or create a TbUnidademedida
     * const tbUnidademedida = await prisma.tbUnidademedida.upsert({
     *   create: {
     *     // ... data to create a TbUnidademedida
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TbUnidademedida we want to update
     *   }
     * })
    **/
    upsert<T extends tbUnidademedidaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbUnidademedidaUpsertArgs<ExtArgs>>
    ): Prisma__tbUnidademedidaClient<$Result.GetResult<Prisma.$tbUnidademedidaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TbUnidademedidas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbUnidademedidaCountArgs} args - Arguments to filter TbUnidademedidas to count.
     * @example
     * // Count the number of TbUnidademedidas
     * const count = await prisma.tbUnidademedida.count({
     *   where: {
     *     // ... the filter for the TbUnidademedidas we want to count
     *   }
     * })
    **/
    count<T extends tbUnidademedidaCountArgs>(
      args?: Subset<T, tbUnidademedidaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbUnidademedidaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TbUnidademedida.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbUnidademedidaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbUnidademedidaAggregateArgs>(args: Subset<T, TbUnidademedidaAggregateArgs>): Prisma.PrismaPromise<GetTbUnidademedidaAggregateType<T>>

    /**
     * Group by TbUnidademedida.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbUnidademedidaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbUnidademedidaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbUnidademedidaGroupByArgs['orderBy'] }
        : { orderBy?: tbUnidademedidaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbUnidademedidaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbUnidademedidaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbUnidademedida model
   */
  readonly fields: tbUnidademedidaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbUnidademedida.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbUnidademedidaClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbProdutos<T extends tbUnidademedida$tbProdutosArgs<ExtArgs> = {}>(args?: Subset<T, tbUnidademedida$tbProdutosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbProdutosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbUnidademedida model
   */ 
  interface tbUnidademedidaFieldRefs {
    readonly idunidade: FieldRef<"tbUnidademedida", 'Int'>
    readonly siglaun: FieldRef<"tbUnidademedida", 'String'>
    readonly nomeunidade: FieldRef<"tbUnidademedida", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tbUnidademedida findUnique
   */
  export type tbUnidademedidaFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUnidademedida
     */
    select?: tbUnidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUnidademedidaInclude<ExtArgs> | null
    /**
     * Filter, which tbUnidademedida to fetch.
     */
    where: tbUnidademedidaWhereUniqueInput
  }


  /**
   * tbUnidademedida findUniqueOrThrow
   */
  export type tbUnidademedidaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUnidademedida
     */
    select?: tbUnidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUnidademedidaInclude<ExtArgs> | null
    /**
     * Filter, which tbUnidademedida to fetch.
     */
    where: tbUnidademedidaWhereUniqueInput
  }


  /**
   * tbUnidademedida findFirst
   */
  export type tbUnidademedidaFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUnidademedida
     */
    select?: tbUnidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUnidademedidaInclude<ExtArgs> | null
    /**
     * Filter, which tbUnidademedida to fetch.
     */
    where?: tbUnidademedidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbUnidademedidas to fetch.
     */
    orderBy?: tbUnidademedidaOrderByWithRelationInput | tbUnidademedidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbUnidademedidas.
     */
    cursor?: tbUnidademedidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbUnidademedidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbUnidademedidas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbUnidademedidas.
     */
    distinct?: TbUnidademedidaScalarFieldEnum | TbUnidademedidaScalarFieldEnum[]
  }


  /**
   * tbUnidademedida findFirstOrThrow
   */
  export type tbUnidademedidaFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUnidademedida
     */
    select?: tbUnidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUnidademedidaInclude<ExtArgs> | null
    /**
     * Filter, which tbUnidademedida to fetch.
     */
    where?: tbUnidademedidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbUnidademedidas to fetch.
     */
    orderBy?: tbUnidademedidaOrderByWithRelationInput | tbUnidademedidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbUnidademedidas.
     */
    cursor?: tbUnidademedidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbUnidademedidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbUnidademedidas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbUnidademedidas.
     */
    distinct?: TbUnidademedidaScalarFieldEnum | TbUnidademedidaScalarFieldEnum[]
  }


  /**
   * tbUnidademedida findMany
   */
  export type tbUnidademedidaFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUnidademedida
     */
    select?: tbUnidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUnidademedidaInclude<ExtArgs> | null
    /**
     * Filter, which tbUnidademedidas to fetch.
     */
    where?: tbUnidademedidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbUnidademedidas to fetch.
     */
    orderBy?: tbUnidademedidaOrderByWithRelationInput | tbUnidademedidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbUnidademedidas.
     */
    cursor?: tbUnidademedidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbUnidademedidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbUnidademedidas.
     */
    skip?: number
    distinct?: TbUnidademedidaScalarFieldEnum | TbUnidademedidaScalarFieldEnum[]
  }


  /**
   * tbUnidademedida create
   */
  export type tbUnidademedidaCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUnidademedida
     */
    select?: tbUnidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUnidademedidaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbUnidademedida.
     */
    data?: XOR<tbUnidademedidaCreateInput, tbUnidademedidaUncheckedCreateInput>
  }


  /**
   * tbUnidademedida createMany
   */
  export type tbUnidademedidaCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbUnidademedidas.
     */
    data: tbUnidademedidaCreateManyInput | tbUnidademedidaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbUnidademedida update
   */
  export type tbUnidademedidaUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUnidademedida
     */
    select?: tbUnidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUnidademedidaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbUnidademedida.
     */
    data: XOR<tbUnidademedidaUpdateInput, tbUnidademedidaUncheckedUpdateInput>
    /**
     * Choose, which tbUnidademedida to update.
     */
    where: tbUnidademedidaWhereUniqueInput
  }


  /**
   * tbUnidademedida updateMany
   */
  export type tbUnidademedidaUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbUnidademedidas.
     */
    data: XOR<tbUnidademedidaUpdateManyMutationInput, tbUnidademedidaUncheckedUpdateManyInput>
    /**
     * Filter which tbUnidademedidas to update
     */
    where?: tbUnidademedidaWhereInput
  }


  /**
   * tbUnidademedida upsert
   */
  export type tbUnidademedidaUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUnidademedida
     */
    select?: tbUnidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUnidademedidaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbUnidademedida to update in case it exists.
     */
    where: tbUnidademedidaWhereUniqueInput
    /**
     * In case the tbUnidademedida found by the `where` argument doesn't exist, create a new tbUnidademedida with this data.
     */
    create: XOR<tbUnidademedidaCreateInput, tbUnidademedidaUncheckedCreateInput>
    /**
     * In case the tbUnidademedida was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbUnidademedidaUpdateInput, tbUnidademedidaUncheckedUpdateInput>
  }


  /**
   * tbUnidademedida delete
   */
  export type tbUnidademedidaDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUnidademedida
     */
    select?: tbUnidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUnidademedidaInclude<ExtArgs> | null
    /**
     * Filter which tbUnidademedida to delete.
     */
    where: tbUnidademedidaWhereUniqueInput
  }


  /**
   * tbUnidademedida deleteMany
   */
  export type tbUnidademedidaDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbUnidademedidas to delete
     */
    where?: tbUnidademedidaWhereInput
  }


  /**
   * tbUnidademedida.tbProdutos
   */
  export type tbUnidademedida$tbProdutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbProdutos
     */
    select?: tbProdutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbProdutosInclude<ExtArgs> | null
    where?: tbProdutosWhereInput
    orderBy?: tbProdutosOrderByWithRelationInput | tbProdutosOrderByWithRelationInput[]
    cursor?: tbProdutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbProdutosScalarFieldEnum | TbProdutosScalarFieldEnum[]
  }


  /**
   * tbUnidademedida without action
   */
  export type tbUnidademedidaDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbUnidademedida
     */
    select?: tbUnidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbUnidademedidaInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const TbFornecedoresScalarFieldEnum: {
    idfor: 'idfor',
    nomefor: 'nomefor',
    fisjur: 'fisjur',
    cnpjcpf: 'cnpjcpf',
    telefone: 'telefone',
    cep: 'cep',
    cidade: 'cidade',
    rua: 'rua',
    bairro: 'bairro',
    numero: 'numero',
    complemento: 'complemento',
    email: 'email'
  };

  export type TbFornecedoresScalarFieldEnum = (typeof TbFornecedoresScalarFieldEnum)[keyof typeof TbFornecedoresScalarFieldEnum]


  export const TbProdutosScalarFieldEnum: {
    idproduto: 'idproduto',
    nomeprod: 'nomeprod',
    idtipprod: 'idtipprod',
    idunidade: 'idunidade',
    quantminima: 'quantminima'
  };

  export type TbProdutosScalarFieldEnum = (typeof TbProdutosScalarFieldEnum)[keyof typeof TbProdutosScalarFieldEnum]


  export const TbEstoqueScalarFieldEnum: {
    idestoque: 'idestoque',
    idproduto: 'idproduto',
    idlocal: 'idlocal',
    quantidade: 'quantidade',
    dtinc: 'dtinc'
  };

  export type TbEstoqueScalarFieldEnum = (typeof TbEstoqueScalarFieldEnum)[keyof typeof TbEstoqueScalarFieldEnum]


  export const TbLocaisScalarFieldEnum: {
    idlocal: 'idlocal',
    nomelocal: 'nomelocal'
  };

  export type TbLocaisScalarFieldEnum = (typeof TbLocaisScalarFieldEnum)[keyof typeof TbLocaisScalarFieldEnum]


  export const TbMovimentosScalarFieldEnum: {
    idmovimento: 'idmovimento',
    tipmov: 'tipmov',
    idfor: 'idfor',
    idusuario_alteracao: 'idusuario_alteracao',
    dtinc: 'dtinc'
  };

  export type TbMovimentosScalarFieldEnum = (typeof TbMovimentosScalarFieldEnum)[keyof typeof TbMovimentosScalarFieldEnum]


  export const TbUsuariosScalarFieldEnum: {
    idusuario: 'idusuario',
    usu_login: 'usu_login',
    nome: 'nome',
    senha: 'senha',
    dtcriacao: 'dtcriacao',
    usu_admin: 'usu_admin'
  };

  export type TbUsuariosScalarFieldEnum = (typeof TbUsuariosScalarFieldEnum)[keyof typeof TbUsuariosScalarFieldEnum]


  export const TbMovitensScalarFieldEnum: {
    idmovimento: 'idmovimento',
    seqitem: 'seqitem',
    idproduto: 'idproduto',
    idlocal: 'idlocal',
    dtinc: 'dtinc',
    quantidade: 'quantidade'
  };

  export type TbMovitensScalarFieldEnum = (typeof TbMovitensScalarFieldEnum)[keyof typeof TbMovitensScalarFieldEnum]


  export const TbNfScalarFieldEnum: {
    idnf: 'idnf',
    numnf: 'numnf',
    idmovimento: 'idmovimento',
    serienf: 'serienf',
    idfor: 'idfor',
    idusuario_inclusao: 'idusuario_inclusao',
    dtemissao: 'dtemissao',
    vlrtotal: 'vlrtotal'
  };

  export type TbNfScalarFieldEnum = (typeof TbNfScalarFieldEnum)[keyof typeof TbNfScalarFieldEnum]


  export const TbNfitensScalarFieldEnum: {
    idnf: 'idnf',
    idmovimento: 'idmovimento',
    seqitem: 'seqitem',
    idproduto: 'idproduto',
    vlrunitario: 'vlrunitario',
    quantidade: 'quantidade',
    vlrtotitem: 'vlrtotitem'
  };

  export type TbNfitensScalarFieldEnum = (typeof TbNfitensScalarFieldEnum)[keyof typeof TbNfitensScalarFieldEnum]


  export const TbProdcomposicaoScalarFieldEnum: {
    idcomp: 'idcomp',
    idproduto: 'idproduto',
    idprodutocomp: 'idprodutocomp',
    quantidade: 'quantidade'
  };

  export type TbProdcomposicaoScalarFieldEnum = (typeof TbProdcomposicaoScalarFieldEnum)[keyof typeof TbProdcomposicaoScalarFieldEnum]


  export const TbTiposprodutosScalarFieldEnum: {
    idtipprod: 'idtipprod',
    nometipprod: 'nometipprod'
  };

  export type TbTiposprodutosScalarFieldEnum = (typeof TbTiposprodutosScalarFieldEnum)[keyof typeof TbTiposprodutosScalarFieldEnum]


  export const TbUnidademedidaScalarFieldEnum: {
    idunidade: 'idunidade',
    siglaun: 'siglaun',
    nomeunidade: 'nomeunidade'
  };

  export type TbUnidademedidaScalarFieldEnum = (typeof TbUnidademedidaScalarFieldEnum)[keyof typeof TbUnidademedidaScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type tbFornecedoresWhereInput = {
    AND?: tbFornecedoresWhereInput | tbFornecedoresWhereInput[]
    OR?: tbFornecedoresWhereInput[]
    NOT?: tbFornecedoresWhereInput | tbFornecedoresWhereInput[]
    idfor?: IntFilter<"tbFornecedores"> | number
    nomefor?: StringNullableFilter<"tbFornecedores"> | string | null
    fisjur?: StringNullableFilter<"tbFornecedores"> | string | null
    cnpjcpf?: StringNullableFilter<"tbFornecedores"> | string | null
    telefone?: StringNullableFilter<"tbFornecedores"> | string | null
    cep?: StringNullableFilter<"tbFornecedores"> | string | null
    cidade?: StringNullableFilter<"tbFornecedores"> | string | null
    rua?: StringNullableFilter<"tbFornecedores"> | string | null
    bairro?: StringNullableFilter<"tbFornecedores"> | string | null
    numero?: IntNullableFilter<"tbFornecedores"> | number | null
    complemento?: StringNullableFilter<"tbFornecedores"> | string | null
    email?: StringNullableFilter<"tbFornecedores"> | string | null
    tbMovimentos?: TbMovimentosListRelationFilter
    tbNf?: TbNfListRelationFilter
  }

  export type tbFornecedoresOrderByWithRelationInput = {
    idfor?: SortOrder
    nomefor?: SortOrderInput | SortOrder
    fisjur?: SortOrderInput | SortOrder
    cnpjcpf?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    rua?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    tbMovimentos?: tbMovimentosOrderByRelationAggregateInput
    tbNf?: tbNfOrderByRelationAggregateInput
  }

  export type tbFornecedoresWhereUniqueInput = Prisma.AtLeast<{
    idfor?: number
    cnpjcpf?: string
    email?: string
    AND?: tbFornecedoresWhereInput | tbFornecedoresWhereInput[]
    OR?: tbFornecedoresWhereInput[]
    NOT?: tbFornecedoresWhereInput | tbFornecedoresWhereInput[]
    nomefor?: StringNullableFilter<"tbFornecedores"> | string | null
    fisjur?: StringNullableFilter<"tbFornecedores"> | string | null
    telefone?: StringNullableFilter<"tbFornecedores"> | string | null
    cep?: StringNullableFilter<"tbFornecedores"> | string | null
    cidade?: StringNullableFilter<"tbFornecedores"> | string | null
    rua?: StringNullableFilter<"tbFornecedores"> | string | null
    bairro?: StringNullableFilter<"tbFornecedores"> | string | null
    numero?: IntNullableFilter<"tbFornecedores"> | number | null
    complemento?: StringNullableFilter<"tbFornecedores"> | string | null
    tbMovimentos?: TbMovimentosListRelationFilter
    tbNf?: TbNfListRelationFilter
  }, "idfor" | "cnpjcpf" | "email">

  export type tbFornecedoresOrderByWithAggregationInput = {
    idfor?: SortOrder
    nomefor?: SortOrderInput | SortOrder
    fisjur?: SortOrderInput | SortOrder
    cnpjcpf?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    rua?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    _count?: tbFornecedoresCountOrderByAggregateInput
    _avg?: tbFornecedoresAvgOrderByAggregateInput
    _max?: tbFornecedoresMaxOrderByAggregateInput
    _min?: tbFornecedoresMinOrderByAggregateInput
    _sum?: tbFornecedoresSumOrderByAggregateInput
  }

  export type tbFornecedoresScalarWhereWithAggregatesInput = {
    AND?: tbFornecedoresScalarWhereWithAggregatesInput | tbFornecedoresScalarWhereWithAggregatesInput[]
    OR?: tbFornecedoresScalarWhereWithAggregatesInput[]
    NOT?: tbFornecedoresScalarWhereWithAggregatesInput | tbFornecedoresScalarWhereWithAggregatesInput[]
    idfor?: IntWithAggregatesFilter<"tbFornecedores"> | number
    nomefor?: StringNullableWithAggregatesFilter<"tbFornecedores"> | string | null
    fisjur?: StringNullableWithAggregatesFilter<"tbFornecedores"> | string | null
    cnpjcpf?: StringNullableWithAggregatesFilter<"tbFornecedores"> | string | null
    telefone?: StringNullableWithAggregatesFilter<"tbFornecedores"> | string | null
    cep?: StringNullableWithAggregatesFilter<"tbFornecedores"> | string | null
    cidade?: StringNullableWithAggregatesFilter<"tbFornecedores"> | string | null
    rua?: StringNullableWithAggregatesFilter<"tbFornecedores"> | string | null
    bairro?: StringNullableWithAggregatesFilter<"tbFornecedores"> | string | null
    numero?: IntNullableWithAggregatesFilter<"tbFornecedores"> | number | null
    complemento?: StringNullableWithAggregatesFilter<"tbFornecedores"> | string | null
    email?: StringNullableWithAggregatesFilter<"tbFornecedores"> | string | null
  }

  export type tbProdutosWhereInput = {
    AND?: tbProdutosWhereInput | tbProdutosWhereInput[]
    OR?: tbProdutosWhereInput[]
    NOT?: tbProdutosWhereInput | tbProdutosWhereInput[]
    idproduto?: IntFilter<"tbProdutos"> | number
    nomeprod?: StringNullableFilter<"tbProdutos"> | string | null
    idtipprod?: IntNullableFilter<"tbProdutos"> | number | null
    idunidade?: IntNullableFilter<"tbProdutos"> | number | null
    quantminima?: IntNullableFilter<"tbProdutos"> | number | null
    tbEstoque?: TbEstoqueListRelationFilter
    tbMovitens?: TbMovitensListRelationFilter
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: TbProdcomposicaoListRelationFilter
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: TbProdcomposicaoListRelationFilter
    tbTiposProdutos?: XOR<TbTiposprodutosNullableRelationFilter, tbTiposprodutosWhereInput> | null
    tbUnidadeMedida?: XOR<TbUnidademedidaNullableRelationFilter, tbUnidademedidaWhereInput> | null
  }

  export type tbProdutosOrderByWithRelationInput = {
    idproduto?: SortOrder
    nomeprod?: SortOrderInput | SortOrder
    idtipprod?: SortOrderInput | SortOrder
    idunidade?: SortOrderInput | SortOrder
    quantminima?: SortOrderInput | SortOrder
    tbEstoque?: tbEstoqueOrderByRelationAggregateInput
    tbMovitens?: tbMovitensOrderByRelationAggregateInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoOrderByRelationAggregateInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoOrderByRelationAggregateInput
    tbTiposProdutos?: tbTiposprodutosOrderByWithRelationInput
    tbUnidadeMedida?: tbUnidademedidaOrderByWithRelationInput
  }

  export type tbProdutosWhereUniqueInput = Prisma.AtLeast<{
    idproduto?: number
    AND?: tbProdutosWhereInput | tbProdutosWhereInput[]
    OR?: tbProdutosWhereInput[]
    NOT?: tbProdutosWhereInput | tbProdutosWhereInput[]
    nomeprod?: StringNullableFilter<"tbProdutos"> | string | null
    idtipprod?: IntNullableFilter<"tbProdutos"> | number | null
    idunidade?: IntNullableFilter<"tbProdutos"> | number | null
    quantminima?: IntNullableFilter<"tbProdutos"> | number | null
    tbEstoque?: TbEstoqueListRelationFilter
    tbMovitens?: TbMovitensListRelationFilter
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: TbProdcomposicaoListRelationFilter
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: TbProdcomposicaoListRelationFilter
    tbTiposProdutos?: XOR<TbTiposprodutosNullableRelationFilter, tbTiposprodutosWhereInput> | null
    tbUnidadeMedida?: XOR<TbUnidademedidaNullableRelationFilter, tbUnidademedidaWhereInput> | null
  }, "idproduto">

  export type tbProdutosOrderByWithAggregationInput = {
    idproduto?: SortOrder
    nomeprod?: SortOrderInput | SortOrder
    idtipprod?: SortOrderInput | SortOrder
    idunidade?: SortOrderInput | SortOrder
    quantminima?: SortOrderInput | SortOrder
    _count?: tbProdutosCountOrderByAggregateInput
    _avg?: tbProdutosAvgOrderByAggregateInput
    _max?: tbProdutosMaxOrderByAggregateInput
    _min?: tbProdutosMinOrderByAggregateInput
    _sum?: tbProdutosSumOrderByAggregateInput
  }

  export type tbProdutosScalarWhereWithAggregatesInput = {
    AND?: tbProdutosScalarWhereWithAggregatesInput | tbProdutosScalarWhereWithAggregatesInput[]
    OR?: tbProdutosScalarWhereWithAggregatesInput[]
    NOT?: tbProdutosScalarWhereWithAggregatesInput | tbProdutosScalarWhereWithAggregatesInput[]
    idproduto?: IntWithAggregatesFilter<"tbProdutos"> | number
    nomeprod?: StringNullableWithAggregatesFilter<"tbProdutos"> | string | null
    idtipprod?: IntNullableWithAggregatesFilter<"tbProdutos"> | number | null
    idunidade?: IntNullableWithAggregatesFilter<"tbProdutos"> | number | null
    quantminima?: IntNullableWithAggregatesFilter<"tbProdutos"> | number | null
  }

  export type tbEstoqueWhereInput = {
    AND?: tbEstoqueWhereInput | tbEstoqueWhereInput[]
    OR?: tbEstoqueWhereInput[]
    NOT?: tbEstoqueWhereInput | tbEstoqueWhereInput[]
    idestoque?: IntFilter<"tbEstoque"> | number
    idproduto?: IntFilter<"tbEstoque"> | number
    idlocal?: IntNullableFilter<"tbEstoque"> | number | null
    quantidade?: DecimalNullableFilter<"tbEstoque"> | Decimal | DecimalJsLike | number | string | null
    dtinc?: DateTimeNullableFilter<"tbEstoque"> | Date | string | null
    tbLocais?: XOR<TbLocaisNullableRelationFilter, tbLocaisWhereInput> | null
    tbProdutos?: XOR<TbProdutosRelationFilter, tbProdutosWhereInput>
  }

  export type tbEstoqueOrderByWithRelationInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    dtinc?: SortOrderInput | SortOrder
    tbLocais?: tbLocaisOrderByWithRelationInput
    tbProdutos?: tbProdutosOrderByWithRelationInput
  }

  export type tbEstoqueWhereUniqueInput = Prisma.AtLeast<{
    idestoque_idproduto?: tbEstoqueIdestoqueIdprodutoCompoundUniqueInput
    AND?: tbEstoqueWhereInput | tbEstoqueWhereInput[]
    OR?: tbEstoqueWhereInput[]
    NOT?: tbEstoqueWhereInput | tbEstoqueWhereInput[]
    idestoque?: IntFilter<"tbEstoque"> | number
    idproduto?: IntFilter<"tbEstoque"> | number
    idlocal?: IntNullableFilter<"tbEstoque"> | number | null
    quantidade?: DecimalNullableFilter<"tbEstoque"> | Decimal | DecimalJsLike | number | string | null
    dtinc?: DateTimeNullableFilter<"tbEstoque"> | Date | string | null
    tbLocais?: XOR<TbLocaisNullableRelationFilter, tbLocaisWhereInput> | null
    tbProdutos?: XOR<TbProdutosRelationFilter, tbProdutosWhereInput>
  }, "idestoque_idproduto">

  export type tbEstoqueOrderByWithAggregationInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    dtinc?: SortOrderInput | SortOrder
    _count?: tbEstoqueCountOrderByAggregateInput
    _avg?: tbEstoqueAvgOrderByAggregateInput
    _max?: tbEstoqueMaxOrderByAggregateInput
    _min?: tbEstoqueMinOrderByAggregateInput
    _sum?: tbEstoqueSumOrderByAggregateInput
  }

  export type tbEstoqueScalarWhereWithAggregatesInput = {
    AND?: tbEstoqueScalarWhereWithAggregatesInput | tbEstoqueScalarWhereWithAggregatesInput[]
    OR?: tbEstoqueScalarWhereWithAggregatesInput[]
    NOT?: tbEstoqueScalarWhereWithAggregatesInput | tbEstoqueScalarWhereWithAggregatesInput[]
    idestoque?: IntWithAggregatesFilter<"tbEstoque"> | number
    idproduto?: IntWithAggregatesFilter<"tbEstoque"> | number
    idlocal?: IntNullableWithAggregatesFilter<"tbEstoque"> | number | null
    quantidade?: DecimalNullableWithAggregatesFilter<"tbEstoque"> | Decimal | DecimalJsLike | number | string | null
    dtinc?: DateTimeNullableWithAggregatesFilter<"tbEstoque"> | Date | string | null
  }

  export type tbLocaisWhereInput = {
    AND?: tbLocaisWhereInput | tbLocaisWhereInput[]
    OR?: tbLocaisWhereInput[]
    NOT?: tbLocaisWhereInput | tbLocaisWhereInput[]
    idlocal?: IntFilter<"tbLocais"> | number
    nomelocal?: StringNullableFilter<"tbLocais"> | string | null
    tbEstoque?: TbEstoqueListRelationFilter
    tbMovitens?: TbMovitensListRelationFilter
  }

  export type tbLocaisOrderByWithRelationInput = {
    idlocal?: SortOrder
    nomelocal?: SortOrderInput | SortOrder
    tbEstoque?: tbEstoqueOrderByRelationAggregateInput
    tbMovitens?: tbMovitensOrderByRelationAggregateInput
  }

  export type tbLocaisWhereUniqueInput = Prisma.AtLeast<{
    idlocal?: number
    AND?: tbLocaisWhereInput | tbLocaisWhereInput[]
    OR?: tbLocaisWhereInput[]
    NOT?: tbLocaisWhereInput | tbLocaisWhereInput[]
    nomelocal?: StringNullableFilter<"tbLocais"> | string | null
    tbEstoque?: TbEstoqueListRelationFilter
    tbMovitens?: TbMovitensListRelationFilter
  }, "idlocal">

  export type tbLocaisOrderByWithAggregationInput = {
    idlocal?: SortOrder
    nomelocal?: SortOrderInput | SortOrder
    _count?: tbLocaisCountOrderByAggregateInput
    _avg?: tbLocaisAvgOrderByAggregateInput
    _max?: tbLocaisMaxOrderByAggregateInput
    _min?: tbLocaisMinOrderByAggregateInput
    _sum?: tbLocaisSumOrderByAggregateInput
  }

  export type tbLocaisScalarWhereWithAggregatesInput = {
    AND?: tbLocaisScalarWhereWithAggregatesInput | tbLocaisScalarWhereWithAggregatesInput[]
    OR?: tbLocaisScalarWhereWithAggregatesInput[]
    NOT?: tbLocaisScalarWhereWithAggregatesInput | tbLocaisScalarWhereWithAggregatesInput[]
    idlocal?: IntWithAggregatesFilter<"tbLocais"> | number
    nomelocal?: StringNullableWithAggregatesFilter<"tbLocais"> | string | null
  }

  export type tbMovimentosWhereInput = {
    AND?: tbMovimentosWhereInput | tbMovimentosWhereInput[]
    OR?: tbMovimentosWhereInput[]
    NOT?: tbMovimentosWhereInput | tbMovimentosWhereInput[]
    idmovimento?: IntFilter<"tbMovimentos"> | number
    tipmov?: StringNullableFilter<"tbMovimentos"> | string | null
    idfor?: IntNullableFilter<"tbMovimentos"> | number | null
    idusuario_alteracao?: IntNullableFilter<"tbMovimentos"> | number | null
    dtinc?: DateTimeNullableFilter<"tbMovimentos"> | Date | string | null
    tbFornecedores?: XOR<TbFornecedoresNullableRelationFilter, tbFornecedoresWhereInput> | null
    tbUsuarios?: XOR<TbUsuariosNullableRelationFilter, tbUsuariosWhereInput> | null
    tbMovitens?: TbMovitensListRelationFilter
    tbNf?: XOR<TbNfNullableRelationFilter, tbNfWhereInput> | null
  }

  export type tbMovimentosOrderByWithRelationInput = {
    idmovimento?: SortOrder
    tipmov?: SortOrderInput | SortOrder
    idfor?: SortOrderInput | SortOrder
    idusuario_alteracao?: SortOrderInput | SortOrder
    dtinc?: SortOrderInput | SortOrder
    tbFornecedores?: tbFornecedoresOrderByWithRelationInput
    tbUsuarios?: tbUsuariosOrderByWithRelationInput
    tbMovitens?: tbMovitensOrderByRelationAggregateInput
    tbNf?: tbNfOrderByWithRelationInput
  }

  export type tbMovimentosWhereUniqueInput = Prisma.AtLeast<{
    idmovimento?: number
    AND?: tbMovimentosWhereInput | tbMovimentosWhereInput[]
    OR?: tbMovimentosWhereInput[]
    NOT?: tbMovimentosWhereInput | tbMovimentosWhereInput[]
    tipmov?: StringNullableFilter<"tbMovimentos"> | string | null
    idfor?: IntNullableFilter<"tbMovimentos"> | number | null
    idusuario_alteracao?: IntNullableFilter<"tbMovimentos"> | number | null
    dtinc?: DateTimeNullableFilter<"tbMovimentos"> | Date | string | null
    tbFornecedores?: XOR<TbFornecedoresNullableRelationFilter, tbFornecedoresWhereInput> | null
    tbUsuarios?: XOR<TbUsuariosNullableRelationFilter, tbUsuariosWhereInput> | null
    tbMovitens?: TbMovitensListRelationFilter
    tbNf?: XOR<TbNfNullableRelationFilter, tbNfWhereInput> | null
  }, "idmovimento">

  export type tbMovimentosOrderByWithAggregationInput = {
    idmovimento?: SortOrder
    tipmov?: SortOrderInput | SortOrder
    idfor?: SortOrderInput | SortOrder
    idusuario_alteracao?: SortOrderInput | SortOrder
    dtinc?: SortOrderInput | SortOrder
    _count?: tbMovimentosCountOrderByAggregateInput
    _avg?: tbMovimentosAvgOrderByAggregateInput
    _max?: tbMovimentosMaxOrderByAggregateInput
    _min?: tbMovimentosMinOrderByAggregateInput
    _sum?: tbMovimentosSumOrderByAggregateInput
  }

  export type tbMovimentosScalarWhereWithAggregatesInput = {
    AND?: tbMovimentosScalarWhereWithAggregatesInput | tbMovimentosScalarWhereWithAggregatesInput[]
    OR?: tbMovimentosScalarWhereWithAggregatesInput[]
    NOT?: tbMovimentosScalarWhereWithAggregatesInput | tbMovimentosScalarWhereWithAggregatesInput[]
    idmovimento?: IntWithAggregatesFilter<"tbMovimentos"> | number
    tipmov?: StringNullableWithAggregatesFilter<"tbMovimentos"> | string | null
    idfor?: IntNullableWithAggregatesFilter<"tbMovimentos"> | number | null
    idusuario_alteracao?: IntNullableWithAggregatesFilter<"tbMovimentos"> | number | null
    dtinc?: DateTimeNullableWithAggregatesFilter<"tbMovimentos"> | Date | string | null
  }

  export type tbUsuariosWhereInput = {
    AND?: tbUsuariosWhereInput | tbUsuariosWhereInput[]
    OR?: tbUsuariosWhereInput[]
    NOT?: tbUsuariosWhereInput | tbUsuariosWhereInput[]
    idusuario?: IntFilter<"tbUsuarios"> | number
    usu_login?: StringNullableFilter<"tbUsuarios"> | string | null
    nome?: StringNullableFilter<"tbUsuarios"> | string | null
    senha?: StringNullableFilter<"tbUsuarios"> | string | null
    dtcriacao?: DateTimeNullableFilter<"tbUsuarios"> | Date | string | null
    usu_admin?: BoolNullableFilter<"tbUsuarios"> | boolean | null
    tbMovimentos?: TbMovimentosListRelationFilter
    tbNf?: TbNfListRelationFilter
  }

  export type tbUsuariosOrderByWithRelationInput = {
    idusuario?: SortOrder
    usu_login?: SortOrderInput | SortOrder
    nome?: SortOrderInput | SortOrder
    senha?: SortOrderInput | SortOrder
    dtcriacao?: SortOrderInput | SortOrder
    usu_admin?: SortOrderInput | SortOrder
    tbMovimentos?: tbMovimentosOrderByRelationAggregateInput
    tbNf?: tbNfOrderByRelationAggregateInput
  }

  export type tbUsuariosWhereUniqueInput = Prisma.AtLeast<{
    idusuario?: number
    usu_login?: string
    AND?: tbUsuariosWhereInput | tbUsuariosWhereInput[]
    OR?: tbUsuariosWhereInput[]
    NOT?: tbUsuariosWhereInput | tbUsuariosWhereInput[]
    nome?: StringNullableFilter<"tbUsuarios"> | string | null
    senha?: StringNullableFilter<"tbUsuarios"> | string | null
    dtcriacao?: DateTimeNullableFilter<"tbUsuarios"> | Date | string | null
    usu_admin?: BoolNullableFilter<"tbUsuarios"> | boolean | null
    tbMovimentos?: TbMovimentosListRelationFilter
    tbNf?: TbNfListRelationFilter
  }, "idusuario" | "usu_login">

  export type tbUsuariosOrderByWithAggregationInput = {
    idusuario?: SortOrder
    usu_login?: SortOrderInput | SortOrder
    nome?: SortOrderInput | SortOrder
    senha?: SortOrderInput | SortOrder
    dtcriacao?: SortOrderInput | SortOrder
    usu_admin?: SortOrderInput | SortOrder
    _count?: tbUsuariosCountOrderByAggregateInput
    _avg?: tbUsuariosAvgOrderByAggregateInput
    _max?: tbUsuariosMaxOrderByAggregateInput
    _min?: tbUsuariosMinOrderByAggregateInput
    _sum?: tbUsuariosSumOrderByAggregateInput
  }

  export type tbUsuariosScalarWhereWithAggregatesInput = {
    AND?: tbUsuariosScalarWhereWithAggregatesInput | tbUsuariosScalarWhereWithAggregatesInput[]
    OR?: tbUsuariosScalarWhereWithAggregatesInput[]
    NOT?: tbUsuariosScalarWhereWithAggregatesInput | tbUsuariosScalarWhereWithAggregatesInput[]
    idusuario?: IntWithAggregatesFilter<"tbUsuarios"> | number
    usu_login?: StringNullableWithAggregatesFilter<"tbUsuarios"> | string | null
    nome?: StringNullableWithAggregatesFilter<"tbUsuarios"> | string | null
    senha?: StringNullableWithAggregatesFilter<"tbUsuarios"> | string | null
    dtcriacao?: DateTimeNullableWithAggregatesFilter<"tbUsuarios"> | Date | string | null
    usu_admin?: BoolNullableWithAggregatesFilter<"tbUsuarios"> | boolean | null
  }

  export type tbMovitensWhereInput = {
    AND?: tbMovitensWhereInput | tbMovitensWhereInput[]
    OR?: tbMovitensWhereInput[]
    NOT?: tbMovitensWhereInput | tbMovitensWhereInput[]
    idmovimento?: IntFilter<"tbMovitens"> | number
    seqitem?: IntFilter<"tbMovitens"> | number
    idproduto?: IntFilter<"tbMovitens"> | number
    idlocal?: IntNullableFilter<"tbMovitens"> | number | null
    dtinc?: DateTimeNullableFilter<"tbMovitens"> | Date | string | null
    quantidade?: DecimalNullableFilter<"tbMovitens"> | Decimal | DecimalJsLike | number | string | null
    tbLocais?: XOR<TbLocaisNullableRelationFilter, tbLocaisWhereInput> | null
    tbMovimentos?: XOR<TbMovimentosRelationFilter, tbMovimentosWhereInput>
    tbProdutos?: XOR<TbProdutosRelationFilter, tbProdutosWhereInput>
    tbNfitens?: TbNfitensListRelationFilter
  }

  export type tbMovitensOrderByWithRelationInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrderInput | SortOrder
    dtinc?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    tbLocais?: tbLocaisOrderByWithRelationInput
    tbMovimentos?: tbMovimentosOrderByWithRelationInput
    tbProdutos?: tbProdutosOrderByWithRelationInput
    tbNfitens?: tbNfitensOrderByRelationAggregateInput
  }

  export type tbMovitensWhereUniqueInput = Prisma.AtLeast<{
    idmovimento_seqitem_idproduto?: tbMovitensIdmovimentoSeqitemIdprodutoCompoundUniqueInput
    AND?: tbMovitensWhereInput | tbMovitensWhereInput[]
    OR?: tbMovitensWhereInput[]
    NOT?: tbMovitensWhereInput | tbMovitensWhereInput[]
    idmovimento?: IntFilter<"tbMovitens"> | number
    seqitem?: IntFilter<"tbMovitens"> | number
    idproduto?: IntFilter<"tbMovitens"> | number
    idlocal?: IntNullableFilter<"tbMovitens"> | number | null
    dtinc?: DateTimeNullableFilter<"tbMovitens"> | Date | string | null
    quantidade?: DecimalNullableFilter<"tbMovitens"> | Decimal | DecimalJsLike | number | string | null
    tbLocais?: XOR<TbLocaisNullableRelationFilter, tbLocaisWhereInput> | null
    tbMovimentos?: XOR<TbMovimentosRelationFilter, tbMovimentosWhereInput>
    tbProdutos?: XOR<TbProdutosRelationFilter, tbProdutosWhereInput>
    tbNfitens?: TbNfitensListRelationFilter
  }, "idmovimento_seqitem_idproduto">

  export type tbMovitensOrderByWithAggregationInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrderInput | SortOrder
    dtinc?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    _count?: tbMovitensCountOrderByAggregateInput
    _avg?: tbMovitensAvgOrderByAggregateInput
    _max?: tbMovitensMaxOrderByAggregateInput
    _min?: tbMovitensMinOrderByAggregateInput
    _sum?: tbMovitensSumOrderByAggregateInput
  }

  export type tbMovitensScalarWhereWithAggregatesInput = {
    AND?: tbMovitensScalarWhereWithAggregatesInput | tbMovitensScalarWhereWithAggregatesInput[]
    OR?: tbMovitensScalarWhereWithAggregatesInput[]
    NOT?: tbMovitensScalarWhereWithAggregatesInput | tbMovitensScalarWhereWithAggregatesInput[]
    idmovimento?: IntWithAggregatesFilter<"tbMovitens"> | number
    seqitem?: IntWithAggregatesFilter<"tbMovitens"> | number
    idproduto?: IntWithAggregatesFilter<"tbMovitens"> | number
    idlocal?: IntNullableWithAggregatesFilter<"tbMovitens"> | number | null
    dtinc?: DateTimeNullableWithAggregatesFilter<"tbMovitens"> | Date | string | null
    quantidade?: DecimalNullableWithAggregatesFilter<"tbMovitens"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfWhereInput = {
    AND?: tbNfWhereInput | tbNfWhereInput[]
    OR?: tbNfWhereInput[]
    NOT?: tbNfWhereInput | tbNfWhereInput[]
    idnf?: IntFilter<"tbNf"> | number
    numnf?: IntNullableFilter<"tbNf"> | number | null
    idmovimento?: IntNullableFilter<"tbNf"> | number | null
    serienf?: IntNullableFilter<"tbNf"> | number | null
    idfor?: IntNullableFilter<"tbNf"> | number | null
    idusuario_inclusao?: IntNullableFilter<"tbNf"> | number | null
    dtemissao?: DateTimeNullableFilter<"tbNf"> | Date | string | null
    vlrtotal?: DecimalNullableFilter<"tbNf"> | Decimal | DecimalJsLike | number | string | null
    tbMovimentos?: XOR<TbMovimentosNullableRelationFilter, tbMovimentosWhereInput> | null
    tbFornecedores?: XOR<TbFornecedoresNullableRelationFilter, tbFornecedoresWhereInput> | null
    tbUsuarios?: XOR<TbUsuariosNullableRelationFilter, tbUsuariosWhereInput> | null
    tbNfitens?: TbNfitensListRelationFilter
  }

  export type tbNfOrderByWithRelationInput = {
    idnf?: SortOrder
    numnf?: SortOrderInput | SortOrder
    idmovimento?: SortOrderInput | SortOrder
    serienf?: SortOrderInput | SortOrder
    idfor?: SortOrderInput | SortOrder
    idusuario_inclusao?: SortOrderInput | SortOrder
    dtemissao?: SortOrderInput | SortOrder
    vlrtotal?: SortOrderInput | SortOrder
    tbMovimentos?: tbMovimentosOrderByWithRelationInput
    tbFornecedores?: tbFornecedoresOrderByWithRelationInput
    tbUsuarios?: tbUsuariosOrderByWithRelationInput
    tbNfitens?: tbNfitensOrderByRelationAggregateInput
  }

  export type tbNfWhereUniqueInput = Prisma.AtLeast<{
    idnf?: number
    numnf?: number
    idmovimento?: number
    AND?: tbNfWhereInput | tbNfWhereInput[]
    OR?: tbNfWhereInput[]
    NOT?: tbNfWhereInput | tbNfWhereInput[]
    serienf?: IntNullableFilter<"tbNf"> | number | null
    idfor?: IntNullableFilter<"tbNf"> | number | null
    idusuario_inclusao?: IntNullableFilter<"tbNf"> | number | null
    dtemissao?: DateTimeNullableFilter<"tbNf"> | Date | string | null
    vlrtotal?: DecimalNullableFilter<"tbNf"> | Decimal | DecimalJsLike | number | string | null
    tbMovimentos?: XOR<TbMovimentosNullableRelationFilter, tbMovimentosWhereInput> | null
    tbFornecedores?: XOR<TbFornecedoresNullableRelationFilter, tbFornecedoresWhereInput> | null
    tbUsuarios?: XOR<TbUsuariosNullableRelationFilter, tbUsuariosWhereInput> | null
    tbNfitens?: TbNfitensListRelationFilter
  }, "idnf" | "numnf" | "idmovimento">

  export type tbNfOrderByWithAggregationInput = {
    idnf?: SortOrder
    numnf?: SortOrderInput | SortOrder
    idmovimento?: SortOrderInput | SortOrder
    serienf?: SortOrderInput | SortOrder
    idfor?: SortOrderInput | SortOrder
    idusuario_inclusao?: SortOrderInput | SortOrder
    dtemissao?: SortOrderInput | SortOrder
    vlrtotal?: SortOrderInput | SortOrder
    _count?: tbNfCountOrderByAggregateInput
    _avg?: tbNfAvgOrderByAggregateInput
    _max?: tbNfMaxOrderByAggregateInput
    _min?: tbNfMinOrderByAggregateInput
    _sum?: tbNfSumOrderByAggregateInput
  }

  export type tbNfScalarWhereWithAggregatesInput = {
    AND?: tbNfScalarWhereWithAggregatesInput | tbNfScalarWhereWithAggregatesInput[]
    OR?: tbNfScalarWhereWithAggregatesInput[]
    NOT?: tbNfScalarWhereWithAggregatesInput | tbNfScalarWhereWithAggregatesInput[]
    idnf?: IntWithAggregatesFilter<"tbNf"> | number
    numnf?: IntNullableWithAggregatesFilter<"tbNf"> | number | null
    idmovimento?: IntNullableWithAggregatesFilter<"tbNf"> | number | null
    serienf?: IntNullableWithAggregatesFilter<"tbNf"> | number | null
    idfor?: IntNullableWithAggregatesFilter<"tbNf"> | number | null
    idusuario_inclusao?: IntNullableWithAggregatesFilter<"tbNf"> | number | null
    dtemissao?: DateTimeNullableWithAggregatesFilter<"tbNf"> | Date | string | null
    vlrtotal?: DecimalNullableWithAggregatesFilter<"tbNf"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensWhereInput = {
    AND?: tbNfitensWhereInput | tbNfitensWhereInput[]
    OR?: tbNfitensWhereInput[]
    NOT?: tbNfitensWhereInput | tbNfitensWhereInput[]
    idnf?: IntFilter<"tbNfitens"> | number
    idmovimento?: IntNullableFilter<"tbNfitens"> | number | null
    seqitem?: IntFilter<"tbNfitens"> | number
    idproduto?: IntFilter<"tbNfitens"> | number
    vlrunitario?: DecimalNullableFilter<"tbNfitens"> | Decimal | DecimalJsLike | number | string | null
    quantidade?: DecimalNullableFilter<"tbNfitens"> | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: DecimalNullableFilter<"tbNfitens"> | Decimal | DecimalJsLike | number | string | null
    tbMovitens?: XOR<TbMovitensNullableRelationFilter, tbMovitensWhereInput> | null
    tbNf?: XOR<TbNfRelationFilter, tbNfWhereInput>
  }

  export type tbNfitensOrderByWithRelationInput = {
    idnf?: SortOrder
    idmovimento?: SortOrderInput | SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    vlrtotitem?: SortOrderInput | SortOrder
    tbMovitens?: tbMovitensOrderByWithRelationInput
    tbNf?: tbNfOrderByWithRelationInput
  }

  export type tbNfitensWhereUniqueInput = Prisma.AtLeast<{
    idnf_seqitem_idproduto?: tbNfitensIdnfSeqitemIdprodutoCompoundUniqueInput
    AND?: tbNfitensWhereInput | tbNfitensWhereInput[]
    OR?: tbNfitensWhereInput[]
    NOT?: tbNfitensWhereInput | tbNfitensWhereInput[]
    idnf?: IntFilter<"tbNfitens"> | number
    idmovimento?: IntNullableFilter<"tbNfitens"> | number | null
    seqitem?: IntFilter<"tbNfitens"> | number
    idproduto?: IntFilter<"tbNfitens"> | number
    vlrunitario?: DecimalNullableFilter<"tbNfitens"> | Decimal | DecimalJsLike | number | string | null
    quantidade?: DecimalNullableFilter<"tbNfitens"> | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: DecimalNullableFilter<"tbNfitens"> | Decimal | DecimalJsLike | number | string | null
    tbMovitens?: XOR<TbMovitensNullableRelationFilter, tbMovitensWhereInput> | null
    tbNf?: XOR<TbNfRelationFilter, tbNfWhereInput>
  }, "idnf_seqitem_idproduto">

  export type tbNfitensOrderByWithAggregationInput = {
    idnf?: SortOrder
    idmovimento?: SortOrderInput | SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    vlrtotitem?: SortOrderInput | SortOrder
    _count?: tbNfitensCountOrderByAggregateInput
    _avg?: tbNfitensAvgOrderByAggregateInput
    _max?: tbNfitensMaxOrderByAggregateInput
    _min?: tbNfitensMinOrderByAggregateInput
    _sum?: tbNfitensSumOrderByAggregateInput
  }

  export type tbNfitensScalarWhereWithAggregatesInput = {
    AND?: tbNfitensScalarWhereWithAggregatesInput | tbNfitensScalarWhereWithAggregatesInput[]
    OR?: tbNfitensScalarWhereWithAggregatesInput[]
    NOT?: tbNfitensScalarWhereWithAggregatesInput | tbNfitensScalarWhereWithAggregatesInput[]
    idnf?: IntWithAggregatesFilter<"tbNfitens"> | number
    idmovimento?: IntNullableWithAggregatesFilter<"tbNfitens"> | number | null
    seqitem?: IntWithAggregatesFilter<"tbNfitens"> | number
    idproduto?: IntWithAggregatesFilter<"tbNfitens"> | number
    vlrunitario?: DecimalNullableWithAggregatesFilter<"tbNfitens"> | Decimal | DecimalJsLike | number | string | null
    quantidade?: DecimalNullableWithAggregatesFilter<"tbNfitens"> | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: DecimalNullableWithAggregatesFilter<"tbNfitens"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoWhereInput = {
    AND?: tbProdcomposicaoWhereInput | tbProdcomposicaoWhereInput[]
    OR?: tbProdcomposicaoWhereInput[]
    NOT?: tbProdcomposicaoWhereInput | tbProdcomposicaoWhereInput[]
    idcomp?: IntFilter<"tbProdcomposicao"> | number
    idproduto?: IntFilter<"tbProdcomposicao"> | number
    idprodutocomp?: IntFilter<"tbProdcomposicao"> | number
    quantidade?: DecimalNullableFilter<"tbProdcomposicao"> | Decimal | DecimalJsLike | number | string | null
    tbProdutos_tbProdcomposicao_idprodutoTotbProdutos?: XOR<TbProdutosRelationFilter, tbProdutosWhereInput>
    tbProdutos_tbProdcomposicao_idprodutocompTotbProdutos?: XOR<TbProdutosRelationFilter, tbProdutosWhereInput>
  }

  export type tbProdcomposicaoOrderByWithRelationInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrderInput | SortOrder
    tbProdutos_tbProdcomposicao_idprodutoTotbProdutos?: tbProdutosOrderByWithRelationInput
    tbProdutos_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdutosOrderByWithRelationInput
  }

  export type tbProdcomposicaoWhereUniqueInput = Prisma.AtLeast<{
    idcomp_idproduto_idprodutocomp?: tbProdcomposicaoIdcompIdprodutoIdprodutocompCompoundUniqueInput
    AND?: tbProdcomposicaoWhereInput | tbProdcomposicaoWhereInput[]
    OR?: tbProdcomposicaoWhereInput[]
    NOT?: tbProdcomposicaoWhereInput | tbProdcomposicaoWhereInput[]
    idcomp?: IntFilter<"tbProdcomposicao"> | number
    idproduto?: IntFilter<"tbProdcomposicao"> | number
    idprodutocomp?: IntFilter<"tbProdcomposicao"> | number
    quantidade?: DecimalNullableFilter<"tbProdcomposicao"> | Decimal | DecimalJsLike | number | string | null
    tbProdutos_tbProdcomposicao_idprodutoTotbProdutos?: XOR<TbProdutosRelationFilter, tbProdutosWhereInput>
    tbProdutos_tbProdcomposicao_idprodutocompTotbProdutos?: XOR<TbProdutosRelationFilter, tbProdutosWhereInput>
  }, "idcomp_idproduto_idprodutocomp">

  export type tbProdcomposicaoOrderByWithAggregationInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrderInput | SortOrder
    _count?: tbProdcomposicaoCountOrderByAggregateInput
    _avg?: tbProdcomposicaoAvgOrderByAggregateInput
    _max?: tbProdcomposicaoMaxOrderByAggregateInput
    _min?: tbProdcomposicaoMinOrderByAggregateInput
    _sum?: tbProdcomposicaoSumOrderByAggregateInput
  }

  export type tbProdcomposicaoScalarWhereWithAggregatesInput = {
    AND?: tbProdcomposicaoScalarWhereWithAggregatesInput | tbProdcomposicaoScalarWhereWithAggregatesInput[]
    OR?: tbProdcomposicaoScalarWhereWithAggregatesInput[]
    NOT?: tbProdcomposicaoScalarWhereWithAggregatesInput | tbProdcomposicaoScalarWhereWithAggregatesInput[]
    idcomp?: IntWithAggregatesFilter<"tbProdcomposicao"> | number
    idproduto?: IntWithAggregatesFilter<"tbProdcomposicao"> | number
    idprodutocomp?: IntWithAggregatesFilter<"tbProdcomposicao"> | number
    quantidade?: DecimalNullableWithAggregatesFilter<"tbProdcomposicao"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbTiposprodutosWhereInput = {
    AND?: tbTiposprodutosWhereInput | tbTiposprodutosWhereInput[]
    OR?: tbTiposprodutosWhereInput[]
    NOT?: tbTiposprodutosWhereInput | tbTiposprodutosWhereInput[]
    idtipprod?: IntFilter<"tbTiposprodutos"> | number
    nometipprod?: StringNullableFilter<"tbTiposprodutos"> | string | null
    tbProdutos?: TbProdutosListRelationFilter
  }

  export type tbTiposprodutosOrderByWithRelationInput = {
    idtipprod?: SortOrder
    nometipprod?: SortOrderInput | SortOrder
    tbProdutos?: tbProdutosOrderByRelationAggregateInput
  }

  export type tbTiposprodutosWhereUniqueInput = Prisma.AtLeast<{
    idtipprod?: number
    AND?: tbTiposprodutosWhereInput | tbTiposprodutosWhereInput[]
    OR?: tbTiposprodutosWhereInput[]
    NOT?: tbTiposprodutosWhereInput | tbTiposprodutosWhereInput[]
    nometipprod?: StringNullableFilter<"tbTiposprodutos"> | string | null
    tbProdutos?: TbProdutosListRelationFilter
  }, "idtipprod">

  export type tbTiposprodutosOrderByWithAggregationInput = {
    idtipprod?: SortOrder
    nometipprod?: SortOrderInput | SortOrder
    _count?: tbTiposprodutosCountOrderByAggregateInput
    _avg?: tbTiposprodutosAvgOrderByAggregateInput
    _max?: tbTiposprodutosMaxOrderByAggregateInput
    _min?: tbTiposprodutosMinOrderByAggregateInput
    _sum?: tbTiposprodutosSumOrderByAggregateInput
  }

  export type tbTiposprodutosScalarWhereWithAggregatesInput = {
    AND?: tbTiposprodutosScalarWhereWithAggregatesInput | tbTiposprodutosScalarWhereWithAggregatesInput[]
    OR?: tbTiposprodutosScalarWhereWithAggregatesInput[]
    NOT?: tbTiposprodutosScalarWhereWithAggregatesInput | tbTiposprodutosScalarWhereWithAggregatesInput[]
    idtipprod?: IntWithAggregatesFilter<"tbTiposprodutos"> | number
    nometipprod?: StringNullableWithAggregatesFilter<"tbTiposprodutos"> | string | null
  }

  export type tbUnidademedidaWhereInput = {
    AND?: tbUnidademedidaWhereInput | tbUnidademedidaWhereInput[]
    OR?: tbUnidademedidaWhereInput[]
    NOT?: tbUnidademedidaWhereInput | tbUnidademedidaWhereInput[]
    idunidade?: IntFilter<"tbUnidademedida"> | number
    siglaun?: StringNullableFilter<"tbUnidademedida"> | string | null
    nomeunidade?: StringNullableFilter<"tbUnidademedida"> | string | null
    tbProdutos?: TbProdutosListRelationFilter
  }

  export type tbUnidademedidaOrderByWithRelationInput = {
    idunidade?: SortOrder
    siglaun?: SortOrderInput | SortOrder
    nomeunidade?: SortOrderInput | SortOrder
    tbProdutos?: tbProdutosOrderByRelationAggregateInput
  }

  export type tbUnidademedidaWhereUniqueInput = Prisma.AtLeast<{
    idunidade?: number
    siglaun?: string
    AND?: tbUnidademedidaWhereInput | tbUnidademedidaWhereInput[]
    OR?: tbUnidademedidaWhereInput[]
    NOT?: tbUnidademedidaWhereInput | tbUnidademedidaWhereInput[]
    nomeunidade?: StringNullableFilter<"tbUnidademedida"> | string | null
    tbProdutos?: TbProdutosListRelationFilter
  }, "idunidade" | "siglaun">

  export type tbUnidademedidaOrderByWithAggregationInput = {
    idunidade?: SortOrder
    siglaun?: SortOrderInput | SortOrder
    nomeunidade?: SortOrderInput | SortOrder
    _count?: tbUnidademedidaCountOrderByAggregateInput
    _avg?: tbUnidademedidaAvgOrderByAggregateInput
    _max?: tbUnidademedidaMaxOrderByAggregateInput
    _min?: tbUnidademedidaMinOrderByAggregateInput
    _sum?: tbUnidademedidaSumOrderByAggregateInput
  }

  export type tbUnidademedidaScalarWhereWithAggregatesInput = {
    AND?: tbUnidademedidaScalarWhereWithAggregatesInput | tbUnidademedidaScalarWhereWithAggregatesInput[]
    OR?: tbUnidademedidaScalarWhereWithAggregatesInput[]
    NOT?: tbUnidademedidaScalarWhereWithAggregatesInput | tbUnidademedidaScalarWhereWithAggregatesInput[]
    idunidade?: IntWithAggregatesFilter<"tbUnidademedida"> | number
    siglaun?: StringNullableWithAggregatesFilter<"tbUnidademedida"> | string | null
    nomeunidade?: StringNullableWithAggregatesFilter<"tbUnidademedida"> | string | null
  }

  export type tbFornecedoresCreateInput = {
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
    tbMovimentos?: tbMovimentosCreateNestedManyWithoutTbFornecedoresInput
    tbNf?: tbNfCreateNestedManyWithoutTbFornecedoresInput
  }

  export type tbFornecedoresUncheckedCreateInput = {
    idfor?: number
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
    tbMovimentos?: tbMovimentosUncheckedCreateNestedManyWithoutTbFornecedoresInput
    tbNf?: tbNfUncheckedCreateNestedManyWithoutTbFornecedoresInput
  }

  export type tbFornecedoresUpdateInput = {
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    tbMovimentos?: tbMovimentosUpdateManyWithoutTbFornecedoresNestedInput
    tbNf?: tbNfUpdateManyWithoutTbFornecedoresNestedInput
  }

  export type tbFornecedoresUncheckedUpdateInput = {
    idfor?: IntFieldUpdateOperationsInput | number
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    tbMovimentos?: tbMovimentosUncheckedUpdateManyWithoutTbFornecedoresNestedInput
    tbNf?: tbNfUncheckedUpdateManyWithoutTbFornecedoresNestedInput
  }

  export type tbFornecedoresCreateManyInput = {
    idfor?: number
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
  }

  export type tbFornecedoresUpdateManyMutationInput = {
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbFornecedoresUncheckedUpdateManyInput = {
    idfor?: IntFieldUpdateOperationsInput | number
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbProdutosCreateInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbEstoque?: tbEstoqueCreateNestedManyWithoutTbProdutosInput
    tbMovitens?: tbMovitensCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput
    tbTiposProdutos?: tbTiposprodutosCreateNestedOneWithoutTbProdutosInput
    tbUnidadeMedida?: tbUnidademedidaCreateNestedOneWithoutTbProdutosInput
  }

  export type tbProdutosUncheckedCreateInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    idunidade?: number | null
    quantminima?: number | null
    tbEstoque?: tbEstoqueUncheckedCreateNestedManyWithoutTbProdutosInput
    tbMovitens?: tbMovitensUncheckedCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput
  }

  export type tbProdutosUpdateInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbEstoque?: tbEstoqueUpdateManyWithoutTbProdutosNestedInput
    tbMovitens?: tbMovitensUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
    tbTiposProdutos?: tbTiposprodutosUpdateOneWithoutTbProdutosNestedInput
    tbUnidadeMedida?: tbUnidademedidaUpdateOneWithoutTbProdutosNestedInput
  }

  export type tbProdutosUncheckedUpdateInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbEstoque?: tbEstoqueUncheckedUpdateManyWithoutTbProdutosNestedInput
    tbMovitens?: tbMovitensUncheckedUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
  }

  export type tbProdutosCreateManyInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    idunidade?: number | null
    quantminima?: number | null
  }

  export type tbProdutosUpdateManyMutationInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbProdutosUncheckedUpdateManyInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbEstoqueCreateInput = {
    idestoque?: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
    tbLocais?: tbLocaisCreateNestedOneWithoutTbEstoqueInput
    tbProdutos: tbProdutosCreateNestedOneWithoutTbEstoqueInput
  }

  export type tbEstoqueUncheckedCreateInput = {
    idestoque?: number
    idproduto: number
    idlocal?: number | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
  }

  export type tbEstoqueUpdateInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbLocais?: tbLocaisUpdateOneWithoutTbEstoqueNestedInput
    tbProdutos?: tbProdutosUpdateOneRequiredWithoutTbEstoqueNestedInput
  }

  export type tbEstoqueUncheckedUpdateInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbEstoqueCreateManyInput = {
    idestoque?: number
    idproduto: number
    idlocal?: number | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
  }

  export type tbEstoqueUpdateManyMutationInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbEstoqueUncheckedUpdateManyInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbLocaisCreateInput = {
    nomelocal?: string | null
    tbEstoque?: tbEstoqueCreateNestedManyWithoutTbLocaisInput
    tbMovitens?: tbMovitensCreateNestedManyWithoutTbLocaisInput
  }

  export type tbLocaisUncheckedCreateInput = {
    idlocal?: number
    nomelocal?: string | null
    tbEstoque?: tbEstoqueUncheckedCreateNestedManyWithoutTbLocaisInput
    tbMovitens?: tbMovitensUncheckedCreateNestedManyWithoutTbLocaisInput
  }

  export type tbLocaisUpdateInput = {
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
    tbEstoque?: tbEstoqueUpdateManyWithoutTbLocaisNestedInput
    tbMovitens?: tbMovitensUpdateManyWithoutTbLocaisNestedInput
  }

  export type tbLocaisUncheckedUpdateInput = {
    idlocal?: IntFieldUpdateOperationsInput | number
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
    tbEstoque?: tbEstoqueUncheckedUpdateManyWithoutTbLocaisNestedInput
    tbMovitens?: tbMovitensUncheckedUpdateManyWithoutTbLocaisNestedInput
  }

  export type tbLocaisCreateManyInput = {
    idlocal?: number
    nomelocal?: string | null
  }

  export type tbLocaisUpdateManyMutationInput = {
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbLocaisUncheckedUpdateManyInput = {
    idlocal?: IntFieldUpdateOperationsInput | number
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbMovimentosCreateInput = {
    tipmov?: string | null
    dtinc?: Date | string | null
    tbFornecedores?: tbFornecedoresCreateNestedOneWithoutTbMovimentosInput
    tbUsuarios?: tbUsuariosCreateNestedOneWithoutTbMovimentosInput
    tbMovitens?: tbMovitensCreateNestedManyWithoutTbMovimentosInput
    tbNf?: tbNfCreateNestedOneWithoutTbMovimentosInput
  }

  export type tbMovimentosUncheckedCreateInput = {
    idmovimento?: number
    tipmov?: string | null
    idfor?: number | null
    idusuario_alteracao?: number | null
    dtinc?: Date | string | null
    tbMovitens?: tbMovitensUncheckedCreateNestedManyWithoutTbMovimentosInput
    tbNf?: tbNfUncheckedCreateNestedOneWithoutTbMovimentosInput
  }

  export type tbMovimentosUpdateInput = {
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbFornecedores?: tbFornecedoresUpdateOneWithoutTbMovimentosNestedInput
    tbUsuarios?: tbUsuariosUpdateOneWithoutTbMovimentosNestedInput
    tbMovitens?: tbMovitensUpdateManyWithoutTbMovimentosNestedInput
    tbNf?: tbNfUpdateOneWithoutTbMovimentosNestedInput
  }

  export type tbMovimentosUncheckedUpdateInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_alteracao?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbMovitens?: tbMovitensUncheckedUpdateManyWithoutTbMovimentosNestedInput
    tbNf?: tbNfUncheckedUpdateOneWithoutTbMovimentosNestedInput
  }

  export type tbMovimentosCreateManyInput = {
    idmovimento?: number
    tipmov?: string | null
    idfor?: number | null
    idusuario_alteracao?: number | null
    dtinc?: Date | string | null
  }

  export type tbMovimentosUpdateManyMutationInput = {
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbMovimentosUncheckedUpdateManyInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_alteracao?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbUsuariosCreateInput = {
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
    tbMovimentos?: tbMovimentosCreateNestedManyWithoutTbUsuariosInput
    tbNf?: tbNfCreateNestedManyWithoutTbUsuariosInput
  }

  export type tbUsuariosUncheckedCreateInput = {
    idusuario?: number
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
    tbMovimentos?: tbMovimentosUncheckedCreateNestedManyWithoutTbUsuariosInput
    tbNf?: tbNfUncheckedCreateNestedManyWithoutTbUsuariosInput
  }

  export type tbUsuariosUpdateInput = {
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbMovimentos?: tbMovimentosUpdateManyWithoutTbUsuariosNestedInput
    tbNf?: tbNfUpdateManyWithoutTbUsuariosNestedInput
  }

  export type tbUsuariosUncheckedUpdateInput = {
    idusuario?: IntFieldUpdateOperationsInput | number
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbMovimentos?: tbMovimentosUncheckedUpdateManyWithoutTbUsuariosNestedInput
    tbNf?: tbNfUncheckedUpdateManyWithoutTbUsuariosNestedInput
  }

  export type tbUsuariosCreateManyInput = {
    idusuario?: number
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
  }

  export type tbUsuariosUpdateManyMutationInput = {
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbUsuariosUncheckedUpdateManyInput = {
    idusuario?: IntFieldUpdateOperationsInput | number
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbMovitensCreateInput = {
    seqitem?: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbLocais?: tbLocaisCreateNestedOneWithoutTbMovitensInput
    tbMovimentos: tbMovimentosCreateNestedOneWithoutTbMovitensInput
    tbProdutos: tbProdutosCreateNestedOneWithoutTbMovitensInput
    tbNfitens?: tbNfitensCreateNestedManyWithoutTbMovitensInput
  }

  export type tbMovitensUncheckedCreateInput = {
    idmovimento: number
    seqitem?: number
    idproduto: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedCreateNestedManyWithoutTbMovitensInput
  }

  export type tbMovitensUpdateInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbLocais?: tbLocaisUpdateOneWithoutTbMovitensNestedInput
    tbMovimentos?: tbMovimentosUpdateOneRequiredWithoutTbMovitensNestedInput
    tbProdutos?: tbProdutosUpdateOneRequiredWithoutTbMovitensNestedInput
    tbNfitens?: tbNfitensUpdateManyWithoutTbMovitensNestedInput
  }

  export type tbMovitensUncheckedUpdateInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedUpdateManyWithoutTbMovitensNestedInput
  }

  export type tbMovitensCreateManyInput = {
    idmovimento: number
    seqitem?: number
    idproduto: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbMovitensUpdateManyMutationInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbMovitensUncheckedUpdateManyInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfCreateInput = {
    numnf?: number | null
    serienf?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    tbMovimentos?: tbMovimentosCreateNestedOneWithoutTbNfInput
    tbFornecedores?: tbFornecedoresCreateNestedOneWithoutTbNfInput
    tbUsuarios?: tbUsuariosCreateNestedOneWithoutTbNfInput
    tbNfitens?: tbNfitensCreateNestedManyWithoutTbNfInput
  }

  export type tbNfUncheckedCreateInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idfor?: number | null
    idusuario_inclusao?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedCreateNestedManyWithoutTbNfInput
  }

  export type tbNfUpdateInput = {
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbMovimentos?: tbMovimentosUpdateOneWithoutTbNfNestedInput
    tbFornecedores?: tbFornecedoresUpdateOneWithoutTbNfNestedInput
    tbUsuarios?: tbUsuariosUpdateOneWithoutTbNfNestedInput
    tbNfitens?: tbNfitensUpdateManyWithoutTbNfNestedInput
  }

  export type tbNfUncheckedUpdateInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_inclusao?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedUpdateManyWithoutTbNfNestedInput
  }

  export type tbNfCreateManyInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idfor?: number | null
    idusuario_inclusao?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfUpdateManyMutationInput = {
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfUncheckedUpdateManyInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_inclusao?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensCreateInput = {
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
    tbMovitens?: tbMovitensCreateNestedOneWithoutTbNfitensInput
    tbNf: tbNfCreateNestedOneWithoutTbNfitensInput
  }

  export type tbNfitensUncheckedCreateInput = {
    idnf: number
    idmovimento?: number | null
    seqitem: number
    idproduto: number
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensUpdateInput = {
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbMovitens?: tbMovitensUpdateOneWithoutTbNfitensNestedInput
    tbNf?: tbNfUpdateOneRequiredWithoutTbNfitensNestedInput
  }

  export type tbNfitensUncheckedUpdateInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensCreateManyInput = {
    idnf: number
    idmovimento?: number | null
    seqitem: number
    idproduto: number
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensUpdateManyMutationInput = {
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensUncheckedUpdateManyInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoCreateInput = {
    idcomp?: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbProdutos_tbProdcomposicao_idprodutoTotbProdutos: tbProdutosCreateNestedOneWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput
    tbProdutos_tbProdcomposicao_idprodutocompTotbProdutos: tbProdutosCreateNestedOneWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput
  }

  export type tbProdcomposicaoUncheckedCreateInput = {
    idcomp?: number
    idproduto: number
    idprodutocomp: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoUpdateInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbProdutos_tbProdcomposicao_idprodutoTotbProdutos?: tbProdutosUpdateOneRequiredWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosNestedInput
    tbProdutos_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdutosUpdateOneRequiredWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
  }

  export type tbProdcomposicaoUncheckedUpdateInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idprodutocomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoCreateManyInput = {
    idcomp?: number
    idproduto: number
    idprodutocomp: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoUpdateManyMutationInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoUncheckedUpdateManyInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idprodutocomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbTiposprodutosCreateInput = {
    nometipprod?: string | null
    tbProdutos?: tbProdutosCreateNestedManyWithoutTbTiposProdutosInput
  }

  export type tbTiposprodutosUncheckedCreateInput = {
    idtipprod?: number
    nometipprod?: string | null
    tbProdutos?: tbProdutosUncheckedCreateNestedManyWithoutTbTiposProdutosInput
  }

  export type tbTiposprodutosUpdateInput = {
    nometipprod?: NullableStringFieldUpdateOperationsInput | string | null
    tbProdutos?: tbProdutosUpdateManyWithoutTbTiposProdutosNestedInput
  }

  export type tbTiposprodutosUncheckedUpdateInput = {
    idtipprod?: IntFieldUpdateOperationsInput | number
    nometipprod?: NullableStringFieldUpdateOperationsInput | string | null
    tbProdutos?: tbProdutosUncheckedUpdateManyWithoutTbTiposProdutosNestedInput
  }

  export type tbTiposprodutosCreateManyInput = {
    idtipprod?: number
    nometipprod?: string | null
  }

  export type tbTiposprodutosUpdateManyMutationInput = {
    nometipprod?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbTiposprodutosUncheckedUpdateManyInput = {
    idtipprod?: IntFieldUpdateOperationsInput | number
    nometipprod?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbUnidademedidaCreateInput = {
    siglaun?: string | null
    nomeunidade?: string | null
    tbProdutos?: tbProdutosCreateNestedManyWithoutTbUnidadeMedidaInput
  }

  export type tbUnidademedidaUncheckedCreateInput = {
    idunidade?: number
    siglaun?: string | null
    nomeunidade?: string | null
    tbProdutos?: tbProdutosUncheckedCreateNestedManyWithoutTbUnidadeMedidaInput
  }

  export type tbUnidademedidaUpdateInput = {
    siglaun?: NullableStringFieldUpdateOperationsInput | string | null
    nomeunidade?: NullableStringFieldUpdateOperationsInput | string | null
    tbProdutos?: tbProdutosUpdateManyWithoutTbUnidadeMedidaNestedInput
  }

  export type tbUnidademedidaUncheckedUpdateInput = {
    idunidade?: IntFieldUpdateOperationsInput | number
    siglaun?: NullableStringFieldUpdateOperationsInput | string | null
    nomeunidade?: NullableStringFieldUpdateOperationsInput | string | null
    tbProdutos?: tbProdutosUncheckedUpdateManyWithoutTbUnidadeMedidaNestedInput
  }

  export type tbUnidademedidaCreateManyInput = {
    idunidade?: number
    siglaun?: string | null
    nomeunidade?: string | null
  }

  export type tbUnidademedidaUpdateManyMutationInput = {
    siglaun?: NullableStringFieldUpdateOperationsInput | string | null
    nomeunidade?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbUnidademedidaUncheckedUpdateManyInput = {
    idunidade?: IntFieldUpdateOperationsInput | number
    siglaun?: NullableStringFieldUpdateOperationsInput | string | null
    nomeunidade?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type TbMovimentosListRelationFilter = {
    every?: tbMovimentosWhereInput
    some?: tbMovimentosWhereInput
    none?: tbMovimentosWhereInput
  }

  export type TbNfListRelationFilter = {
    every?: tbNfWhereInput
    some?: tbNfWhereInput
    none?: tbNfWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type tbMovimentosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbNfOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbFornecedoresCountOrderByAggregateInput = {
    idfor?: SortOrder
    nomefor?: SortOrder
    fisjur?: SortOrder
    cnpjcpf?: SortOrder
    telefone?: SortOrder
    cep?: SortOrder
    cidade?: SortOrder
    rua?: SortOrder
    bairro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    email?: SortOrder
  }

  export type tbFornecedoresAvgOrderByAggregateInput = {
    idfor?: SortOrder
    numero?: SortOrder
  }

  export type tbFornecedoresMaxOrderByAggregateInput = {
    idfor?: SortOrder
    nomefor?: SortOrder
    fisjur?: SortOrder
    cnpjcpf?: SortOrder
    telefone?: SortOrder
    cep?: SortOrder
    cidade?: SortOrder
    rua?: SortOrder
    bairro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    email?: SortOrder
  }

  export type tbFornecedoresMinOrderByAggregateInput = {
    idfor?: SortOrder
    nomefor?: SortOrder
    fisjur?: SortOrder
    cnpjcpf?: SortOrder
    telefone?: SortOrder
    cep?: SortOrder
    cidade?: SortOrder
    rua?: SortOrder
    bairro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    email?: SortOrder
  }

  export type tbFornecedoresSumOrderByAggregateInput = {
    idfor?: SortOrder
    numero?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type TbEstoqueListRelationFilter = {
    every?: tbEstoqueWhereInput
    some?: tbEstoqueWhereInput
    none?: tbEstoqueWhereInput
  }

  export type TbMovitensListRelationFilter = {
    every?: tbMovitensWhereInput
    some?: tbMovitensWhereInput
    none?: tbMovitensWhereInput
  }

  export type TbProdcomposicaoListRelationFilter = {
    every?: tbProdcomposicaoWhereInput
    some?: tbProdcomposicaoWhereInput
    none?: tbProdcomposicaoWhereInput
  }

  export type TbTiposprodutosNullableRelationFilter = {
    is?: tbTiposprodutosWhereInput | null
    isNot?: tbTiposprodutosWhereInput | null
  }

  export type TbUnidademedidaNullableRelationFilter = {
    is?: tbUnidademedidaWhereInput | null
    isNot?: tbUnidademedidaWhereInput | null
  }

  export type tbEstoqueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbMovitensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbProdcomposicaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbProdutosCountOrderByAggregateInput = {
    idproduto?: SortOrder
    nomeprod?: SortOrder
    idtipprod?: SortOrder
    idunidade?: SortOrder
    quantminima?: SortOrder
  }

  export type tbProdutosAvgOrderByAggregateInput = {
    idproduto?: SortOrder
    idtipprod?: SortOrder
    idunidade?: SortOrder
    quantminima?: SortOrder
  }

  export type tbProdutosMaxOrderByAggregateInput = {
    idproduto?: SortOrder
    nomeprod?: SortOrder
    idtipprod?: SortOrder
    idunidade?: SortOrder
    quantminima?: SortOrder
  }

  export type tbProdutosMinOrderByAggregateInput = {
    idproduto?: SortOrder
    nomeprod?: SortOrder
    idtipprod?: SortOrder
    idunidade?: SortOrder
    quantminima?: SortOrder
  }

  export type tbProdutosSumOrderByAggregateInput = {
    idproduto?: SortOrder
    idtipprod?: SortOrder
    idunidade?: SortOrder
    quantminima?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type TbLocaisNullableRelationFilter = {
    is?: tbLocaisWhereInput | null
    isNot?: tbLocaisWhereInput | null
  }

  export type TbProdutosRelationFilter = {
    is?: tbProdutosWhereInput
    isNot?: tbProdutosWhereInput
  }

  export type tbEstoqueIdestoqueIdprodutoCompoundUniqueInput = {
    idestoque: number
    idproduto: number
  }

  export type tbEstoqueCountOrderByAggregateInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
    dtinc?: SortOrder
  }

  export type tbEstoqueAvgOrderByAggregateInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
  }

  export type tbEstoqueMaxOrderByAggregateInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
    dtinc?: SortOrder
  }

  export type tbEstoqueMinOrderByAggregateInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
    dtinc?: SortOrder
  }

  export type tbEstoqueSumOrderByAggregateInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type tbLocaisCountOrderByAggregateInput = {
    idlocal?: SortOrder
    nomelocal?: SortOrder
  }

  export type tbLocaisAvgOrderByAggregateInput = {
    idlocal?: SortOrder
  }

  export type tbLocaisMaxOrderByAggregateInput = {
    idlocal?: SortOrder
    nomelocal?: SortOrder
  }

  export type tbLocaisMinOrderByAggregateInput = {
    idlocal?: SortOrder
    nomelocal?: SortOrder
  }

  export type tbLocaisSumOrderByAggregateInput = {
    idlocal?: SortOrder
  }

  export type TbFornecedoresNullableRelationFilter = {
    is?: tbFornecedoresWhereInput | null
    isNot?: tbFornecedoresWhereInput | null
  }

  export type TbUsuariosNullableRelationFilter = {
    is?: tbUsuariosWhereInput | null
    isNot?: tbUsuariosWhereInput | null
  }

  export type TbNfNullableRelationFilter = {
    is?: tbNfWhereInput | null
    isNot?: tbNfWhereInput | null
  }

  export type tbMovimentosCountOrderByAggregateInput = {
    idmovimento?: SortOrder
    tipmov?: SortOrder
    idfor?: SortOrder
    idusuario_alteracao?: SortOrder
    dtinc?: SortOrder
  }

  export type tbMovimentosAvgOrderByAggregateInput = {
    idmovimento?: SortOrder
    idfor?: SortOrder
    idusuario_alteracao?: SortOrder
  }

  export type tbMovimentosMaxOrderByAggregateInput = {
    idmovimento?: SortOrder
    tipmov?: SortOrder
    idfor?: SortOrder
    idusuario_alteracao?: SortOrder
    dtinc?: SortOrder
  }

  export type tbMovimentosMinOrderByAggregateInput = {
    idmovimento?: SortOrder
    tipmov?: SortOrder
    idfor?: SortOrder
    idusuario_alteracao?: SortOrder
    dtinc?: SortOrder
  }

  export type tbMovimentosSumOrderByAggregateInput = {
    idmovimento?: SortOrder
    idfor?: SortOrder
    idusuario_alteracao?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type tbUsuariosCountOrderByAggregateInput = {
    idusuario?: SortOrder
    usu_login?: SortOrder
    nome?: SortOrder
    senha?: SortOrder
    dtcriacao?: SortOrder
    usu_admin?: SortOrder
  }

  export type tbUsuariosAvgOrderByAggregateInput = {
    idusuario?: SortOrder
  }

  export type tbUsuariosMaxOrderByAggregateInput = {
    idusuario?: SortOrder
    usu_login?: SortOrder
    nome?: SortOrder
    senha?: SortOrder
    dtcriacao?: SortOrder
    usu_admin?: SortOrder
  }

  export type tbUsuariosMinOrderByAggregateInput = {
    idusuario?: SortOrder
    usu_login?: SortOrder
    nome?: SortOrder
    senha?: SortOrder
    dtcriacao?: SortOrder
    usu_admin?: SortOrder
  }

  export type tbUsuariosSumOrderByAggregateInput = {
    idusuario?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type TbMovimentosRelationFilter = {
    is?: tbMovimentosWhereInput
    isNot?: tbMovimentosWhereInput
  }

  export type TbNfitensListRelationFilter = {
    every?: tbNfitensWhereInput
    some?: tbNfitensWhereInput
    none?: tbNfitensWhereInput
  }

  export type tbNfitensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbMovitensIdmovimentoSeqitemIdprodutoCompoundUniqueInput = {
    idmovimento: number
    seqitem: number
    idproduto: number
  }

  export type tbMovitensCountOrderByAggregateInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    dtinc?: SortOrder
    quantidade?: SortOrder
  }

  export type tbMovitensAvgOrderByAggregateInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
  }

  export type tbMovitensMaxOrderByAggregateInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    dtinc?: SortOrder
    quantidade?: SortOrder
  }

  export type tbMovitensMinOrderByAggregateInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    dtinc?: SortOrder
    quantidade?: SortOrder
  }

  export type tbMovitensSumOrderByAggregateInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
  }

  export type TbMovimentosNullableRelationFilter = {
    is?: tbMovimentosWhereInput | null
    isNot?: tbMovimentosWhereInput | null
  }

  export type tbNfCountOrderByAggregateInput = {
    idnf?: SortOrder
    numnf?: SortOrder
    idmovimento?: SortOrder
    serienf?: SortOrder
    idfor?: SortOrder
    idusuario_inclusao?: SortOrder
    dtemissao?: SortOrder
    vlrtotal?: SortOrder
  }

  export type tbNfAvgOrderByAggregateInput = {
    idnf?: SortOrder
    numnf?: SortOrder
    idmovimento?: SortOrder
    serienf?: SortOrder
    idfor?: SortOrder
    idusuario_inclusao?: SortOrder
    vlrtotal?: SortOrder
  }

  export type tbNfMaxOrderByAggregateInput = {
    idnf?: SortOrder
    numnf?: SortOrder
    idmovimento?: SortOrder
    serienf?: SortOrder
    idfor?: SortOrder
    idusuario_inclusao?: SortOrder
    dtemissao?: SortOrder
    vlrtotal?: SortOrder
  }

  export type tbNfMinOrderByAggregateInput = {
    idnf?: SortOrder
    numnf?: SortOrder
    idmovimento?: SortOrder
    serienf?: SortOrder
    idfor?: SortOrder
    idusuario_inclusao?: SortOrder
    dtemissao?: SortOrder
    vlrtotal?: SortOrder
  }

  export type tbNfSumOrderByAggregateInput = {
    idnf?: SortOrder
    numnf?: SortOrder
    idmovimento?: SortOrder
    serienf?: SortOrder
    idfor?: SortOrder
    idusuario_inclusao?: SortOrder
    vlrtotal?: SortOrder
  }

  export type TbMovitensNullableRelationFilter = {
    is?: tbMovitensWhereInput | null
    isNot?: tbMovitensWhereInput | null
  }

  export type TbNfRelationFilter = {
    is?: tbNfWhereInput
    isNot?: tbNfWhereInput
  }

  export type tbNfitensIdnfSeqitemIdprodutoCompoundUniqueInput = {
    idnf: number
    seqitem: number
    idproduto: number
  }

  export type tbNfitensCountOrderByAggregateInput = {
    idnf?: SortOrder
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrder
    quantidade?: SortOrder
    vlrtotitem?: SortOrder
  }

  export type tbNfitensAvgOrderByAggregateInput = {
    idnf?: SortOrder
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrder
    quantidade?: SortOrder
    vlrtotitem?: SortOrder
  }

  export type tbNfitensMaxOrderByAggregateInput = {
    idnf?: SortOrder
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrder
    quantidade?: SortOrder
    vlrtotitem?: SortOrder
  }

  export type tbNfitensMinOrderByAggregateInput = {
    idnf?: SortOrder
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrder
    quantidade?: SortOrder
    vlrtotitem?: SortOrder
  }

  export type tbNfitensSumOrderByAggregateInput = {
    idnf?: SortOrder
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrder
    quantidade?: SortOrder
    vlrtotitem?: SortOrder
  }

  export type tbProdcomposicaoIdcompIdprodutoIdprodutocompCompoundUniqueInput = {
    idcomp: number
    idproduto: number
    idprodutocomp: number
  }

  export type tbProdcomposicaoCountOrderByAggregateInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrder
  }

  export type tbProdcomposicaoAvgOrderByAggregateInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrder
  }

  export type tbProdcomposicaoMaxOrderByAggregateInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrder
  }

  export type tbProdcomposicaoMinOrderByAggregateInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrder
  }

  export type tbProdcomposicaoSumOrderByAggregateInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrder
  }

  export type TbProdutosListRelationFilter = {
    every?: tbProdutosWhereInput
    some?: tbProdutosWhereInput
    none?: tbProdutosWhereInput
  }

  export type tbProdutosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbTiposprodutosCountOrderByAggregateInput = {
    idtipprod?: SortOrder
    nometipprod?: SortOrder
  }

  export type tbTiposprodutosAvgOrderByAggregateInput = {
    idtipprod?: SortOrder
  }

  export type tbTiposprodutosMaxOrderByAggregateInput = {
    idtipprod?: SortOrder
    nometipprod?: SortOrder
  }

  export type tbTiposprodutosMinOrderByAggregateInput = {
    idtipprod?: SortOrder
    nometipprod?: SortOrder
  }

  export type tbTiposprodutosSumOrderByAggregateInput = {
    idtipprod?: SortOrder
  }

  export type tbUnidademedidaCountOrderByAggregateInput = {
    idunidade?: SortOrder
    siglaun?: SortOrder
    nomeunidade?: SortOrder
  }

  export type tbUnidademedidaAvgOrderByAggregateInput = {
    idunidade?: SortOrder
  }

  export type tbUnidademedidaMaxOrderByAggregateInput = {
    idunidade?: SortOrder
    siglaun?: SortOrder
    nomeunidade?: SortOrder
  }

  export type tbUnidademedidaMinOrderByAggregateInput = {
    idunidade?: SortOrder
    siglaun?: SortOrder
    nomeunidade?: SortOrder
  }

  export type tbUnidademedidaSumOrderByAggregateInput = {
    idunidade?: SortOrder
  }

  export type tbMovimentosCreateNestedManyWithoutTbFornecedoresInput = {
    create?: XOR<tbMovimentosCreateWithoutTbFornecedoresInput, tbMovimentosUncheckedCreateWithoutTbFornecedoresInput> | tbMovimentosCreateWithoutTbFornecedoresInput[] | tbMovimentosUncheckedCreateWithoutTbFornecedoresInput[]
    connectOrCreate?: tbMovimentosCreateOrConnectWithoutTbFornecedoresInput | tbMovimentosCreateOrConnectWithoutTbFornecedoresInput[]
    createMany?: tbMovimentosCreateManyTbFornecedoresInputEnvelope
    connect?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
  }

  export type tbNfCreateNestedManyWithoutTbFornecedoresInput = {
    create?: XOR<tbNfCreateWithoutTbFornecedoresInput, tbNfUncheckedCreateWithoutTbFornecedoresInput> | tbNfCreateWithoutTbFornecedoresInput[] | tbNfUncheckedCreateWithoutTbFornecedoresInput[]
    connectOrCreate?: tbNfCreateOrConnectWithoutTbFornecedoresInput | tbNfCreateOrConnectWithoutTbFornecedoresInput[]
    createMany?: tbNfCreateManyTbFornecedoresInputEnvelope
    connect?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
  }

  export type tbMovimentosUncheckedCreateNestedManyWithoutTbFornecedoresInput = {
    create?: XOR<tbMovimentosCreateWithoutTbFornecedoresInput, tbMovimentosUncheckedCreateWithoutTbFornecedoresInput> | tbMovimentosCreateWithoutTbFornecedoresInput[] | tbMovimentosUncheckedCreateWithoutTbFornecedoresInput[]
    connectOrCreate?: tbMovimentosCreateOrConnectWithoutTbFornecedoresInput | tbMovimentosCreateOrConnectWithoutTbFornecedoresInput[]
    createMany?: tbMovimentosCreateManyTbFornecedoresInputEnvelope
    connect?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
  }

  export type tbNfUncheckedCreateNestedManyWithoutTbFornecedoresInput = {
    create?: XOR<tbNfCreateWithoutTbFornecedoresInput, tbNfUncheckedCreateWithoutTbFornecedoresInput> | tbNfCreateWithoutTbFornecedoresInput[] | tbNfUncheckedCreateWithoutTbFornecedoresInput[]
    connectOrCreate?: tbNfCreateOrConnectWithoutTbFornecedoresInput | tbNfCreateOrConnectWithoutTbFornecedoresInput[]
    createMany?: tbNfCreateManyTbFornecedoresInputEnvelope
    connect?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type tbMovimentosUpdateManyWithoutTbFornecedoresNestedInput = {
    create?: XOR<tbMovimentosCreateWithoutTbFornecedoresInput, tbMovimentosUncheckedCreateWithoutTbFornecedoresInput> | tbMovimentosCreateWithoutTbFornecedoresInput[] | tbMovimentosUncheckedCreateWithoutTbFornecedoresInput[]
    connectOrCreate?: tbMovimentosCreateOrConnectWithoutTbFornecedoresInput | tbMovimentosCreateOrConnectWithoutTbFornecedoresInput[]
    upsert?: tbMovimentosUpsertWithWhereUniqueWithoutTbFornecedoresInput | tbMovimentosUpsertWithWhereUniqueWithoutTbFornecedoresInput[]
    createMany?: tbMovimentosCreateManyTbFornecedoresInputEnvelope
    set?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    disconnect?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    delete?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    connect?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    update?: tbMovimentosUpdateWithWhereUniqueWithoutTbFornecedoresInput | tbMovimentosUpdateWithWhereUniqueWithoutTbFornecedoresInput[]
    updateMany?: tbMovimentosUpdateManyWithWhereWithoutTbFornecedoresInput | tbMovimentosUpdateManyWithWhereWithoutTbFornecedoresInput[]
    deleteMany?: tbMovimentosScalarWhereInput | tbMovimentosScalarWhereInput[]
  }

  export type tbNfUpdateManyWithoutTbFornecedoresNestedInput = {
    create?: XOR<tbNfCreateWithoutTbFornecedoresInput, tbNfUncheckedCreateWithoutTbFornecedoresInput> | tbNfCreateWithoutTbFornecedoresInput[] | tbNfUncheckedCreateWithoutTbFornecedoresInput[]
    connectOrCreate?: tbNfCreateOrConnectWithoutTbFornecedoresInput | tbNfCreateOrConnectWithoutTbFornecedoresInput[]
    upsert?: tbNfUpsertWithWhereUniqueWithoutTbFornecedoresInput | tbNfUpsertWithWhereUniqueWithoutTbFornecedoresInput[]
    createMany?: tbNfCreateManyTbFornecedoresInputEnvelope
    set?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    disconnect?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    delete?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    connect?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    update?: tbNfUpdateWithWhereUniqueWithoutTbFornecedoresInput | tbNfUpdateWithWhereUniqueWithoutTbFornecedoresInput[]
    updateMany?: tbNfUpdateManyWithWhereWithoutTbFornecedoresInput | tbNfUpdateManyWithWhereWithoutTbFornecedoresInput[]
    deleteMany?: tbNfScalarWhereInput | tbNfScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type tbMovimentosUncheckedUpdateManyWithoutTbFornecedoresNestedInput = {
    create?: XOR<tbMovimentosCreateWithoutTbFornecedoresInput, tbMovimentosUncheckedCreateWithoutTbFornecedoresInput> | tbMovimentosCreateWithoutTbFornecedoresInput[] | tbMovimentosUncheckedCreateWithoutTbFornecedoresInput[]
    connectOrCreate?: tbMovimentosCreateOrConnectWithoutTbFornecedoresInput | tbMovimentosCreateOrConnectWithoutTbFornecedoresInput[]
    upsert?: tbMovimentosUpsertWithWhereUniqueWithoutTbFornecedoresInput | tbMovimentosUpsertWithWhereUniqueWithoutTbFornecedoresInput[]
    createMany?: tbMovimentosCreateManyTbFornecedoresInputEnvelope
    set?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    disconnect?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    delete?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    connect?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    update?: tbMovimentosUpdateWithWhereUniqueWithoutTbFornecedoresInput | tbMovimentosUpdateWithWhereUniqueWithoutTbFornecedoresInput[]
    updateMany?: tbMovimentosUpdateManyWithWhereWithoutTbFornecedoresInput | tbMovimentosUpdateManyWithWhereWithoutTbFornecedoresInput[]
    deleteMany?: tbMovimentosScalarWhereInput | tbMovimentosScalarWhereInput[]
  }

  export type tbNfUncheckedUpdateManyWithoutTbFornecedoresNestedInput = {
    create?: XOR<tbNfCreateWithoutTbFornecedoresInput, tbNfUncheckedCreateWithoutTbFornecedoresInput> | tbNfCreateWithoutTbFornecedoresInput[] | tbNfUncheckedCreateWithoutTbFornecedoresInput[]
    connectOrCreate?: tbNfCreateOrConnectWithoutTbFornecedoresInput | tbNfCreateOrConnectWithoutTbFornecedoresInput[]
    upsert?: tbNfUpsertWithWhereUniqueWithoutTbFornecedoresInput | tbNfUpsertWithWhereUniqueWithoutTbFornecedoresInput[]
    createMany?: tbNfCreateManyTbFornecedoresInputEnvelope
    set?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    disconnect?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    delete?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    connect?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    update?: tbNfUpdateWithWhereUniqueWithoutTbFornecedoresInput | tbNfUpdateWithWhereUniqueWithoutTbFornecedoresInput[]
    updateMany?: tbNfUpdateManyWithWhereWithoutTbFornecedoresInput | tbNfUpdateManyWithWhereWithoutTbFornecedoresInput[]
    deleteMany?: tbNfScalarWhereInput | tbNfScalarWhereInput[]
  }

  export type tbEstoqueCreateNestedManyWithoutTbProdutosInput = {
    create?: XOR<tbEstoqueCreateWithoutTbProdutosInput, tbEstoqueUncheckedCreateWithoutTbProdutosInput> | tbEstoqueCreateWithoutTbProdutosInput[] | tbEstoqueUncheckedCreateWithoutTbProdutosInput[]
    connectOrCreate?: tbEstoqueCreateOrConnectWithoutTbProdutosInput | tbEstoqueCreateOrConnectWithoutTbProdutosInput[]
    createMany?: tbEstoqueCreateManyTbProdutosInputEnvelope
    connect?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
  }

  export type tbMovitensCreateNestedManyWithoutTbProdutosInput = {
    create?: XOR<tbMovitensCreateWithoutTbProdutosInput, tbMovitensUncheckedCreateWithoutTbProdutosInput> | tbMovitensCreateWithoutTbProdutosInput[] | tbMovitensUncheckedCreateWithoutTbProdutosInput[]
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbProdutosInput | tbMovitensCreateOrConnectWithoutTbProdutosInput[]
    createMany?: tbMovitensCreateManyTbProdutosInputEnvelope
    connect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
  }

  export type tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput = {
    create?: XOR<tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput> | tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[] | tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    connectOrCreate?: tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput | tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    createMany?: tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInputEnvelope
    connect?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
  }

  export type tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    create?: XOR<tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput> | tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[] | tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    connectOrCreate?: tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput | tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    createMany?: tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInputEnvelope
    connect?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
  }

  export type tbTiposprodutosCreateNestedOneWithoutTbProdutosInput = {
    create?: XOR<tbTiposprodutosCreateWithoutTbProdutosInput, tbTiposprodutosUncheckedCreateWithoutTbProdutosInput>
    connectOrCreate?: tbTiposprodutosCreateOrConnectWithoutTbProdutosInput
    connect?: tbTiposprodutosWhereUniqueInput
  }

  export type tbUnidademedidaCreateNestedOneWithoutTbProdutosInput = {
    create?: XOR<tbUnidademedidaCreateWithoutTbProdutosInput, tbUnidademedidaUncheckedCreateWithoutTbProdutosInput>
    connectOrCreate?: tbUnidademedidaCreateOrConnectWithoutTbProdutosInput
    connect?: tbUnidademedidaWhereUniqueInput
  }

  export type tbEstoqueUncheckedCreateNestedManyWithoutTbProdutosInput = {
    create?: XOR<tbEstoqueCreateWithoutTbProdutosInput, tbEstoqueUncheckedCreateWithoutTbProdutosInput> | tbEstoqueCreateWithoutTbProdutosInput[] | tbEstoqueUncheckedCreateWithoutTbProdutosInput[]
    connectOrCreate?: tbEstoqueCreateOrConnectWithoutTbProdutosInput | tbEstoqueCreateOrConnectWithoutTbProdutosInput[]
    createMany?: tbEstoqueCreateManyTbProdutosInputEnvelope
    connect?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
  }

  export type tbMovitensUncheckedCreateNestedManyWithoutTbProdutosInput = {
    create?: XOR<tbMovitensCreateWithoutTbProdutosInput, tbMovitensUncheckedCreateWithoutTbProdutosInput> | tbMovitensCreateWithoutTbProdutosInput[] | tbMovitensUncheckedCreateWithoutTbProdutosInput[]
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbProdutosInput | tbMovitensCreateOrConnectWithoutTbProdutosInput[]
    createMany?: tbMovitensCreateManyTbProdutosInputEnvelope
    connect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
  }

  export type tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput = {
    create?: XOR<tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput> | tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[] | tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    connectOrCreate?: tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput | tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    createMany?: tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInputEnvelope
    connect?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
  }

  export type tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    create?: XOR<tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput> | tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[] | tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    connectOrCreate?: tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput | tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    createMany?: tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInputEnvelope
    connect?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
  }

  export type tbEstoqueUpdateManyWithoutTbProdutosNestedInput = {
    create?: XOR<tbEstoqueCreateWithoutTbProdutosInput, tbEstoqueUncheckedCreateWithoutTbProdutosInput> | tbEstoqueCreateWithoutTbProdutosInput[] | tbEstoqueUncheckedCreateWithoutTbProdutosInput[]
    connectOrCreate?: tbEstoqueCreateOrConnectWithoutTbProdutosInput | tbEstoqueCreateOrConnectWithoutTbProdutosInput[]
    upsert?: tbEstoqueUpsertWithWhereUniqueWithoutTbProdutosInput | tbEstoqueUpsertWithWhereUniqueWithoutTbProdutosInput[]
    createMany?: tbEstoqueCreateManyTbProdutosInputEnvelope
    set?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    disconnect?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    delete?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    connect?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    update?: tbEstoqueUpdateWithWhereUniqueWithoutTbProdutosInput | tbEstoqueUpdateWithWhereUniqueWithoutTbProdutosInput[]
    updateMany?: tbEstoqueUpdateManyWithWhereWithoutTbProdutosInput | tbEstoqueUpdateManyWithWhereWithoutTbProdutosInput[]
    deleteMany?: tbEstoqueScalarWhereInput | tbEstoqueScalarWhereInput[]
  }

  export type tbMovitensUpdateManyWithoutTbProdutosNestedInput = {
    create?: XOR<tbMovitensCreateWithoutTbProdutosInput, tbMovitensUncheckedCreateWithoutTbProdutosInput> | tbMovitensCreateWithoutTbProdutosInput[] | tbMovitensUncheckedCreateWithoutTbProdutosInput[]
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbProdutosInput | tbMovitensCreateOrConnectWithoutTbProdutosInput[]
    upsert?: tbMovitensUpsertWithWhereUniqueWithoutTbProdutosInput | tbMovitensUpsertWithWhereUniqueWithoutTbProdutosInput[]
    createMany?: tbMovitensCreateManyTbProdutosInputEnvelope
    set?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    disconnect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    delete?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    connect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    update?: tbMovitensUpdateWithWhereUniqueWithoutTbProdutosInput | tbMovitensUpdateWithWhereUniqueWithoutTbProdutosInput[]
    updateMany?: tbMovitensUpdateManyWithWhereWithoutTbProdutosInput | tbMovitensUpdateManyWithWhereWithoutTbProdutosInput[]
    deleteMany?: tbMovitensScalarWhereInput | tbMovitensScalarWhereInput[]
  }

  export type tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput = {
    create?: XOR<tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput> | tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[] | tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    connectOrCreate?: tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput | tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    upsert?: tbProdcomposicaoUpsertWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput | tbProdcomposicaoUpsertWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    createMany?: tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInputEnvelope
    set?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    disconnect?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    delete?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    connect?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    update?: tbProdcomposicaoUpdateWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput | tbProdcomposicaoUpdateWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    updateMany?: tbProdcomposicaoUpdateManyWithWhereWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput | tbProdcomposicaoUpdateManyWithWhereWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    deleteMany?: tbProdcomposicaoScalarWhereInput | tbProdcomposicaoScalarWhereInput[]
  }

  export type tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput = {
    create?: XOR<tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput> | tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[] | tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    connectOrCreate?: tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput | tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    upsert?: tbProdcomposicaoUpsertWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput | tbProdcomposicaoUpsertWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    createMany?: tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInputEnvelope
    set?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    disconnect?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    delete?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    connect?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    update?: tbProdcomposicaoUpdateWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput | tbProdcomposicaoUpdateWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    updateMany?: tbProdcomposicaoUpdateManyWithWhereWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput | tbProdcomposicaoUpdateManyWithWhereWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    deleteMany?: tbProdcomposicaoScalarWhereInput | tbProdcomposicaoScalarWhereInput[]
  }

  export type tbTiposprodutosUpdateOneWithoutTbProdutosNestedInput = {
    create?: XOR<tbTiposprodutosCreateWithoutTbProdutosInput, tbTiposprodutosUncheckedCreateWithoutTbProdutosInput>
    connectOrCreate?: tbTiposprodutosCreateOrConnectWithoutTbProdutosInput
    upsert?: tbTiposprodutosUpsertWithoutTbProdutosInput
    disconnect?: tbTiposprodutosWhereInput | boolean
    delete?: tbTiposprodutosWhereInput | boolean
    connect?: tbTiposprodutosWhereUniqueInput
    update?: XOR<XOR<tbTiposprodutosUpdateToOneWithWhereWithoutTbProdutosInput, tbTiposprodutosUpdateWithoutTbProdutosInput>, tbTiposprodutosUncheckedUpdateWithoutTbProdutosInput>
  }

  export type tbUnidademedidaUpdateOneWithoutTbProdutosNestedInput = {
    create?: XOR<tbUnidademedidaCreateWithoutTbProdutosInput, tbUnidademedidaUncheckedCreateWithoutTbProdutosInput>
    connectOrCreate?: tbUnidademedidaCreateOrConnectWithoutTbProdutosInput
    upsert?: tbUnidademedidaUpsertWithoutTbProdutosInput
    disconnect?: tbUnidademedidaWhereInput | boolean
    delete?: tbUnidademedidaWhereInput | boolean
    connect?: tbUnidademedidaWhereUniqueInput
    update?: XOR<XOR<tbUnidademedidaUpdateToOneWithWhereWithoutTbProdutosInput, tbUnidademedidaUpdateWithoutTbProdutosInput>, tbUnidademedidaUncheckedUpdateWithoutTbProdutosInput>
  }

  export type tbEstoqueUncheckedUpdateManyWithoutTbProdutosNestedInput = {
    create?: XOR<tbEstoqueCreateWithoutTbProdutosInput, tbEstoqueUncheckedCreateWithoutTbProdutosInput> | tbEstoqueCreateWithoutTbProdutosInput[] | tbEstoqueUncheckedCreateWithoutTbProdutosInput[]
    connectOrCreate?: tbEstoqueCreateOrConnectWithoutTbProdutosInput | tbEstoqueCreateOrConnectWithoutTbProdutosInput[]
    upsert?: tbEstoqueUpsertWithWhereUniqueWithoutTbProdutosInput | tbEstoqueUpsertWithWhereUniqueWithoutTbProdutosInput[]
    createMany?: tbEstoqueCreateManyTbProdutosInputEnvelope
    set?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    disconnect?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    delete?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    connect?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    update?: tbEstoqueUpdateWithWhereUniqueWithoutTbProdutosInput | tbEstoqueUpdateWithWhereUniqueWithoutTbProdutosInput[]
    updateMany?: tbEstoqueUpdateManyWithWhereWithoutTbProdutosInput | tbEstoqueUpdateManyWithWhereWithoutTbProdutosInput[]
    deleteMany?: tbEstoqueScalarWhereInput | tbEstoqueScalarWhereInput[]
  }

  export type tbMovitensUncheckedUpdateManyWithoutTbProdutosNestedInput = {
    create?: XOR<tbMovitensCreateWithoutTbProdutosInput, tbMovitensUncheckedCreateWithoutTbProdutosInput> | tbMovitensCreateWithoutTbProdutosInput[] | tbMovitensUncheckedCreateWithoutTbProdutosInput[]
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbProdutosInput | tbMovitensCreateOrConnectWithoutTbProdutosInput[]
    upsert?: tbMovitensUpsertWithWhereUniqueWithoutTbProdutosInput | tbMovitensUpsertWithWhereUniqueWithoutTbProdutosInput[]
    createMany?: tbMovitensCreateManyTbProdutosInputEnvelope
    set?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    disconnect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    delete?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    connect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    update?: tbMovitensUpdateWithWhereUniqueWithoutTbProdutosInput | tbMovitensUpdateWithWhereUniqueWithoutTbProdutosInput[]
    updateMany?: tbMovitensUpdateManyWithWhereWithoutTbProdutosInput | tbMovitensUpdateManyWithWhereWithoutTbProdutosInput[]
    deleteMany?: tbMovitensScalarWhereInput | tbMovitensScalarWhereInput[]
  }

  export type tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput = {
    create?: XOR<tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput> | tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[] | tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    connectOrCreate?: tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput | tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    upsert?: tbProdcomposicaoUpsertWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput | tbProdcomposicaoUpsertWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    createMany?: tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInputEnvelope
    set?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    disconnect?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    delete?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    connect?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    update?: tbProdcomposicaoUpdateWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput | tbProdcomposicaoUpdateWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    updateMany?: tbProdcomposicaoUpdateManyWithWhereWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput | tbProdcomposicaoUpdateManyWithWhereWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    deleteMany?: tbProdcomposicaoScalarWhereInput | tbProdcomposicaoScalarWhereInput[]
  }

  export type tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput = {
    create?: XOR<tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput> | tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[] | tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    connectOrCreate?: tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput | tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    upsert?: tbProdcomposicaoUpsertWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput | tbProdcomposicaoUpsertWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    createMany?: tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInputEnvelope
    set?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    disconnect?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    delete?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    connect?: tbProdcomposicaoWhereUniqueInput | tbProdcomposicaoWhereUniqueInput[]
    update?: tbProdcomposicaoUpdateWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput | tbProdcomposicaoUpdateWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    updateMany?: tbProdcomposicaoUpdateManyWithWhereWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput | tbProdcomposicaoUpdateManyWithWhereWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    deleteMany?: tbProdcomposicaoScalarWhereInput | tbProdcomposicaoScalarWhereInput[]
  }

  export type tbLocaisCreateNestedOneWithoutTbEstoqueInput = {
    create?: XOR<tbLocaisCreateWithoutTbEstoqueInput, tbLocaisUncheckedCreateWithoutTbEstoqueInput>
    connectOrCreate?: tbLocaisCreateOrConnectWithoutTbEstoqueInput
    connect?: tbLocaisWhereUniqueInput
  }

  export type tbProdutosCreateNestedOneWithoutTbEstoqueInput = {
    create?: XOR<tbProdutosCreateWithoutTbEstoqueInput, tbProdutosUncheckedCreateWithoutTbEstoqueInput>
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbEstoqueInput
    connect?: tbProdutosWhereUniqueInput
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type tbLocaisUpdateOneWithoutTbEstoqueNestedInput = {
    create?: XOR<tbLocaisCreateWithoutTbEstoqueInput, tbLocaisUncheckedCreateWithoutTbEstoqueInput>
    connectOrCreate?: tbLocaisCreateOrConnectWithoutTbEstoqueInput
    upsert?: tbLocaisUpsertWithoutTbEstoqueInput
    disconnect?: tbLocaisWhereInput | boolean
    delete?: tbLocaisWhereInput | boolean
    connect?: tbLocaisWhereUniqueInput
    update?: XOR<XOR<tbLocaisUpdateToOneWithWhereWithoutTbEstoqueInput, tbLocaisUpdateWithoutTbEstoqueInput>, tbLocaisUncheckedUpdateWithoutTbEstoqueInput>
  }

  export type tbProdutosUpdateOneRequiredWithoutTbEstoqueNestedInput = {
    create?: XOR<tbProdutosCreateWithoutTbEstoqueInput, tbProdutosUncheckedCreateWithoutTbEstoqueInput>
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbEstoqueInput
    upsert?: tbProdutosUpsertWithoutTbEstoqueInput
    connect?: tbProdutosWhereUniqueInput
    update?: XOR<XOR<tbProdutosUpdateToOneWithWhereWithoutTbEstoqueInput, tbProdutosUpdateWithoutTbEstoqueInput>, tbProdutosUncheckedUpdateWithoutTbEstoqueInput>
  }

  export type tbEstoqueCreateNestedManyWithoutTbLocaisInput = {
    create?: XOR<tbEstoqueCreateWithoutTbLocaisInput, tbEstoqueUncheckedCreateWithoutTbLocaisInput> | tbEstoqueCreateWithoutTbLocaisInput[] | tbEstoqueUncheckedCreateWithoutTbLocaisInput[]
    connectOrCreate?: tbEstoqueCreateOrConnectWithoutTbLocaisInput | tbEstoqueCreateOrConnectWithoutTbLocaisInput[]
    createMany?: tbEstoqueCreateManyTbLocaisInputEnvelope
    connect?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
  }

  export type tbMovitensCreateNestedManyWithoutTbLocaisInput = {
    create?: XOR<tbMovitensCreateWithoutTbLocaisInput, tbMovitensUncheckedCreateWithoutTbLocaisInput> | tbMovitensCreateWithoutTbLocaisInput[] | tbMovitensUncheckedCreateWithoutTbLocaisInput[]
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbLocaisInput | tbMovitensCreateOrConnectWithoutTbLocaisInput[]
    createMany?: tbMovitensCreateManyTbLocaisInputEnvelope
    connect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
  }

  export type tbEstoqueUncheckedCreateNestedManyWithoutTbLocaisInput = {
    create?: XOR<tbEstoqueCreateWithoutTbLocaisInput, tbEstoqueUncheckedCreateWithoutTbLocaisInput> | tbEstoqueCreateWithoutTbLocaisInput[] | tbEstoqueUncheckedCreateWithoutTbLocaisInput[]
    connectOrCreate?: tbEstoqueCreateOrConnectWithoutTbLocaisInput | tbEstoqueCreateOrConnectWithoutTbLocaisInput[]
    createMany?: tbEstoqueCreateManyTbLocaisInputEnvelope
    connect?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
  }

  export type tbMovitensUncheckedCreateNestedManyWithoutTbLocaisInput = {
    create?: XOR<tbMovitensCreateWithoutTbLocaisInput, tbMovitensUncheckedCreateWithoutTbLocaisInput> | tbMovitensCreateWithoutTbLocaisInput[] | tbMovitensUncheckedCreateWithoutTbLocaisInput[]
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbLocaisInput | tbMovitensCreateOrConnectWithoutTbLocaisInput[]
    createMany?: tbMovitensCreateManyTbLocaisInputEnvelope
    connect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
  }

  export type tbEstoqueUpdateManyWithoutTbLocaisNestedInput = {
    create?: XOR<tbEstoqueCreateWithoutTbLocaisInput, tbEstoqueUncheckedCreateWithoutTbLocaisInput> | tbEstoqueCreateWithoutTbLocaisInput[] | tbEstoqueUncheckedCreateWithoutTbLocaisInput[]
    connectOrCreate?: tbEstoqueCreateOrConnectWithoutTbLocaisInput | tbEstoqueCreateOrConnectWithoutTbLocaisInput[]
    upsert?: tbEstoqueUpsertWithWhereUniqueWithoutTbLocaisInput | tbEstoqueUpsertWithWhereUniqueWithoutTbLocaisInput[]
    createMany?: tbEstoqueCreateManyTbLocaisInputEnvelope
    set?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    disconnect?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    delete?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    connect?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    update?: tbEstoqueUpdateWithWhereUniqueWithoutTbLocaisInput | tbEstoqueUpdateWithWhereUniqueWithoutTbLocaisInput[]
    updateMany?: tbEstoqueUpdateManyWithWhereWithoutTbLocaisInput | tbEstoqueUpdateManyWithWhereWithoutTbLocaisInput[]
    deleteMany?: tbEstoqueScalarWhereInput | tbEstoqueScalarWhereInput[]
  }

  export type tbMovitensUpdateManyWithoutTbLocaisNestedInput = {
    create?: XOR<tbMovitensCreateWithoutTbLocaisInput, tbMovitensUncheckedCreateWithoutTbLocaisInput> | tbMovitensCreateWithoutTbLocaisInput[] | tbMovitensUncheckedCreateWithoutTbLocaisInput[]
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbLocaisInput | tbMovitensCreateOrConnectWithoutTbLocaisInput[]
    upsert?: tbMovitensUpsertWithWhereUniqueWithoutTbLocaisInput | tbMovitensUpsertWithWhereUniqueWithoutTbLocaisInput[]
    createMany?: tbMovitensCreateManyTbLocaisInputEnvelope
    set?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    disconnect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    delete?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    connect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    update?: tbMovitensUpdateWithWhereUniqueWithoutTbLocaisInput | tbMovitensUpdateWithWhereUniqueWithoutTbLocaisInput[]
    updateMany?: tbMovitensUpdateManyWithWhereWithoutTbLocaisInput | tbMovitensUpdateManyWithWhereWithoutTbLocaisInput[]
    deleteMany?: tbMovitensScalarWhereInput | tbMovitensScalarWhereInput[]
  }

  export type tbEstoqueUncheckedUpdateManyWithoutTbLocaisNestedInput = {
    create?: XOR<tbEstoqueCreateWithoutTbLocaisInput, tbEstoqueUncheckedCreateWithoutTbLocaisInput> | tbEstoqueCreateWithoutTbLocaisInput[] | tbEstoqueUncheckedCreateWithoutTbLocaisInput[]
    connectOrCreate?: tbEstoqueCreateOrConnectWithoutTbLocaisInput | tbEstoqueCreateOrConnectWithoutTbLocaisInput[]
    upsert?: tbEstoqueUpsertWithWhereUniqueWithoutTbLocaisInput | tbEstoqueUpsertWithWhereUniqueWithoutTbLocaisInput[]
    createMany?: tbEstoqueCreateManyTbLocaisInputEnvelope
    set?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    disconnect?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    delete?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    connect?: tbEstoqueWhereUniqueInput | tbEstoqueWhereUniqueInput[]
    update?: tbEstoqueUpdateWithWhereUniqueWithoutTbLocaisInput | tbEstoqueUpdateWithWhereUniqueWithoutTbLocaisInput[]
    updateMany?: tbEstoqueUpdateManyWithWhereWithoutTbLocaisInput | tbEstoqueUpdateManyWithWhereWithoutTbLocaisInput[]
    deleteMany?: tbEstoqueScalarWhereInput | tbEstoqueScalarWhereInput[]
  }

  export type tbMovitensUncheckedUpdateManyWithoutTbLocaisNestedInput = {
    create?: XOR<tbMovitensCreateWithoutTbLocaisInput, tbMovitensUncheckedCreateWithoutTbLocaisInput> | tbMovitensCreateWithoutTbLocaisInput[] | tbMovitensUncheckedCreateWithoutTbLocaisInput[]
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbLocaisInput | tbMovitensCreateOrConnectWithoutTbLocaisInput[]
    upsert?: tbMovitensUpsertWithWhereUniqueWithoutTbLocaisInput | tbMovitensUpsertWithWhereUniqueWithoutTbLocaisInput[]
    createMany?: tbMovitensCreateManyTbLocaisInputEnvelope
    set?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    disconnect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    delete?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    connect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    update?: tbMovitensUpdateWithWhereUniqueWithoutTbLocaisInput | tbMovitensUpdateWithWhereUniqueWithoutTbLocaisInput[]
    updateMany?: tbMovitensUpdateManyWithWhereWithoutTbLocaisInput | tbMovitensUpdateManyWithWhereWithoutTbLocaisInput[]
    deleteMany?: tbMovitensScalarWhereInput | tbMovitensScalarWhereInput[]
  }

  export type tbFornecedoresCreateNestedOneWithoutTbMovimentosInput = {
    create?: XOR<tbFornecedoresCreateWithoutTbMovimentosInput, tbFornecedoresUncheckedCreateWithoutTbMovimentosInput>
    connectOrCreate?: tbFornecedoresCreateOrConnectWithoutTbMovimentosInput
    connect?: tbFornecedoresWhereUniqueInput
  }

  export type tbUsuariosCreateNestedOneWithoutTbMovimentosInput = {
    create?: XOR<tbUsuariosCreateWithoutTbMovimentosInput, tbUsuariosUncheckedCreateWithoutTbMovimentosInput>
    connectOrCreate?: tbUsuariosCreateOrConnectWithoutTbMovimentosInput
    connect?: tbUsuariosWhereUniqueInput
  }

  export type tbMovitensCreateNestedManyWithoutTbMovimentosInput = {
    create?: XOR<tbMovitensCreateWithoutTbMovimentosInput, tbMovitensUncheckedCreateWithoutTbMovimentosInput> | tbMovitensCreateWithoutTbMovimentosInput[] | tbMovitensUncheckedCreateWithoutTbMovimentosInput[]
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbMovimentosInput | tbMovitensCreateOrConnectWithoutTbMovimentosInput[]
    createMany?: tbMovitensCreateManyTbMovimentosInputEnvelope
    connect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
  }

  export type tbNfCreateNestedOneWithoutTbMovimentosInput = {
    create?: XOR<tbNfCreateWithoutTbMovimentosInput, tbNfUncheckedCreateWithoutTbMovimentosInput>
    connectOrCreate?: tbNfCreateOrConnectWithoutTbMovimentosInput
    connect?: tbNfWhereUniqueInput
  }

  export type tbMovitensUncheckedCreateNestedManyWithoutTbMovimentosInput = {
    create?: XOR<tbMovitensCreateWithoutTbMovimentosInput, tbMovitensUncheckedCreateWithoutTbMovimentosInput> | tbMovitensCreateWithoutTbMovimentosInput[] | tbMovitensUncheckedCreateWithoutTbMovimentosInput[]
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbMovimentosInput | tbMovitensCreateOrConnectWithoutTbMovimentosInput[]
    createMany?: tbMovitensCreateManyTbMovimentosInputEnvelope
    connect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
  }

  export type tbNfUncheckedCreateNestedOneWithoutTbMovimentosInput = {
    create?: XOR<tbNfCreateWithoutTbMovimentosInput, tbNfUncheckedCreateWithoutTbMovimentosInput>
    connectOrCreate?: tbNfCreateOrConnectWithoutTbMovimentosInput
    connect?: tbNfWhereUniqueInput
  }

  export type tbFornecedoresUpdateOneWithoutTbMovimentosNestedInput = {
    create?: XOR<tbFornecedoresCreateWithoutTbMovimentosInput, tbFornecedoresUncheckedCreateWithoutTbMovimentosInput>
    connectOrCreate?: tbFornecedoresCreateOrConnectWithoutTbMovimentosInput
    upsert?: tbFornecedoresUpsertWithoutTbMovimentosInput
    disconnect?: tbFornecedoresWhereInput | boolean
    delete?: tbFornecedoresWhereInput | boolean
    connect?: tbFornecedoresWhereUniqueInput
    update?: XOR<XOR<tbFornecedoresUpdateToOneWithWhereWithoutTbMovimentosInput, tbFornecedoresUpdateWithoutTbMovimentosInput>, tbFornecedoresUncheckedUpdateWithoutTbMovimentosInput>
  }

  export type tbUsuariosUpdateOneWithoutTbMovimentosNestedInput = {
    create?: XOR<tbUsuariosCreateWithoutTbMovimentosInput, tbUsuariosUncheckedCreateWithoutTbMovimentosInput>
    connectOrCreate?: tbUsuariosCreateOrConnectWithoutTbMovimentosInput
    upsert?: tbUsuariosUpsertWithoutTbMovimentosInput
    disconnect?: tbUsuariosWhereInput | boolean
    delete?: tbUsuariosWhereInput | boolean
    connect?: tbUsuariosWhereUniqueInput
    update?: XOR<XOR<tbUsuariosUpdateToOneWithWhereWithoutTbMovimentosInput, tbUsuariosUpdateWithoutTbMovimentosInput>, tbUsuariosUncheckedUpdateWithoutTbMovimentosInput>
  }

  export type tbMovitensUpdateManyWithoutTbMovimentosNestedInput = {
    create?: XOR<tbMovitensCreateWithoutTbMovimentosInput, tbMovitensUncheckedCreateWithoutTbMovimentosInput> | tbMovitensCreateWithoutTbMovimentosInput[] | tbMovitensUncheckedCreateWithoutTbMovimentosInput[]
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbMovimentosInput | tbMovitensCreateOrConnectWithoutTbMovimentosInput[]
    upsert?: tbMovitensUpsertWithWhereUniqueWithoutTbMovimentosInput | tbMovitensUpsertWithWhereUniqueWithoutTbMovimentosInput[]
    createMany?: tbMovitensCreateManyTbMovimentosInputEnvelope
    set?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    disconnect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    delete?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    connect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    update?: tbMovitensUpdateWithWhereUniqueWithoutTbMovimentosInput | tbMovitensUpdateWithWhereUniqueWithoutTbMovimentosInput[]
    updateMany?: tbMovitensUpdateManyWithWhereWithoutTbMovimentosInput | tbMovitensUpdateManyWithWhereWithoutTbMovimentosInput[]
    deleteMany?: tbMovitensScalarWhereInput | tbMovitensScalarWhereInput[]
  }

  export type tbNfUpdateOneWithoutTbMovimentosNestedInput = {
    create?: XOR<tbNfCreateWithoutTbMovimentosInput, tbNfUncheckedCreateWithoutTbMovimentosInput>
    connectOrCreate?: tbNfCreateOrConnectWithoutTbMovimentosInput
    upsert?: tbNfUpsertWithoutTbMovimentosInput
    disconnect?: tbNfWhereInput | boolean
    delete?: tbNfWhereInput | boolean
    connect?: tbNfWhereUniqueInput
    update?: XOR<XOR<tbNfUpdateToOneWithWhereWithoutTbMovimentosInput, tbNfUpdateWithoutTbMovimentosInput>, tbNfUncheckedUpdateWithoutTbMovimentosInput>
  }

  export type tbMovitensUncheckedUpdateManyWithoutTbMovimentosNestedInput = {
    create?: XOR<tbMovitensCreateWithoutTbMovimentosInput, tbMovitensUncheckedCreateWithoutTbMovimentosInput> | tbMovitensCreateWithoutTbMovimentosInput[] | tbMovitensUncheckedCreateWithoutTbMovimentosInput[]
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbMovimentosInput | tbMovitensCreateOrConnectWithoutTbMovimentosInput[]
    upsert?: tbMovitensUpsertWithWhereUniqueWithoutTbMovimentosInput | tbMovitensUpsertWithWhereUniqueWithoutTbMovimentosInput[]
    createMany?: tbMovitensCreateManyTbMovimentosInputEnvelope
    set?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    disconnect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    delete?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    connect?: tbMovitensWhereUniqueInput | tbMovitensWhereUniqueInput[]
    update?: tbMovitensUpdateWithWhereUniqueWithoutTbMovimentosInput | tbMovitensUpdateWithWhereUniqueWithoutTbMovimentosInput[]
    updateMany?: tbMovitensUpdateManyWithWhereWithoutTbMovimentosInput | tbMovitensUpdateManyWithWhereWithoutTbMovimentosInput[]
    deleteMany?: tbMovitensScalarWhereInput | tbMovitensScalarWhereInput[]
  }

  export type tbNfUncheckedUpdateOneWithoutTbMovimentosNestedInput = {
    create?: XOR<tbNfCreateWithoutTbMovimentosInput, tbNfUncheckedCreateWithoutTbMovimentosInput>
    connectOrCreate?: tbNfCreateOrConnectWithoutTbMovimentosInput
    upsert?: tbNfUpsertWithoutTbMovimentosInput
    disconnect?: tbNfWhereInput | boolean
    delete?: tbNfWhereInput | boolean
    connect?: tbNfWhereUniqueInput
    update?: XOR<XOR<tbNfUpdateToOneWithWhereWithoutTbMovimentosInput, tbNfUpdateWithoutTbMovimentosInput>, tbNfUncheckedUpdateWithoutTbMovimentosInput>
  }

  export type tbMovimentosCreateNestedManyWithoutTbUsuariosInput = {
    create?: XOR<tbMovimentosCreateWithoutTbUsuariosInput, tbMovimentosUncheckedCreateWithoutTbUsuariosInput> | tbMovimentosCreateWithoutTbUsuariosInput[] | tbMovimentosUncheckedCreateWithoutTbUsuariosInput[]
    connectOrCreate?: tbMovimentosCreateOrConnectWithoutTbUsuariosInput | tbMovimentosCreateOrConnectWithoutTbUsuariosInput[]
    createMany?: tbMovimentosCreateManyTbUsuariosInputEnvelope
    connect?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
  }

  export type tbNfCreateNestedManyWithoutTbUsuariosInput = {
    create?: XOR<tbNfCreateWithoutTbUsuariosInput, tbNfUncheckedCreateWithoutTbUsuariosInput> | tbNfCreateWithoutTbUsuariosInput[] | tbNfUncheckedCreateWithoutTbUsuariosInput[]
    connectOrCreate?: tbNfCreateOrConnectWithoutTbUsuariosInput | tbNfCreateOrConnectWithoutTbUsuariosInput[]
    createMany?: tbNfCreateManyTbUsuariosInputEnvelope
    connect?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
  }

  export type tbMovimentosUncheckedCreateNestedManyWithoutTbUsuariosInput = {
    create?: XOR<tbMovimentosCreateWithoutTbUsuariosInput, tbMovimentosUncheckedCreateWithoutTbUsuariosInput> | tbMovimentosCreateWithoutTbUsuariosInput[] | tbMovimentosUncheckedCreateWithoutTbUsuariosInput[]
    connectOrCreate?: tbMovimentosCreateOrConnectWithoutTbUsuariosInput | tbMovimentosCreateOrConnectWithoutTbUsuariosInput[]
    createMany?: tbMovimentosCreateManyTbUsuariosInputEnvelope
    connect?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
  }

  export type tbNfUncheckedCreateNestedManyWithoutTbUsuariosInput = {
    create?: XOR<tbNfCreateWithoutTbUsuariosInput, tbNfUncheckedCreateWithoutTbUsuariosInput> | tbNfCreateWithoutTbUsuariosInput[] | tbNfUncheckedCreateWithoutTbUsuariosInput[]
    connectOrCreate?: tbNfCreateOrConnectWithoutTbUsuariosInput | tbNfCreateOrConnectWithoutTbUsuariosInput[]
    createMany?: tbNfCreateManyTbUsuariosInputEnvelope
    connect?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type tbMovimentosUpdateManyWithoutTbUsuariosNestedInput = {
    create?: XOR<tbMovimentosCreateWithoutTbUsuariosInput, tbMovimentosUncheckedCreateWithoutTbUsuariosInput> | tbMovimentosCreateWithoutTbUsuariosInput[] | tbMovimentosUncheckedCreateWithoutTbUsuariosInput[]
    connectOrCreate?: tbMovimentosCreateOrConnectWithoutTbUsuariosInput | tbMovimentosCreateOrConnectWithoutTbUsuariosInput[]
    upsert?: tbMovimentosUpsertWithWhereUniqueWithoutTbUsuariosInput | tbMovimentosUpsertWithWhereUniqueWithoutTbUsuariosInput[]
    createMany?: tbMovimentosCreateManyTbUsuariosInputEnvelope
    set?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    disconnect?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    delete?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    connect?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    update?: tbMovimentosUpdateWithWhereUniqueWithoutTbUsuariosInput | tbMovimentosUpdateWithWhereUniqueWithoutTbUsuariosInput[]
    updateMany?: tbMovimentosUpdateManyWithWhereWithoutTbUsuariosInput | tbMovimentosUpdateManyWithWhereWithoutTbUsuariosInput[]
    deleteMany?: tbMovimentosScalarWhereInput | tbMovimentosScalarWhereInput[]
  }

  export type tbNfUpdateManyWithoutTbUsuariosNestedInput = {
    create?: XOR<tbNfCreateWithoutTbUsuariosInput, tbNfUncheckedCreateWithoutTbUsuariosInput> | tbNfCreateWithoutTbUsuariosInput[] | tbNfUncheckedCreateWithoutTbUsuariosInput[]
    connectOrCreate?: tbNfCreateOrConnectWithoutTbUsuariosInput | tbNfCreateOrConnectWithoutTbUsuariosInput[]
    upsert?: tbNfUpsertWithWhereUniqueWithoutTbUsuariosInput | tbNfUpsertWithWhereUniqueWithoutTbUsuariosInput[]
    createMany?: tbNfCreateManyTbUsuariosInputEnvelope
    set?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    disconnect?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    delete?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    connect?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    update?: tbNfUpdateWithWhereUniqueWithoutTbUsuariosInput | tbNfUpdateWithWhereUniqueWithoutTbUsuariosInput[]
    updateMany?: tbNfUpdateManyWithWhereWithoutTbUsuariosInput | tbNfUpdateManyWithWhereWithoutTbUsuariosInput[]
    deleteMany?: tbNfScalarWhereInput | tbNfScalarWhereInput[]
  }

  export type tbMovimentosUncheckedUpdateManyWithoutTbUsuariosNestedInput = {
    create?: XOR<tbMovimentosCreateWithoutTbUsuariosInput, tbMovimentosUncheckedCreateWithoutTbUsuariosInput> | tbMovimentosCreateWithoutTbUsuariosInput[] | tbMovimentosUncheckedCreateWithoutTbUsuariosInput[]
    connectOrCreate?: tbMovimentosCreateOrConnectWithoutTbUsuariosInput | tbMovimentosCreateOrConnectWithoutTbUsuariosInput[]
    upsert?: tbMovimentosUpsertWithWhereUniqueWithoutTbUsuariosInput | tbMovimentosUpsertWithWhereUniqueWithoutTbUsuariosInput[]
    createMany?: tbMovimentosCreateManyTbUsuariosInputEnvelope
    set?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    disconnect?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    delete?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    connect?: tbMovimentosWhereUniqueInput | tbMovimentosWhereUniqueInput[]
    update?: tbMovimentosUpdateWithWhereUniqueWithoutTbUsuariosInput | tbMovimentosUpdateWithWhereUniqueWithoutTbUsuariosInput[]
    updateMany?: tbMovimentosUpdateManyWithWhereWithoutTbUsuariosInput | tbMovimentosUpdateManyWithWhereWithoutTbUsuariosInput[]
    deleteMany?: tbMovimentosScalarWhereInput | tbMovimentosScalarWhereInput[]
  }

  export type tbNfUncheckedUpdateManyWithoutTbUsuariosNestedInput = {
    create?: XOR<tbNfCreateWithoutTbUsuariosInput, tbNfUncheckedCreateWithoutTbUsuariosInput> | tbNfCreateWithoutTbUsuariosInput[] | tbNfUncheckedCreateWithoutTbUsuariosInput[]
    connectOrCreate?: tbNfCreateOrConnectWithoutTbUsuariosInput | tbNfCreateOrConnectWithoutTbUsuariosInput[]
    upsert?: tbNfUpsertWithWhereUniqueWithoutTbUsuariosInput | tbNfUpsertWithWhereUniqueWithoutTbUsuariosInput[]
    createMany?: tbNfCreateManyTbUsuariosInputEnvelope
    set?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    disconnect?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    delete?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    connect?: tbNfWhereUniqueInput | tbNfWhereUniqueInput[]
    update?: tbNfUpdateWithWhereUniqueWithoutTbUsuariosInput | tbNfUpdateWithWhereUniqueWithoutTbUsuariosInput[]
    updateMany?: tbNfUpdateManyWithWhereWithoutTbUsuariosInput | tbNfUpdateManyWithWhereWithoutTbUsuariosInput[]
    deleteMany?: tbNfScalarWhereInput | tbNfScalarWhereInput[]
  }

  export type tbLocaisCreateNestedOneWithoutTbMovitensInput = {
    create?: XOR<tbLocaisCreateWithoutTbMovitensInput, tbLocaisUncheckedCreateWithoutTbMovitensInput>
    connectOrCreate?: tbLocaisCreateOrConnectWithoutTbMovitensInput
    connect?: tbLocaisWhereUniqueInput
  }

  export type tbMovimentosCreateNestedOneWithoutTbMovitensInput = {
    create?: XOR<tbMovimentosCreateWithoutTbMovitensInput, tbMovimentosUncheckedCreateWithoutTbMovitensInput>
    connectOrCreate?: tbMovimentosCreateOrConnectWithoutTbMovitensInput
    connect?: tbMovimentosWhereUniqueInput
  }

  export type tbProdutosCreateNestedOneWithoutTbMovitensInput = {
    create?: XOR<tbProdutosCreateWithoutTbMovitensInput, tbProdutosUncheckedCreateWithoutTbMovitensInput>
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbMovitensInput
    connect?: tbProdutosWhereUniqueInput
  }

  export type tbNfitensCreateNestedManyWithoutTbMovitensInput = {
    create?: XOR<tbNfitensCreateWithoutTbMovitensInput, tbNfitensUncheckedCreateWithoutTbMovitensInput> | tbNfitensCreateWithoutTbMovitensInput[] | tbNfitensUncheckedCreateWithoutTbMovitensInput[]
    connectOrCreate?: tbNfitensCreateOrConnectWithoutTbMovitensInput | tbNfitensCreateOrConnectWithoutTbMovitensInput[]
    createMany?: tbNfitensCreateManyTbMovitensInputEnvelope
    connect?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
  }

  export type tbNfitensUncheckedCreateNestedManyWithoutTbMovitensInput = {
    create?: XOR<tbNfitensCreateWithoutTbMovitensInput, tbNfitensUncheckedCreateWithoutTbMovitensInput> | tbNfitensCreateWithoutTbMovitensInput[] | tbNfitensUncheckedCreateWithoutTbMovitensInput[]
    connectOrCreate?: tbNfitensCreateOrConnectWithoutTbMovitensInput | tbNfitensCreateOrConnectWithoutTbMovitensInput[]
    createMany?: tbNfitensCreateManyTbMovitensInputEnvelope
    connect?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
  }

  export type tbLocaisUpdateOneWithoutTbMovitensNestedInput = {
    create?: XOR<tbLocaisCreateWithoutTbMovitensInput, tbLocaisUncheckedCreateWithoutTbMovitensInput>
    connectOrCreate?: tbLocaisCreateOrConnectWithoutTbMovitensInput
    upsert?: tbLocaisUpsertWithoutTbMovitensInput
    disconnect?: tbLocaisWhereInput | boolean
    delete?: tbLocaisWhereInput | boolean
    connect?: tbLocaisWhereUniqueInput
    update?: XOR<XOR<tbLocaisUpdateToOneWithWhereWithoutTbMovitensInput, tbLocaisUpdateWithoutTbMovitensInput>, tbLocaisUncheckedUpdateWithoutTbMovitensInput>
  }

  export type tbMovimentosUpdateOneRequiredWithoutTbMovitensNestedInput = {
    create?: XOR<tbMovimentosCreateWithoutTbMovitensInput, tbMovimentosUncheckedCreateWithoutTbMovitensInput>
    connectOrCreate?: tbMovimentosCreateOrConnectWithoutTbMovitensInput
    upsert?: tbMovimentosUpsertWithoutTbMovitensInput
    connect?: tbMovimentosWhereUniqueInput
    update?: XOR<XOR<tbMovimentosUpdateToOneWithWhereWithoutTbMovitensInput, tbMovimentosUpdateWithoutTbMovitensInput>, tbMovimentosUncheckedUpdateWithoutTbMovitensInput>
  }

  export type tbProdutosUpdateOneRequiredWithoutTbMovitensNestedInput = {
    create?: XOR<tbProdutosCreateWithoutTbMovitensInput, tbProdutosUncheckedCreateWithoutTbMovitensInput>
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbMovitensInput
    upsert?: tbProdutosUpsertWithoutTbMovitensInput
    connect?: tbProdutosWhereUniqueInput
    update?: XOR<XOR<tbProdutosUpdateToOneWithWhereWithoutTbMovitensInput, tbProdutosUpdateWithoutTbMovitensInput>, tbProdutosUncheckedUpdateWithoutTbMovitensInput>
  }

  export type tbNfitensUpdateManyWithoutTbMovitensNestedInput = {
    create?: XOR<tbNfitensCreateWithoutTbMovitensInput, tbNfitensUncheckedCreateWithoutTbMovitensInput> | tbNfitensCreateWithoutTbMovitensInput[] | tbNfitensUncheckedCreateWithoutTbMovitensInput[]
    connectOrCreate?: tbNfitensCreateOrConnectWithoutTbMovitensInput | tbNfitensCreateOrConnectWithoutTbMovitensInput[]
    upsert?: tbNfitensUpsertWithWhereUniqueWithoutTbMovitensInput | tbNfitensUpsertWithWhereUniqueWithoutTbMovitensInput[]
    createMany?: tbNfitensCreateManyTbMovitensInputEnvelope
    set?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    disconnect?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    delete?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    connect?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    update?: tbNfitensUpdateWithWhereUniqueWithoutTbMovitensInput | tbNfitensUpdateWithWhereUniqueWithoutTbMovitensInput[]
    updateMany?: tbNfitensUpdateManyWithWhereWithoutTbMovitensInput | tbNfitensUpdateManyWithWhereWithoutTbMovitensInput[]
    deleteMany?: tbNfitensScalarWhereInput | tbNfitensScalarWhereInput[]
  }

  export type tbNfitensUncheckedUpdateManyWithoutTbMovitensNestedInput = {
    create?: XOR<tbNfitensCreateWithoutTbMovitensInput, tbNfitensUncheckedCreateWithoutTbMovitensInput> | tbNfitensCreateWithoutTbMovitensInput[] | tbNfitensUncheckedCreateWithoutTbMovitensInput[]
    connectOrCreate?: tbNfitensCreateOrConnectWithoutTbMovitensInput | tbNfitensCreateOrConnectWithoutTbMovitensInput[]
    upsert?: tbNfitensUpsertWithWhereUniqueWithoutTbMovitensInput | tbNfitensUpsertWithWhereUniqueWithoutTbMovitensInput[]
    createMany?: tbNfitensCreateManyTbMovitensInputEnvelope
    set?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    disconnect?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    delete?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    connect?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    update?: tbNfitensUpdateWithWhereUniqueWithoutTbMovitensInput | tbNfitensUpdateWithWhereUniqueWithoutTbMovitensInput[]
    updateMany?: tbNfitensUpdateManyWithWhereWithoutTbMovitensInput | tbNfitensUpdateManyWithWhereWithoutTbMovitensInput[]
    deleteMany?: tbNfitensScalarWhereInput | tbNfitensScalarWhereInput[]
  }

  export type tbMovimentosCreateNestedOneWithoutTbNfInput = {
    create?: XOR<tbMovimentosCreateWithoutTbNfInput, tbMovimentosUncheckedCreateWithoutTbNfInput>
    connectOrCreate?: tbMovimentosCreateOrConnectWithoutTbNfInput
    connect?: tbMovimentosWhereUniqueInput
  }

  export type tbFornecedoresCreateNestedOneWithoutTbNfInput = {
    create?: XOR<tbFornecedoresCreateWithoutTbNfInput, tbFornecedoresUncheckedCreateWithoutTbNfInput>
    connectOrCreate?: tbFornecedoresCreateOrConnectWithoutTbNfInput
    connect?: tbFornecedoresWhereUniqueInput
  }

  export type tbUsuariosCreateNestedOneWithoutTbNfInput = {
    create?: XOR<tbUsuariosCreateWithoutTbNfInput, tbUsuariosUncheckedCreateWithoutTbNfInput>
    connectOrCreate?: tbUsuariosCreateOrConnectWithoutTbNfInput
    connect?: tbUsuariosWhereUniqueInput
  }

  export type tbNfitensCreateNestedManyWithoutTbNfInput = {
    create?: XOR<tbNfitensCreateWithoutTbNfInput, tbNfitensUncheckedCreateWithoutTbNfInput> | tbNfitensCreateWithoutTbNfInput[] | tbNfitensUncheckedCreateWithoutTbNfInput[]
    connectOrCreate?: tbNfitensCreateOrConnectWithoutTbNfInput | tbNfitensCreateOrConnectWithoutTbNfInput[]
    createMany?: tbNfitensCreateManyTbNfInputEnvelope
    connect?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
  }

  export type tbNfitensUncheckedCreateNestedManyWithoutTbNfInput = {
    create?: XOR<tbNfitensCreateWithoutTbNfInput, tbNfitensUncheckedCreateWithoutTbNfInput> | tbNfitensCreateWithoutTbNfInput[] | tbNfitensUncheckedCreateWithoutTbNfInput[]
    connectOrCreate?: tbNfitensCreateOrConnectWithoutTbNfInput | tbNfitensCreateOrConnectWithoutTbNfInput[]
    createMany?: tbNfitensCreateManyTbNfInputEnvelope
    connect?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
  }

  export type tbMovimentosUpdateOneWithoutTbNfNestedInput = {
    create?: XOR<tbMovimentosCreateWithoutTbNfInput, tbMovimentosUncheckedCreateWithoutTbNfInput>
    connectOrCreate?: tbMovimentosCreateOrConnectWithoutTbNfInput
    upsert?: tbMovimentosUpsertWithoutTbNfInput
    disconnect?: tbMovimentosWhereInput | boolean
    delete?: tbMovimentosWhereInput | boolean
    connect?: tbMovimentosWhereUniqueInput
    update?: XOR<XOR<tbMovimentosUpdateToOneWithWhereWithoutTbNfInput, tbMovimentosUpdateWithoutTbNfInput>, tbMovimentosUncheckedUpdateWithoutTbNfInput>
  }

  export type tbFornecedoresUpdateOneWithoutTbNfNestedInput = {
    create?: XOR<tbFornecedoresCreateWithoutTbNfInput, tbFornecedoresUncheckedCreateWithoutTbNfInput>
    connectOrCreate?: tbFornecedoresCreateOrConnectWithoutTbNfInput
    upsert?: tbFornecedoresUpsertWithoutTbNfInput
    disconnect?: tbFornecedoresWhereInput | boolean
    delete?: tbFornecedoresWhereInput | boolean
    connect?: tbFornecedoresWhereUniqueInput
    update?: XOR<XOR<tbFornecedoresUpdateToOneWithWhereWithoutTbNfInput, tbFornecedoresUpdateWithoutTbNfInput>, tbFornecedoresUncheckedUpdateWithoutTbNfInput>
  }

  export type tbUsuariosUpdateOneWithoutTbNfNestedInput = {
    create?: XOR<tbUsuariosCreateWithoutTbNfInput, tbUsuariosUncheckedCreateWithoutTbNfInput>
    connectOrCreate?: tbUsuariosCreateOrConnectWithoutTbNfInput
    upsert?: tbUsuariosUpsertWithoutTbNfInput
    disconnect?: tbUsuariosWhereInput | boolean
    delete?: tbUsuariosWhereInput | boolean
    connect?: tbUsuariosWhereUniqueInput
    update?: XOR<XOR<tbUsuariosUpdateToOneWithWhereWithoutTbNfInput, tbUsuariosUpdateWithoutTbNfInput>, tbUsuariosUncheckedUpdateWithoutTbNfInput>
  }

  export type tbNfitensUpdateManyWithoutTbNfNestedInput = {
    create?: XOR<tbNfitensCreateWithoutTbNfInput, tbNfitensUncheckedCreateWithoutTbNfInput> | tbNfitensCreateWithoutTbNfInput[] | tbNfitensUncheckedCreateWithoutTbNfInput[]
    connectOrCreate?: tbNfitensCreateOrConnectWithoutTbNfInput | tbNfitensCreateOrConnectWithoutTbNfInput[]
    upsert?: tbNfitensUpsertWithWhereUniqueWithoutTbNfInput | tbNfitensUpsertWithWhereUniqueWithoutTbNfInput[]
    createMany?: tbNfitensCreateManyTbNfInputEnvelope
    set?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    disconnect?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    delete?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    connect?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    update?: tbNfitensUpdateWithWhereUniqueWithoutTbNfInput | tbNfitensUpdateWithWhereUniqueWithoutTbNfInput[]
    updateMany?: tbNfitensUpdateManyWithWhereWithoutTbNfInput | tbNfitensUpdateManyWithWhereWithoutTbNfInput[]
    deleteMany?: tbNfitensScalarWhereInput | tbNfitensScalarWhereInput[]
  }

  export type tbNfitensUncheckedUpdateManyWithoutTbNfNestedInput = {
    create?: XOR<tbNfitensCreateWithoutTbNfInput, tbNfitensUncheckedCreateWithoutTbNfInput> | tbNfitensCreateWithoutTbNfInput[] | tbNfitensUncheckedCreateWithoutTbNfInput[]
    connectOrCreate?: tbNfitensCreateOrConnectWithoutTbNfInput | tbNfitensCreateOrConnectWithoutTbNfInput[]
    upsert?: tbNfitensUpsertWithWhereUniqueWithoutTbNfInput | tbNfitensUpsertWithWhereUniqueWithoutTbNfInput[]
    createMany?: tbNfitensCreateManyTbNfInputEnvelope
    set?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    disconnect?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    delete?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    connect?: tbNfitensWhereUniqueInput | tbNfitensWhereUniqueInput[]
    update?: tbNfitensUpdateWithWhereUniqueWithoutTbNfInput | tbNfitensUpdateWithWhereUniqueWithoutTbNfInput[]
    updateMany?: tbNfitensUpdateManyWithWhereWithoutTbNfInput | tbNfitensUpdateManyWithWhereWithoutTbNfInput[]
    deleteMany?: tbNfitensScalarWhereInput | tbNfitensScalarWhereInput[]
  }

  export type tbMovitensCreateNestedOneWithoutTbNfitensInput = {
    create?: XOR<tbMovitensCreateWithoutTbNfitensInput, tbMovitensUncheckedCreateWithoutTbNfitensInput>
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbNfitensInput
    connect?: tbMovitensWhereUniqueInput
  }

  export type tbNfCreateNestedOneWithoutTbNfitensInput = {
    create?: XOR<tbNfCreateWithoutTbNfitensInput, tbNfUncheckedCreateWithoutTbNfitensInput>
    connectOrCreate?: tbNfCreateOrConnectWithoutTbNfitensInput
    connect?: tbNfWhereUniqueInput
  }

  export type tbMovitensUpdateOneWithoutTbNfitensNestedInput = {
    create?: XOR<tbMovitensCreateWithoutTbNfitensInput, tbMovitensUncheckedCreateWithoutTbNfitensInput>
    connectOrCreate?: tbMovitensCreateOrConnectWithoutTbNfitensInput
    upsert?: tbMovitensUpsertWithoutTbNfitensInput
    disconnect?: tbMovitensWhereInput | boolean
    delete?: tbMovitensWhereInput | boolean
    connect?: tbMovitensWhereUniqueInput
    update?: XOR<XOR<tbMovitensUpdateToOneWithWhereWithoutTbNfitensInput, tbMovitensUpdateWithoutTbNfitensInput>, tbMovitensUncheckedUpdateWithoutTbNfitensInput>
  }

  export type tbNfUpdateOneRequiredWithoutTbNfitensNestedInput = {
    create?: XOR<tbNfCreateWithoutTbNfitensInput, tbNfUncheckedCreateWithoutTbNfitensInput>
    connectOrCreate?: tbNfCreateOrConnectWithoutTbNfitensInput
    upsert?: tbNfUpsertWithoutTbNfitensInput
    connect?: tbNfWhereUniqueInput
    update?: XOR<XOR<tbNfUpdateToOneWithWhereWithoutTbNfitensInput, tbNfUpdateWithoutTbNfitensInput>, tbNfUncheckedUpdateWithoutTbNfitensInput>
  }

  export type tbProdutosCreateNestedOneWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput = {
    create?: XOR<tbProdutosCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdutosUncheckedCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput>
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput
    connect?: tbProdutosWhereUniqueInput
  }

  export type tbProdutosCreateNestedOneWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    create?: XOR<tbProdutosCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdutosUncheckedCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput>
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput
    connect?: tbProdutosWhereUniqueInput
  }

  export type tbProdutosUpdateOneRequiredWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosNestedInput = {
    create?: XOR<tbProdutosCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdutosUncheckedCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput>
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput
    upsert?: tbProdutosUpsertWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput
    connect?: tbProdutosWhereUniqueInput
    update?: XOR<XOR<tbProdutosUpdateToOneWithWhereWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdutosUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput>, tbProdutosUncheckedUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput>
  }

  export type tbProdutosUpdateOneRequiredWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosNestedInput = {
    create?: XOR<tbProdutosCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdutosUncheckedCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput>
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput
    upsert?: tbProdutosUpsertWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput
    connect?: tbProdutosWhereUniqueInput
    update?: XOR<XOR<tbProdutosUpdateToOneWithWhereWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdutosUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput>, tbProdutosUncheckedUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput>
  }

  export type tbProdutosCreateNestedManyWithoutTbTiposProdutosInput = {
    create?: XOR<tbProdutosCreateWithoutTbTiposProdutosInput, tbProdutosUncheckedCreateWithoutTbTiposProdutosInput> | tbProdutosCreateWithoutTbTiposProdutosInput[] | tbProdutosUncheckedCreateWithoutTbTiposProdutosInput[]
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbTiposProdutosInput | tbProdutosCreateOrConnectWithoutTbTiposProdutosInput[]
    createMany?: tbProdutosCreateManyTbTiposProdutosInputEnvelope
    connect?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
  }

  export type tbProdutosUncheckedCreateNestedManyWithoutTbTiposProdutosInput = {
    create?: XOR<tbProdutosCreateWithoutTbTiposProdutosInput, tbProdutosUncheckedCreateWithoutTbTiposProdutosInput> | tbProdutosCreateWithoutTbTiposProdutosInput[] | tbProdutosUncheckedCreateWithoutTbTiposProdutosInput[]
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbTiposProdutosInput | tbProdutosCreateOrConnectWithoutTbTiposProdutosInput[]
    createMany?: tbProdutosCreateManyTbTiposProdutosInputEnvelope
    connect?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
  }

  export type tbProdutosUpdateManyWithoutTbTiposProdutosNestedInput = {
    create?: XOR<tbProdutosCreateWithoutTbTiposProdutosInput, tbProdutosUncheckedCreateWithoutTbTiposProdutosInput> | tbProdutosCreateWithoutTbTiposProdutosInput[] | tbProdutosUncheckedCreateWithoutTbTiposProdutosInput[]
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbTiposProdutosInput | tbProdutosCreateOrConnectWithoutTbTiposProdutosInput[]
    upsert?: tbProdutosUpsertWithWhereUniqueWithoutTbTiposProdutosInput | tbProdutosUpsertWithWhereUniqueWithoutTbTiposProdutosInput[]
    createMany?: tbProdutosCreateManyTbTiposProdutosInputEnvelope
    set?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    disconnect?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    delete?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    connect?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    update?: tbProdutosUpdateWithWhereUniqueWithoutTbTiposProdutosInput | tbProdutosUpdateWithWhereUniqueWithoutTbTiposProdutosInput[]
    updateMany?: tbProdutosUpdateManyWithWhereWithoutTbTiposProdutosInput | tbProdutosUpdateManyWithWhereWithoutTbTiposProdutosInput[]
    deleteMany?: tbProdutosScalarWhereInput | tbProdutosScalarWhereInput[]
  }

  export type tbProdutosUncheckedUpdateManyWithoutTbTiposProdutosNestedInput = {
    create?: XOR<tbProdutosCreateWithoutTbTiposProdutosInput, tbProdutosUncheckedCreateWithoutTbTiposProdutosInput> | tbProdutosCreateWithoutTbTiposProdutosInput[] | tbProdutosUncheckedCreateWithoutTbTiposProdutosInput[]
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbTiposProdutosInput | tbProdutosCreateOrConnectWithoutTbTiposProdutosInput[]
    upsert?: tbProdutosUpsertWithWhereUniqueWithoutTbTiposProdutosInput | tbProdutosUpsertWithWhereUniqueWithoutTbTiposProdutosInput[]
    createMany?: tbProdutosCreateManyTbTiposProdutosInputEnvelope
    set?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    disconnect?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    delete?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    connect?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    update?: tbProdutosUpdateWithWhereUniqueWithoutTbTiposProdutosInput | tbProdutosUpdateWithWhereUniqueWithoutTbTiposProdutosInput[]
    updateMany?: tbProdutosUpdateManyWithWhereWithoutTbTiposProdutosInput | tbProdutosUpdateManyWithWhereWithoutTbTiposProdutosInput[]
    deleteMany?: tbProdutosScalarWhereInput | tbProdutosScalarWhereInput[]
  }

  export type tbProdutosCreateNestedManyWithoutTbUnidadeMedidaInput = {
    create?: XOR<tbProdutosCreateWithoutTbUnidadeMedidaInput, tbProdutosUncheckedCreateWithoutTbUnidadeMedidaInput> | tbProdutosCreateWithoutTbUnidadeMedidaInput[] | tbProdutosUncheckedCreateWithoutTbUnidadeMedidaInput[]
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbUnidadeMedidaInput | tbProdutosCreateOrConnectWithoutTbUnidadeMedidaInput[]
    createMany?: tbProdutosCreateManyTbUnidadeMedidaInputEnvelope
    connect?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
  }

  export type tbProdutosUncheckedCreateNestedManyWithoutTbUnidadeMedidaInput = {
    create?: XOR<tbProdutosCreateWithoutTbUnidadeMedidaInput, tbProdutosUncheckedCreateWithoutTbUnidadeMedidaInput> | tbProdutosCreateWithoutTbUnidadeMedidaInput[] | tbProdutosUncheckedCreateWithoutTbUnidadeMedidaInput[]
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbUnidadeMedidaInput | tbProdutosCreateOrConnectWithoutTbUnidadeMedidaInput[]
    createMany?: tbProdutosCreateManyTbUnidadeMedidaInputEnvelope
    connect?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
  }

  export type tbProdutosUpdateManyWithoutTbUnidadeMedidaNestedInput = {
    create?: XOR<tbProdutosCreateWithoutTbUnidadeMedidaInput, tbProdutosUncheckedCreateWithoutTbUnidadeMedidaInput> | tbProdutosCreateWithoutTbUnidadeMedidaInput[] | tbProdutosUncheckedCreateWithoutTbUnidadeMedidaInput[]
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbUnidadeMedidaInput | tbProdutosCreateOrConnectWithoutTbUnidadeMedidaInput[]
    upsert?: tbProdutosUpsertWithWhereUniqueWithoutTbUnidadeMedidaInput | tbProdutosUpsertWithWhereUniqueWithoutTbUnidadeMedidaInput[]
    createMany?: tbProdutosCreateManyTbUnidadeMedidaInputEnvelope
    set?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    disconnect?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    delete?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    connect?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    update?: tbProdutosUpdateWithWhereUniqueWithoutTbUnidadeMedidaInput | tbProdutosUpdateWithWhereUniqueWithoutTbUnidadeMedidaInput[]
    updateMany?: tbProdutosUpdateManyWithWhereWithoutTbUnidadeMedidaInput | tbProdutosUpdateManyWithWhereWithoutTbUnidadeMedidaInput[]
    deleteMany?: tbProdutosScalarWhereInput | tbProdutosScalarWhereInput[]
  }

  export type tbProdutosUncheckedUpdateManyWithoutTbUnidadeMedidaNestedInput = {
    create?: XOR<tbProdutosCreateWithoutTbUnidadeMedidaInput, tbProdutosUncheckedCreateWithoutTbUnidadeMedidaInput> | tbProdutosCreateWithoutTbUnidadeMedidaInput[] | tbProdutosUncheckedCreateWithoutTbUnidadeMedidaInput[]
    connectOrCreate?: tbProdutosCreateOrConnectWithoutTbUnidadeMedidaInput | tbProdutosCreateOrConnectWithoutTbUnidadeMedidaInput[]
    upsert?: tbProdutosUpsertWithWhereUniqueWithoutTbUnidadeMedidaInput | tbProdutosUpsertWithWhereUniqueWithoutTbUnidadeMedidaInput[]
    createMany?: tbProdutosCreateManyTbUnidadeMedidaInputEnvelope
    set?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    disconnect?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    delete?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    connect?: tbProdutosWhereUniqueInput | tbProdutosWhereUniqueInput[]
    update?: tbProdutosUpdateWithWhereUniqueWithoutTbUnidadeMedidaInput | tbProdutosUpdateWithWhereUniqueWithoutTbUnidadeMedidaInput[]
    updateMany?: tbProdutosUpdateManyWithWhereWithoutTbUnidadeMedidaInput | tbProdutosUpdateManyWithWhereWithoutTbUnidadeMedidaInput[]
    deleteMany?: tbProdutosScalarWhereInput | tbProdutosScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type tbMovimentosCreateWithoutTbFornecedoresInput = {
    tipmov?: string | null
    dtinc?: Date | string | null
    tbUsuarios?: tbUsuariosCreateNestedOneWithoutTbMovimentosInput
    tbMovitens?: tbMovitensCreateNestedManyWithoutTbMovimentosInput
    tbNf?: tbNfCreateNestedOneWithoutTbMovimentosInput
  }

  export type tbMovimentosUncheckedCreateWithoutTbFornecedoresInput = {
    idmovimento?: number
    tipmov?: string | null
    idusuario_alteracao?: number | null
    dtinc?: Date | string | null
    tbMovitens?: tbMovitensUncheckedCreateNestedManyWithoutTbMovimentosInput
    tbNf?: tbNfUncheckedCreateNestedOneWithoutTbMovimentosInput
  }

  export type tbMovimentosCreateOrConnectWithoutTbFornecedoresInput = {
    where: tbMovimentosWhereUniqueInput
    create: XOR<tbMovimentosCreateWithoutTbFornecedoresInput, tbMovimentosUncheckedCreateWithoutTbFornecedoresInput>
  }

  export type tbMovimentosCreateManyTbFornecedoresInputEnvelope = {
    data: tbMovimentosCreateManyTbFornecedoresInput | tbMovimentosCreateManyTbFornecedoresInput[]
    skipDuplicates?: boolean
  }

  export type tbNfCreateWithoutTbFornecedoresInput = {
    numnf?: number | null
    serienf?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    tbMovimentos?: tbMovimentosCreateNestedOneWithoutTbNfInput
    tbUsuarios?: tbUsuariosCreateNestedOneWithoutTbNfInput
    tbNfitens?: tbNfitensCreateNestedManyWithoutTbNfInput
  }

  export type tbNfUncheckedCreateWithoutTbFornecedoresInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idusuario_inclusao?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedCreateNestedManyWithoutTbNfInput
  }

  export type tbNfCreateOrConnectWithoutTbFornecedoresInput = {
    where: tbNfWhereUniqueInput
    create: XOR<tbNfCreateWithoutTbFornecedoresInput, tbNfUncheckedCreateWithoutTbFornecedoresInput>
  }

  export type tbNfCreateManyTbFornecedoresInputEnvelope = {
    data: tbNfCreateManyTbFornecedoresInput | tbNfCreateManyTbFornecedoresInput[]
    skipDuplicates?: boolean
  }

  export type tbMovimentosUpsertWithWhereUniqueWithoutTbFornecedoresInput = {
    where: tbMovimentosWhereUniqueInput
    update: XOR<tbMovimentosUpdateWithoutTbFornecedoresInput, tbMovimentosUncheckedUpdateWithoutTbFornecedoresInput>
    create: XOR<tbMovimentosCreateWithoutTbFornecedoresInput, tbMovimentosUncheckedCreateWithoutTbFornecedoresInput>
  }

  export type tbMovimentosUpdateWithWhereUniqueWithoutTbFornecedoresInput = {
    where: tbMovimentosWhereUniqueInput
    data: XOR<tbMovimentosUpdateWithoutTbFornecedoresInput, tbMovimentosUncheckedUpdateWithoutTbFornecedoresInput>
  }

  export type tbMovimentosUpdateManyWithWhereWithoutTbFornecedoresInput = {
    where: tbMovimentosScalarWhereInput
    data: XOR<tbMovimentosUpdateManyMutationInput, tbMovimentosUncheckedUpdateManyWithoutTbFornecedoresInput>
  }

  export type tbMovimentosScalarWhereInput = {
    AND?: tbMovimentosScalarWhereInput | tbMovimentosScalarWhereInput[]
    OR?: tbMovimentosScalarWhereInput[]
    NOT?: tbMovimentosScalarWhereInput | tbMovimentosScalarWhereInput[]
    idmovimento?: IntFilter<"tbMovimentos"> | number
    tipmov?: StringNullableFilter<"tbMovimentos"> | string | null
    idfor?: IntNullableFilter<"tbMovimentos"> | number | null
    idusuario_alteracao?: IntNullableFilter<"tbMovimentos"> | number | null
    dtinc?: DateTimeNullableFilter<"tbMovimentos"> | Date | string | null
  }

  export type tbNfUpsertWithWhereUniqueWithoutTbFornecedoresInput = {
    where: tbNfWhereUniqueInput
    update: XOR<tbNfUpdateWithoutTbFornecedoresInput, tbNfUncheckedUpdateWithoutTbFornecedoresInput>
    create: XOR<tbNfCreateWithoutTbFornecedoresInput, tbNfUncheckedCreateWithoutTbFornecedoresInput>
  }

  export type tbNfUpdateWithWhereUniqueWithoutTbFornecedoresInput = {
    where: tbNfWhereUniqueInput
    data: XOR<tbNfUpdateWithoutTbFornecedoresInput, tbNfUncheckedUpdateWithoutTbFornecedoresInput>
  }

  export type tbNfUpdateManyWithWhereWithoutTbFornecedoresInput = {
    where: tbNfScalarWhereInput
    data: XOR<tbNfUpdateManyMutationInput, tbNfUncheckedUpdateManyWithoutTbFornecedoresInput>
  }

  export type tbNfScalarWhereInput = {
    AND?: tbNfScalarWhereInput | tbNfScalarWhereInput[]
    OR?: tbNfScalarWhereInput[]
    NOT?: tbNfScalarWhereInput | tbNfScalarWhereInput[]
    idnf?: IntFilter<"tbNf"> | number
    numnf?: IntNullableFilter<"tbNf"> | number | null
    idmovimento?: IntNullableFilter<"tbNf"> | number | null
    serienf?: IntNullableFilter<"tbNf"> | number | null
    idfor?: IntNullableFilter<"tbNf"> | number | null
    idusuario_inclusao?: IntNullableFilter<"tbNf"> | number | null
    dtemissao?: DateTimeNullableFilter<"tbNf"> | Date | string | null
    vlrtotal?: DecimalNullableFilter<"tbNf"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbEstoqueCreateWithoutTbProdutosInput = {
    idestoque?: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
    tbLocais?: tbLocaisCreateNestedOneWithoutTbEstoqueInput
  }

  export type tbEstoqueUncheckedCreateWithoutTbProdutosInput = {
    idestoque?: number
    idlocal?: number | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
  }

  export type tbEstoqueCreateOrConnectWithoutTbProdutosInput = {
    where: tbEstoqueWhereUniqueInput
    create: XOR<tbEstoqueCreateWithoutTbProdutosInput, tbEstoqueUncheckedCreateWithoutTbProdutosInput>
  }

  export type tbEstoqueCreateManyTbProdutosInputEnvelope = {
    data: tbEstoqueCreateManyTbProdutosInput | tbEstoqueCreateManyTbProdutosInput[]
    skipDuplicates?: boolean
  }

  export type tbMovitensCreateWithoutTbProdutosInput = {
    seqitem?: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbLocais?: tbLocaisCreateNestedOneWithoutTbMovitensInput
    tbMovimentos: tbMovimentosCreateNestedOneWithoutTbMovitensInput
    tbNfitens?: tbNfitensCreateNestedManyWithoutTbMovitensInput
  }

  export type tbMovitensUncheckedCreateWithoutTbProdutosInput = {
    idmovimento: number
    seqitem?: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedCreateNestedManyWithoutTbMovitensInput
  }

  export type tbMovitensCreateOrConnectWithoutTbProdutosInput = {
    where: tbMovitensWhereUniqueInput
    create: XOR<tbMovitensCreateWithoutTbProdutosInput, tbMovitensUncheckedCreateWithoutTbProdutosInput>
  }

  export type tbMovitensCreateManyTbProdutosInputEnvelope = {
    data: tbMovitensCreateManyTbProdutosInput | tbMovitensCreateManyTbProdutosInput[]
    skipDuplicates?: boolean
  }

  export type tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput = {
    idcomp?: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbProdutos_tbProdcomposicao_idprodutocompTotbProdutos: tbProdutosCreateNestedOneWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput
  }

  export type tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput = {
    idcomp?: number
    idprodutocomp: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput = {
    where: tbProdcomposicaoWhereUniqueInput
    create: XOR<tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput>
  }

  export type tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInputEnvelope = {
    data: tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput | tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput[]
    skipDuplicates?: boolean
  }

  export type tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    idcomp?: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbProdutos_tbProdcomposicao_idprodutoTotbProdutos: tbProdutosCreateNestedOneWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput
  }

  export type tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    idcomp?: number
    idproduto: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoCreateOrConnectWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    where: tbProdcomposicaoWhereUniqueInput
    create: XOR<tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput>
  }

  export type tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInputEnvelope = {
    data: tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput | tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput[]
    skipDuplicates?: boolean
  }

  export type tbTiposprodutosCreateWithoutTbProdutosInput = {
    nometipprod?: string | null
  }

  export type tbTiposprodutosUncheckedCreateWithoutTbProdutosInput = {
    idtipprod?: number
    nometipprod?: string | null
  }

  export type tbTiposprodutosCreateOrConnectWithoutTbProdutosInput = {
    where: tbTiposprodutosWhereUniqueInput
    create: XOR<tbTiposprodutosCreateWithoutTbProdutosInput, tbTiposprodutosUncheckedCreateWithoutTbProdutosInput>
  }

  export type tbUnidademedidaCreateWithoutTbProdutosInput = {
    siglaun?: string | null
    nomeunidade?: string | null
  }

  export type tbUnidademedidaUncheckedCreateWithoutTbProdutosInput = {
    idunidade?: number
    siglaun?: string | null
    nomeunidade?: string | null
  }

  export type tbUnidademedidaCreateOrConnectWithoutTbProdutosInput = {
    where: tbUnidademedidaWhereUniqueInput
    create: XOR<tbUnidademedidaCreateWithoutTbProdutosInput, tbUnidademedidaUncheckedCreateWithoutTbProdutosInput>
  }

  export type tbEstoqueUpsertWithWhereUniqueWithoutTbProdutosInput = {
    where: tbEstoqueWhereUniqueInput
    update: XOR<tbEstoqueUpdateWithoutTbProdutosInput, tbEstoqueUncheckedUpdateWithoutTbProdutosInput>
    create: XOR<tbEstoqueCreateWithoutTbProdutosInput, tbEstoqueUncheckedCreateWithoutTbProdutosInput>
  }

  export type tbEstoqueUpdateWithWhereUniqueWithoutTbProdutosInput = {
    where: tbEstoqueWhereUniqueInput
    data: XOR<tbEstoqueUpdateWithoutTbProdutosInput, tbEstoqueUncheckedUpdateWithoutTbProdutosInput>
  }

  export type tbEstoqueUpdateManyWithWhereWithoutTbProdutosInput = {
    where: tbEstoqueScalarWhereInput
    data: XOR<tbEstoqueUpdateManyMutationInput, tbEstoqueUncheckedUpdateManyWithoutTbProdutosInput>
  }

  export type tbEstoqueScalarWhereInput = {
    AND?: tbEstoqueScalarWhereInput | tbEstoqueScalarWhereInput[]
    OR?: tbEstoqueScalarWhereInput[]
    NOT?: tbEstoqueScalarWhereInput | tbEstoqueScalarWhereInput[]
    idestoque?: IntFilter<"tbEstoque"> | number
    idproduto?: IntFilter<"tbEstoque"> | number
    idlocal?: IntNullableFilter<"tbEstoque"> | number | null
    quantidade?: DecimalNullableFilter<"tbEstoque"> | Decimal | DecimalJsLike | number | string | null
    dtinc?: DateTimeNullableFilter<"tbEstoque"> | Date | string | null
  }

  export type tbMovitensUpsertWithWhereUniqueWithoutTbProdutosInput = {
    where: tbMovitensWhereUniqueInput
    update: XOR<tbMovitensUpdateWithoutTbProdutosInput, tbMovitensUncheckedUpdateWithoutTbProdutosInput>
    create: XOR<tbMovitensCreateWithoutTbProdutosInput, tbMovitensUncheckedCreateWithoutTbProdutosInput>
  }

  export type tbMovitensUpdateWithWhereUniqueWithoutTbProdutosInput = {
    where: tbMovitensWhereUniqueInput
    data: XOR<tbMovitensUpdateWithoutTbProdutosInput, tbMovitensUncheckedUpdateWithoutTbProdutosInput>
  }

  export type tbMovitensUpdateManyWithWhereWithoutTbProdutosInput = {
    where: tbMovitensScalarWhereInput
    data: XOR<tbMovitensUpdateManyMutationInput, tbMovitensUncheckedUpdateManyWithoutTbProdutosInput>
  }

  export type tbMovitensScalarWhereInput = {
    AND?: tbMovitensScalarWhereInput | tbMovitensScalarWhereInput[]
    OR?: tbMovitensScalarWhereInput[]
    NOT?: tbMovitensScalarWhereInput | tbMovitensScalarWhereInput[]
    idmovimento?: IntFilter<"tbMovitens"> | number
    seqitem?: IntFilter<"tbMovitens"> | number
    idproduto?: IntFilter<"tbMovitens"> | number
    idlocal?: IntNullableFilter<"tbMovitens"> | number | null
    dtinc?: DateTimeNullableFilter<"tbMovitens"> | Date | string | null
    quantidade?: DecimalNullableFilter<"tbMovitens"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoUpsertWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput = {
    where: tbProdcomposicaoWhereUniqueInput
    update: XOR<tbProdcomposicaoUpdateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdcomposicaoUncheckedUpdateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput>
    create: XOR<tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput>
  }

  export type tbProdcomposicaoUpdateWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput = {
    where: tbProdcomposicaoWhereUniqueInput
    data: XOR<tbProdcomposicaoUpdateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdcomposicaoUncheckedUpdateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput>
  }

  export type tbProdcomposicaoUpdateManyWithWhereWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput = {
    where: tbProdcomposicaoScalarWhereInput
    data: XOR<tbProdcomposicaoUpdateManyMutationInput, tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput>
  }

  export type tbProdcomposicaoScalarWhereInput = {
    AND?: tbProdcomposicaoScalarWhereInput | tbProdcomposicaoScalarWhereInput[]
    OR?: tbProdcomposicaoScalarWhereInput[]
    NOT?: tbProdcomposicaoScalarWhereInput | tbProdcomposicaoScalarWhereInput[]
    idcomp?: IntFilter<"tbProdcomposicao"> | number
    idproduto?: IntFilter<"tbProdcomposicao"> | number
    idprodutocomp?: IntFilter<"tbProdcomposicao"> | number
    quantidade?: DecimalNullableFilter<"tbProdcomposicao"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoUpsertWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    where: tbProdcomposicaoWhereUniqueInput
    update: XOR<tbProdcomposicaoUpdateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdcomposicaoUncheckedUpdateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput>
    create: XOR<tbProdcomposicaoCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdcomposicaoUncheckedCreateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput>
  }

  export type tbProdcomposicaoUpdateWithWhereUniqueWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    where: tbProdcomposicaoWhereUniqueInput
    data: XOR<tbProdcomposicaoUpdateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdcomposicaoUncheckedUpdateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput>
  }

  export type tbProdcomposicaoUpdateManyWithWhereWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    where: tbProdcomposicaoScalarWhereInput
    data: XOR<tbProdcomposicaoUpdateManyMutationInput, tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput>
  }

  export type tbTiposprodutosUpsertWithoutTbProdutosInput = {
    update: XOR<tbTiposprodutosUpdateWithoutTbProdutosInput, tbTiposprodutosUncheckedUpdateWithoutTbProdutosInput>
    create: XOR<tbTiposprodutosCreateWithoutTbProdutosInput, tbTiposprodutosUncheckedCreateWithoutTbProdutosInput>
    where?: tbTiposprodutosWhereInput
  }

  export type tbTiposprodutosUpdateToOneWithWhereWithoutTbProdutosInput = {
    where?: tbTiposprodutosWhereInput
    data: XOR<tbTiposprodutosUpdateWithoutTbProdutosInput, tbTiposprodutosUncheckedUpdateWithoutTbProdutosInput>
  }

  export type tbTiposprodutosUpdateWithoutTbProdutosInput = {
    nometipprod?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbTiposprodutosUncheckedUpdateWithoutTbProdutosInput = {
    idtipprod?: IntFieldUpdateOperationsInput | number
    nometipprod?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbUnidademedidaUpsertWithoutTbProdutosInput = {
    update: XOR<tbUnidademedidaUpdateWithoutTbProdutosInput, tbUnidademedidaUncheckedUpdateWithoutTbProdutosInput>
    create: XOR<tbUnidademedidaCreateWithoutTbProdutosInput, tbUnidademedidaUncheckedCreateWithoutTbProdutosInput>
    where?: tbUnidademedidaWhereInput
  }

  export type tbUnidademedidaUpdateToOneWithWhereWithoutTbProdutosInput = {
    where?: tbUnidademedidaWhereInput
    data: XOR<tbUnidademedidaUpdateWithoutTbProdutosInput, tbUnidademedidaUncheckedUpdateWithoutTbProdutosInput>
  }

  export type tbUnidademedidaUpdateWithoutTbProdutosInput = {
    siglaun?: NullableStringFieldUpdateOperationsInput | string | null
    nomeunidade?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbUnidademedidaUncheckedUpdateWithoutTbProdutosInput = {
    idunidade?: IntFieldUpdateOperationsInput | number
    siglaun?: NullableStringFieldUpdateOperationsInput | string | null
    nomeunidade?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbLocaisCreateWithoutTbEstoqueInput = {
    nomelocal?: string | null
    tbMovitens?: tbMovitensCreateNestedManyWithoutTbLocaisInput
  }

  export type tbLocaisUncheckedCreateWithoutTbEstoqueInput = {
    idlocal?: number
    nomelocal?: string | null
    tbMovitens?: tbMovitensUncheckedCreateNestedManyWithoutTbLocaisInput
  }

  export type tbLocaisCreateOrConnectWithoutTbEstoqueInput = {
    where: tbLocaisWhereUniqueInput
    create: XOR<tbLocaisCreateWithoutTbEstoqueInput, tbLocaisUncheckedCreateWithoutTbEstoqueInput>
  }

  export type tbProdutosCreateWithoutTbEstoqueInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbMovitens?: tbMovitensCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput
    tbTiposProdutos?: tbTiposprodutosCreateNestedOneWithoutTbProdutosInput
    tbUnidadeMedida?: tbUnidademedidaCreateNestedOneWithoutTbProdutosInput
  }

  export type tbProdutosUncheckedCreateWithoutTbEstoqueInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    idunidade?: number | null
    quantminima?: number | null
    tbMovitens?: tbMovitensUncheckedCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput
  }

  export type tbProdutosCreateOrConnectWithoutTbEstoqueInput = {
    where: tbProdutosWhereUniqueInput
    create: XOR<tbProdutosCreateWithoutTbEstoqueInput, tbProdutosUncheckedCreateWithoutTbEstoqueInput>
  }

  export type tbLocaisUpsertWithoutTbEstoqueInput = {
    update: XOR<tbLocaisUpdateWithoutTbEstoqueInput, tbLocaisUncheckedUpdateWithoutTbEstoqueInput>
    create: XOR<tbLocaisCreateWithoutTbEstoqueInput, tbLocaisUncheckedCreateWithoutTbEstoqueInput>
    where?: tbLocaisWhereInput
  }

  export type tbLocaisUpdateToOneWithWhereWithoutTbEstoqueInput = {
    where?: tbLocaisWhereInput
    data: XOR<tbLocaisUpdateWithoutTbEstoqueInput, tbLocaisUncheckedUpdateWithoutTbEstoqueInput>
  }

  export type tbLocaisUpdateWithoutTbEstoqueInput = {
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
    tbMovitens?: tbMovitensUpdateManyWithoutTbLocaisNestedInput
  }

  export type tbLocaisUncheckedUpdateWithoutTbEstoqueInput = {
    idlocal?: IntFieldUpdateOperationsInput | number
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
    tbMovitens?: tbMovitensUncheckedUpdateManyWithoutTbLocaisNestedInput
  }

  export type tbProdutosUpsertWithoutTbEstoqueInput = {
    update: XOR<tbProdutosUpdateWithoutTbEstoqueInput, tbProdutosUncheckedUpdateWithoutTbEstoqueInput>
    create: XOR<tbProdutosCreateWithoutTbEstoqueInput, tbProdutosUncheckedCreateWithoutTbEstoqueInput>
    where?: tbProdutosWhereInput
  }

  export type tbProdutosUpdateToOneWithWhereWithoutTbEstoqueInput = {
    where?: tbProdutosWhereInput
    data: XOR<tbProdutosUpdateWithoutTbEstoqueInput, tbProdutosUncheckedUpdateWithoutTbEstoqueInput>
  }

  export type tbProdutosUpdateWithoutTbEstoqueInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbMovitens?: tbMovitensUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
    tbTiposProdutos?: tbTiposprodutosUpdateOneWithoutTbProdutosNestedInput
    tbUnidadeMedida?: tbUnidademedidaUpdateOneWithoutTbProdutosNestedInput
  }

  export type tbProdutosUncheckedUpdateWithoutTbEstoqueInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbMovitens?: tbMovitensUncheckedUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
  }

  export type tbEstoqueCreateWithoutTbLocaisInput = {
    idestoque?: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
    tbProdutos: tbProdutosCreateNestedOneWithoutTbEstoqueInput
  }

  export type tbEstoqueUncheckedCreateWithoutTbLocaisInput = {
    idestoque?: number
    idproduto: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
  }

  export type tbEstoqueCreateOrConnectWithoutTbLocaisInput = {
    where: tbEstoqueWhereUniqueInput
    create: XOR<tbEstoqueCreateWithoutTbLocaisInput, tbEstoqueUncheckedCreateWithoutTbLocaisInput>
  }

  export type tbEstoqueCreateManyTbLocaisInputEnvelope = {
    data: tbEstoqueCreateManyTbLocaisInput | tbEstoqueCreateManyTbLocaisInput[]
    skipDuplicates?: boolean
  }

  export type tbMovitensCreateWithoutTbLocaisInput = {
    seqitem?: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbMovimentos: tbMovimentosCreateNestedOneWithoutTbMovitensInput
    tbProdutos: tbProdutosCreateNestedOneWithoutTbMovitensInput
    tbNfitens?: tbNfitensCreateNestedManyWithoutTbMovitensInput
  }

  export type tbMovitensUncheckedCreateWithoutTbLocaisInput = {
    idmovimento: number
    seqitem?: number
    idproduto: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedCreateNestedManyWithoutTbMovitensInput
  }

  export type tbMovitensCreateOrConnectWithoutTbLocaisInput = {
    where: tbMovitensWhereUniqueInput
    create: XOR<tbMovitensCreateWithoutTbLocaisInput, tbMovitensUncheckedCreateWithoutTbLocaisInput>
  }

  export type tbMovitensCreateManyTbLocaisInputEnvelope = {
    data: tbMovitensCreateManyTbLocaisInput | tbMovitensCreateManyTbLocaisInput[]
    skipDuplicates?: boolean
  }

  export type tbEstoqueUpsertWithWhereUniqueWithoutTbLocaisInput = {
    where: tbEstoqueWhereUniqueInput
    update: XOR<tbEstoqueUpdateWithoutTbLocaisInput, tbEstoqueUncheckedUpdateWithoutTbLocaisInput>
    create: XOR<tbEstoqueCreateWithoutTbLocaisInput, tbEstoqueUncheckedCreateWithoutTbLocaisInput>
  }

  export type tbEstoqueUpdateWithWhereUniqueWithoutTbLocaisInput = {
    where: tbEstoqueWhereUniqueInput
    data: XOR<tbEstoqueUpdateWithoutTbLocaisInput, tbEstoqueUncheckedUpdateWithoutTbLocaisInput>
  }

  export type tbEstoqueUpdateManyWithWhereWithoutTbLocaisInput = {
    where: tbEstoqueScalarWhereInput
    data: XOR<tbEstoqueUpdateManyMutationInput, tbEstoqueUncheckedUpdateManyWithoutTbLocaisInput>
  }

  export type tbMovitensUpsertWithWhereUniqueWithoutTbLocaisInput = {
    where: tbMovitensWhereUniqueInput
    update: XOR<tbMovitensUpdateWithoutTbLocaisInput, tbMovitensUncheckedUpdateWithoutTbLocaisInput>
    create: XOR<tbMovitensCreateWithoutTbLocaisInput, tbMovitensUncheckedCreateWithoutTbLocaisInput>
  }

  export type tbMovitensUpdateWithWhereUniqueWithoutTbLocaisInput = {
    where: tbMovitensWhereUniqueInput
    data: XOR<tbMovitensUpdateWithoutTbLocaisInput, tbMovitensUncheckedUpdateWithoutTbLocaisInput>
  }

  export type tbMovitensUpdateManyWithWhereWithoutTbLocaisInput = {
    where: tbMovitensScalarWhereInput
    data: XOR<tbMovitensUpdateManyMutationInput, tbMovitensUncheckedUpdateManyWithoutTbLocaisInput>
  }

  export type tbFornecedoresCreateWithoutTbMovimentosInput = {
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
    tbNf?: tbNfCreateNestedManyWithoutTbFornecedoresInput
  }

  export type tbFornecedoresUncheckedCreateWithoutTbMovimentosInput = {
    idfor?: number
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
    tbNf?: tbNfUncheckedCreateNestedManyWithoutTbFornecedoresInput
  }

  export type tbFornecedoresCreateOrConnectWithoutTbMovimentosInput = {
    where: tbFornecedoresWhereUniqueInput
    create: XOR<tbFornecedoresCreateWithoutTbMovimentosInput, tbFornecedoresUncheckedCreateWithoutTbMovimentosInput>
  }

  export type tbUsuariosCreateWithoutTbMovimentosInput = {
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
    tbNf?: tbNfCreateNestedManyWithoutTbUsuariosInput
  }

  export type tbUsuariosUncheckedCreateWithoutTbMovimentosInput = {
    idusuario?: number
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
    tbNf?: tbNfUncheckedCreateNestedManyWithoutTbUsuariosInput
  }

  export type tbUsuariosCreateOrConnectWithoutTbMovimentosInput = {
    where: tbUsuariosWhereUniqueInput
    create: XOR<tbUsuariosCreateWithoutTbMovimentosInput, tbUsuariosUncheckedCreateWithoutTbMovimentosInput>
  }

  export type tbMovitensCreateWithoutTbMovimentosInput = {
    seqitem?: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbLocais?: tbLocaisCreateNestedOneWithoutTbMovitensInput
    tbProdutos: tbProdutosCreateNestedOneWithoutTbMovitensInput
    tbNfitens?: tbNfitensCreateNestedManyWithoutTbMovitensInput
  }

  export type tbMovitensUncheckedCreateWithoutTbMovimentosInput = {
    seqitem?: number
    idproduto: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedCreateNestedManyWithoutTbMovitensInput
  }

  export type tbMovitensCreateOrConnectWithoutTbMovimentosInput = {
    where: tbMovitensWhereUniqueInput
    create: XOR<tbMovitensCreateWithoutTbMovimentosInput, tbMovitensUncheckedCreateWithoutTbMovimentosInput>
  }

  export type tbMovitensCreateManyTbMovimentosInputEnvelope = {
    data: tbMovitensCreateManyTbMovimentosInput | tbMovitensCreateManyTbMovimentosInput[]
    skipDuplicates?: boolean
  }

  export type tbNfCreateWithoutTbMovimentosInput = {
    numnf?: number | null
    serienf?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    tbFornecedores?: tbFornecedoresCreateNestedOneWithoutTbNfInput
    tbUsuarios?: tbUsuariosCreateNestedOneWithoutTbNfInput
    tbNfitens?: tbNfitensCreateNestedManyWithoutTbNfInput
  }

  export type tbNfUncheckedCreateWithoutTbMovimentosInput = {
    idnf?: number
    numnf?: number | null
    serienf?: number | null
    idfor?: number | null
    idusuario_inclusao?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedCreateNestedManyWithoutTbNfInput
  }

  export type tbNfCreateOrConnectWithoutTbMovimentosInput = {
    where: tbNfWhereUniqueInput
    create: XOR<tbNfCreateWithoutTbMovimentosInput, tbNfUncheckedCreateWithoutTbMovimentosInput>
  }

  export type tbFornecedoresUpsertWithoutTbMovimentosInput = {
    update: XOR<tbFornecedoresUpdateWithoutTbMovimentosInput, tbFornecedoresUncheckedUpdateWithoutTbMovimentosInput>
    create: XOR<tbFornecedoresCreateWithoutTbMovimentosInput, tbFornecedoresUncheckedCreateWithoutTbMovimentosInput>
    where?: tbFornecedoresWhereInput
  }

  export type tbFornecedoresUpdateToOneWithWhereWithoutTbMovimentosInput = {
    where?: tbFornecedoresWhereInput
    data: XOR<tbFornecedoresUpdateWithoutTbMovimentosInput, tbFornecedoresUncheckedUpdateWithoutTbMovimentosInput>
  }

  export type tbFornecedoresUpdateWithoutTbMovimentosInput = {
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    tbNf?: tbNfUpdateManyWithoutTbFornecedoresNestedInput
  }

  export type tbFornecedoresUncheckedUpdateWithoutTbMovimentosInput = {
    idfor?: IntFieldUpdateOperationsInput | number
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    tbNf?: tbNfUncheckedUpdateManyWithoutTbFornecedoresNestedInput
  }

  export type tbUsuariosUpsertWithoutTbMovimentosInput = {
    update: XOR<tbUsuariosUpdateWithoutTbMovimentosInput, tbUsuariosUncheckedUpdateWithoutTbMovimentosInput>
    create: XOR<tbUsuariosCreateWithoutTbMovimentosInput, tbUsuariosUncheckedCreateWithoutTbMovimentosInput>
    where?: tbUsuariosWhereInput
  }

  export type tbUsuariosUpdateToOneWithWhereWithoutTbMovimentosInput = {
    where?: tbUsuariosWhereInput
    data: XOR<tbUsuariosUpdateWithoutTbMovimentosInput, tbUsuariosUncheckedUpdateWithoutTbMovimentosInput>
  }

  export type tbUsuariosUpdateWithoutTbMovimentosInput = {
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbNf?: tbNfUpdateManyWithoutTbUsuariosNestedInput
  }

  export type tbUsuariosUncheckedUpdateWithoutTbMovimentosInput = {
    idusuario?: IntFieldUpdateOperationsInput | number
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbNf?: tbNfUncheckedUpdateManyWithoutTbUsuariosNestedInput
  }

  export type tbMovitensUpsertWithWhereUniqueWithoutTbMovimentosInput = {
    where: tbMovitensWhereUniqueInput
    update: XOR<tbMovitensUpdateWithoutTbMovimentosInput, tbMovitensUncheckedUpdateWithoutTbMovimentosInput>
    create: XOR<tbMovitensCreateWithoutTbMovimentosInput, tbMovitensUncheckedCreateWithoutTbMovimentosInput>
  }

  export type tbMovitensUpdateWithWhereUniqueWithoutTbMovimentosInput = {
    where: tbMovitensWhereUniqueInput
    data: XOR<tbMovitensUpdateWithoutTbMovimentosInput, tbMovitensUncheckedUpdateWithoutTbMovimentosInput>
  }

  export type tbMovitensUpdateManyWithWhereWithoutTbMovimentosInput = {
    where: tbMovitensScalarWhereInput
    data: XOR<tbMovitensUpdateManyMutationInput, tbMovitensUncheckedUpdateManyWithoutTbMovimentosInput>
  }

  export type tbNfUpsertWithoutTbMovimentosInput = {
    update: XOR<tbNfUpdateWithoutTbMovimentosInput, tbNfUncheckedUpdateWithoutTbMovimentosInput>
    create: XOR<tbNfCreateWithoutTbMovimentosInput, tbNfUncheckedCreateWithoutTbMovimentosInput>
    where?: tbNfWhereInput
  }

  export type tbNfUpdateToOneWithWhereWithoutTbMovimentosInput = {
    where?: tbNfWhereInput
    data: XOR<tbNfUpdateWithoutTbMovimentosInput, tbNfUncheckedUpdateWithoutTbMovimentosInput>
  }

  export type tbNfUpdateWithoutTbMovimentosInput = {
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbFornecedores?: tbFornecedoresUpdateOneWithoutTbNfNestedInput
    tbUsuarios?: tbUsuariosUpdateOneWithoutTbNfNestedInput
    tbNfitens?: tbNfitensUpdateManyWithoutTbNfNestedInput
  }

  export type tbNfUncheckedUpdateWithoutTbMovimentosInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_inclusao?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedUpdateManyWithoutTbNfNestedInput
  }

  export type tbMovimentosCreateWithoutTbUsuariosInput = {
    tipmov?: string | null
    dtinc?: Date | string | null
    tbFornecedores?: tbFornecedoresCreateNestedOneWithoutTbMovimentosInput
    tbMovitens?: tbMovitensCreateNestedManyWithoutTbMovimentosInput
    tbNf?: tbNfCreateNestedOneWithoutTbMovimentosInput
  }

  export type tbMovimentosUncheckedCreateWithoutTbUsuariosInput = {
    idmovimento?: number
    tipmov?: string | null
    idfor?: number | null
    dtinc?: Date | string | null
    tbMovitens?: tbMovitensUncheckedCreateNestedManyWithoutTbMovimentosInput
    tbNf?: tbNfUncheckedCreateNestedOneWithoutTbMovimentosInput
  }

  export type tbMovimentosCreateOrConnectWithoutTbUsuariosInput = {
    where: tbMovimentosWhereUniqueInput
    create: XOR<tbMovimentosCreateWithoutTbUsuariosInput, tbMovimentosUncheckedCreateWithoutTbUsuariosInput>
  }

  export type tbMovimentosCreateManyTbUsuariosInputEnvelope = {
    data: tbMovimentosCreateManyTbUsuariosInput | tbMovimentosCreateManyTbUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type tbNfCreateWithoutTbUsuariosInput = {
    numnf?: number | null
    serienf?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    tbMovimentos?: tbMovimentosCreateNestedOneWithoutTbNfInput
    tbFornecedores?: tbFornecedoresCreateNestedOneWithoutTbNfInput
    tbNfitens?: tbNfitensCreateNestedManyWithoutTbNfInput
  }

  export type tbNfUncheckedCreateWithoutTbUsuariosInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idfor?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedCreateNestedManyWithoutTbNfInput
  }

  export type tbNfCreateOrConnectWithoutTbUsuariosInput = {
    where: tbNfWhereUniqueInput
    create: XOR<tbNfCreateWithoutTbUsuariosInput, tbNfUncheckedCreateWithoutTbUsuariosInput>
  }

  export type tbNfCreateManyTbUsuariosInputEnvelope = {
    data: tbNfCreateManyTbUsuariosInput | tbNfCreateManyTbUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type tbMovimentosUpsertWithWhereUniqueWithoutTbUsuariosInput = {
    where: tbMovimentosWhereUniqueInput
    update: XOR<tbMovimentosUpdateWithoutTbUsuariosInput, tbMovimentosUncheckedUpdateWithoutTbUsuariosInput>
    create: XOR<tbMovimentosCreateWithoutTbUsuariosInput, tbMovimentosUncheckedCreateWithoutTbUsuariosInput>
  }

  export type tbMovimentosUpdateWithWhereUniqueWithoutTbUsuariosInput = {
    where: tbMovimentosWhereUniqueInput
    data: XOR<tbMovimentosUpdateWithoutTbUsuariosInput, tbMovimentosUncheckedUpdateWithoutTbUsuariosInput>
  }

  export type tbMovimentosUpdateManyWithWhereWithoutTbUsuariosInput = {
    where: tbMovimentosScalarWhereInput
    data: XOR<tbMovimentosUpdateManyMutationInput, tbMovimentosUncheckedUpdateManyWithoutTbUsuariosInput>
  }

  export type tbNfUpsertWithWhereUniqueWithoutTbUsuariosInput = {
    where: tbNfWhereUniqueInput
    update: XOR<tbNfUpdateWithoutTbUsuariosInput, tbNfUncheckedUpdateWithoutTbUsuariosInput>
    create: XOR<tbNfCreateWithoutTbUsuariosInput, tbNfUncheckedCreateWithoutTbUsuariosInput>
  }

  export type tbNfUpdateWithWhereUniqueWithoutTbUsuariosInput = {
    where: tbNfWhereUniqueInput
    data: XOR<tbNfUpdateWithoutTbUsuariosInput, tbNfUncheckedUpdateWithoutTbUsuariosInput>
  }

  export type tbNfUpdateManyWithWhereWithoutTbUsuariosInput = {
    where: tbNfScalarWhereInput
    data: XOR<tbNfUpdateManyMutationInput, tbNfUncheckedUpdateManyWithoutTbUsuariosInput>
  }

  export type tbLocaisCreateWithoutTbMovitensInput = {
    nomelocal?: string | null
    tbEstoque?: tbEstoqueCreateNestedManyWithoutTbLocaisInput
  }

  export type tbLocaisUncheckedCreateWithoutTbMovitensInput = {
    idlocal?: number
    nomelocal?: string | null
    tbEstoque?: tbEstoqueUncheckedCreateNestedManyWithoutTbLocaisInput
  }

  export type tbLocaisCreateOrConnectWithoutTbMovitensInput = {
    where: tbLocaisWhereUniqueInput
    create: XOR<tbLocaisCreateWithoutTbMovitensInput, tbLocaisUncheckedCreateWithoutTbMovitensInput>
  }

  export type tbMovimentosCreateWithoutTbMovitensInput = {
    tipmov?: string | null
    dtinc?: Date | string | null
    tbFornecedores?: tbFornecedoresCreateNestedOneWithoutTbMovimentosInput
    tbUsuarios?: tbUsuariosCreateNestedOneWithoutTbMovimentosInput
    tbNf?: tbNfCreateNestedOneWithoutTbMovimentosInput
  }

  export type tbMovimentosUncheckedCreateWithoutTbMovitensInput = {
    idmovimento?: number
    tipmov?: string | null
    idfor?: number | null
    idusuario_alteracao?: number | null
    dtinc?: Date | string | null
    tbNf?: tbNfUncheckedCreateNestedOneWithoutTbMovimentosInput
  }

  export type tbMovimentosCreateOrConnectWithoutTbMovitensInput = {
    where: tbMovimentosWhereUniqueInput
    create: XOR<tbMovimentosCreateWithoutTbMovitensInput, tbMovimentosUncheckedCreateWithoutTbMovitensInput>
  }

  export type tbProdutosCreateWithoutTbMovitensInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbEstoque?: tbEstoqueCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput
    tbTiposProdutos?: tbTiposprodutosCreateNestedOneWithoutTbProdutosInput
    tbUnidadeMedida?: tbUnidademedidaCreateNestedOneWithoutTbProdutosInput
  }

  export type tbProdutosUncheckedCreateWithoutTbMovitensInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    idunidade?: number | null
    quantminima?: number | null
    tbEstoque?: tbEstoqueUncheckedCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput
  }

  export type tbProdutosCreateOrConnectWithoutTbMovitensInput = {
    where: tbProdutosWhereUniqueInput
    create: XOR<tbProdutosCreateWithoutTbMovitensInput, tbProdutosUncheckedCreateWithoutTbMovitensInput>
  }

  export type tbNfitensCreateWithoutTbMovitensInput = {
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
    tbNf: tbNfCreateNestedOneWithoutTbNfitensInput
  }

  export type tbNfitensUncheckedCreateWithoutTbMovitensInput = {
    idnf: number
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensCreateOrConnectWithoutTbMovitensInput = {
    where: tbNfitensWhereUniqueInput
    create: XOR<tbNfitensCreateWithoutTbMovitensInput, tbNfitensUncheckedCreateWithoutTbMovitensInput>
  }

  export type tbNfitensCreateManyTbMovitensInputEnvelope = {
    data: tbNfitensCreateManyTbMovitensInput | tbNfitensCreateManyTbMovitensInput[]
    skipDuplicates?: boolean
  }

  export type tbLocaisUpsertWithoutTbMovitensInput = {
    update: XOR<tbLocaisUpdateWithoutTbMovitensInput, tbLocaisUncheckedUpdateWithoutTbMovitensInput>
    create: XOR<tbLocaisCreateWithoutTbMovitensInput, tbLocaisUncheckedCreateWithoutTbMovitensInput>
    where?: tbLocaisWhereInput
  }

  export type tbLocaisUpdateToOneWithWhereWithoutTbMovitensInput = {
    where?: tbLocaisWhereInput
    data: XOR<tbLocaisUpdateWithoutTbMovitensInput, tbLocaisUncheckedUpdateWithoutTbMovitensInput>
  }

  export type tbLocaisUpdateWithoutTbMovitensInput = {
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
    tbEstoque?: tbEstoqueUpdateManyWithoutTbLocaisNestedInput
  }

  export type tbLocaisUncheckedUpdateWithoutTbMovitensInput = {
    idlocal?: IntFieldUpdateOperationsInput | number
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
    tbEstoque?: tbEstoqueUncheckedUpdateManyWithoutTbLocaisNestedInput
  }

  export type tbMovimentosUpsertWithoutTbMovitensInput = {
    update: XOR<tbMovimentosUpdateWithoutTbMovitensInput, tbMovimentosUncheckedUpdateWithoutTbMovitensInput>
    create: XOR<tbMovimentosCreateWithoutTbMovitensInput, tbMovimentosUncheckedCreateWithoutTbMovitensInput>
    where?: tbMovimentosWhereInput
  }

  export type tbMovimentosUpdateToOneWithWhereWithoutTbMovitensInput = {
    where?: tbMovimentosWhereInput
    data: XOR<tbMovimentosUpdateWithoutTbMovitensInput, tbMovimentosUncheckedUpdateWithoutTbMovitensInput>
  }

  export type tbMovimentosUpdateWithoutTbMovitensInput = {
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbFornecedores?: tbFornecedoresUpdateOneWithoutTbMovimentosNestedInput
    tbUsuarios?: tbUsuariosUpdateOneWithoutTbMovimentosNestedInput
    tbNf?: tbNfUpdateOneWithoutTbMovimentosNestedInput
  }

  export type tbMovimentosUncheckedUpdateWithoutTbMovitensInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_alteracao?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbNf?: tbNfUncheckedUpdateOneWithoutTbMovimentosNestedInput
  }

  export type tbProdutosUpsertWithoutTbMovitensInput = {
    update: XOR<tbProdutosUpdateWithoutTbMovitensInput, tbProdutosUncheckedUpdateWithoutTbMovitensInput>
    create: XOR<tbProdutosCreateWithoutTbMovitensInput, tbProdutosUncheckedCreateWithoutTbMovitensInput>
    where?: tbProdutosWhereInput
  }

  export type tbProdutosUpdateToOneWithWhereWithoutTbMovitensInput = {
    where?: tbProdutosWhereInput
    data: XOR<tbProdutosUpdateWithoutTbMovitensInput, tbProdutosUncheckedUpdateWithoutTbMovitensInput>
  }

  export type tbProdutosUpdateWithoutTbMovitensInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbEstoque?: tbEstoqueUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
    tbTiposProdutos?: tbTiposprodutosUpdateOneWithoutTbProdutosNestedInput
    tbUnidadeMedida?: tbUnidademedidaUpdateOneWithoutTbProdutosNestedInput
  }

  export type tbProdutosUncheckedUpdateWithoutTbMovitensInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbEstoque?: tbEstoqueUncheckedUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
  }

  export type tbNfitensUpsertWithWhereUniqueWithoutTbMovitensInput = {
    where: tbNfitensWhereUniqueInput
    update: XOR<tbNfitensUpdateWithoutTbMovitensInput, tbNfitensUncheckedUpdateWithoutTbMovitensInput>
    create: XOR<tbNfitensCreateWithoutTbMovitensInput, tbNfitensUncheckedCreateWithoutTbMovitensInput>
  }

  export type tbNfitensUpdateWithWhereUniqueWithoutTbMovitensInput = {
    where: tbNfitensWhereUniqueInput
    data: XOR<tbNfitensUpdateWithoutTbMovitensInput, tbNfitensUncheckedUpdateWithoutTbMovitensInput>
  }

  export type tbNfitensUpdateManyWithWhereWithoutTbMovitensInput = {
    where: tbNfitensScalarWhereInput
    data: XOR<tbNfitensUpdateManyMutationInput, tbNfitensUncheckedUpdateManyWithoutTbMovitensInput>
  }

  export type tbNfitensScalarWhereInput = {
    AND?: tbNfitensScalarWhereInput | tbNfitensScalarWhereInput[]
    OR?: tbNfitensScalarWhereInput[]
    NOT?: tbNfitensScalarWhereInput | tbNfitensScalarWhereInput[]
    idnf?: IntFilter<"tbNfitens"> | number
    idmovimento?: IntNullableFilter<"tbNfitens"> | number | null
    seqitem?: IntFilter<"tbNfitens"> | number
    idproduto?: IntFilter<"tbNfitens"> | number
    vlrunitario?: DecimalNullableFilter<"tbNfitens"> | Decimal | DecimalJsLike | number | string | null
    quantidade?: DecimalNullableFilter<"tbNfitens"> | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: DecimalNullableFilter<"tbNfitens"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbMovimentosCreateWithoutTbNfInput = {
    tipmov?: string | null
    dtinc?: Date | string | null
    tbFornecedores?: tbFornecedoresCreateNestedOneWithoutTbMovimentosInput
    tbUsuarios?: tbUsuariosCreateNestedOneWithoutTbMovimentosInput
    tbMovitens?: tbMovitensCreateNestedManyWithoutTbMovimentosInput
  }

  export type tbMovimentosUncheckedCreateWithoutTbNfInput = {
    idmovimento?: number
    tipmov?: string | null
    idfor?: number | null
    idusuario_alteracao?: number | null
    dtinc?: Date | string | null
    tbMovitens?: tbMovitensUncheckedCreateNestedManyWithoutTbMovimentosInput
  }

  export type tbMovimentosCreateOrConnectWithoutTbNfInput = {
    where: tbMovimentosWhereUniqueInput
    create: XOR<tbMovimentosCreateWithoutTbNfInput, tbMovimentosUncheckedCreateWithoutTbNfInput>
  }

  export type tbFornecedoresCreateWithoutTbNfInput = {
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
    tbMovimentos?: tbMovimentosCreateNestedManyWithoutTbFornecedoresInput
  }

  export type tbFornecedoresUncheckedCreateWithoutTbNfInput = {
    idfor?: number
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
    tbMovimentos?: tbMovimentosUncheckedCreateNestedManyWithoutTbFornecedoresInput
  }

  export type tbFornecedoresCreateOrConnectWithoutTbNfInput = {
    where: tbFornecedoresWhereUniqueInput
    create: XOR<tbFornecedoresCreateWithoutTbNfInput, tbFornecedoresUncheckedCreateWithoutTbNfInput>
  }

  export type tbUsuariosCreateWithoutTbNfInput = {
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
    tbMovimentos?: tbMovimentosCreateNestedManyWithoutTbUsuariosInput
  }

  export type tbUsuariosUncheckedCreateWithoutTbNfInput = {
    idusuario?: number
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
    tbMovimentos?: tbMovimentosUncheckedCreateNestedManyWithoutTbUsuariosInput
  }

  export type tbUsuariosCreateOrConnectWithoutTbNfInput = {
    where: tbUsuariosWhereUniqueInput
    create: XOR<tbUsuariosCreateWithoutTbNfInput, tbUsuariosUncheckedCreateWithoutTbNfInput>
  }

  export type tbNfitensCreateWithoutTbNfInput = {
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
    tbMovitens?: tbMovitensCreateNestedOneWithoutTbNfitensInput
  }

  export type tbNfitensUncheckedCreateWithoutTbNfInput = {
    idmovimento?: number | null
    seqitem: number
    idproduto: number
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensCreateOrConnectWithoutTbNfInput = {
    where: tbNfitensWhereUniqueInput
    create: XOR<tbNfitensCreateWithoutTbNfInput, tbNfitensUncheckedCreateWithoutTbNfInput>
  }

  export type tbNfitensCreateManyTbNfInputEnvelope = {
    data: tbNfitensCreateManyTbNfInput | tbNfitensCreateManyTbNfInput[]
    skipDuplicates?: boolean
  }

  export type tbMovimentosUpsertWithoutTbNfInput = {
    update: XOR<tbMovimentosUpdateWithoutTbNfInput, tbMovimentosUncheckedUpdateWithoutTbNfInput>
    create: XOR<tbMovimentosCreateWithoutTbNfInput, tbMovimentosUncheckedCreateWithoutTbNfInput>
    where?: tbMovimentosWhereInput
  }

  export type tbMovimentosUpdateToOneWithWhereWithoutTbNfInput = {
    where?: tbMovimentosWhereInput
    data: XOR<tbMovimentosUpdateWithoutTbNfInput, tbMovimentosUncheckedUpdateWithoutTbNfInput>
  }

  export type tbMovimentosUpdateWithoutTbNfInput = {
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbFornecedores?: tbFornecedoresUpdateOneWithoutTbMovimentosNestedInput
    tbUsuarios?: tbUsuariosUpdateOneWithoutTbMovimentosNestedInput
    tbMovitens?: tbMovitensUpdateManyWithoutTbMovimentosNestedInput
  }

  export type tbMovimentosUncheckedUpdateWithoutTbNfInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_alteracao?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbMovitens?: tbMovitensUncheckedUpdateManyWithoutTbMovimentosNestedInput
  }

  export type tbFornecedoresUpsertWithoutTbNfInput = {
    update: XOR<tbFornecedoresUpdateWithoutTbNfInput, tbFornecedoresUncheckedUpdateWithoutTbNfInput>
    create: XOR<tbFornecedoresCreateWithoutTbNfInput, tbFornecedoresUncheckedCreateWithoutTbNfInput>
    where?: tbFornecedoresWhereInput
  }

  export type tbFornecedoresUpdateToOneWithWhereWithoutTbNfInput = {
    where?: tbFornecedoresWhereInput
    data: XOR<tbFornecedoresUpdateWithoutTbNfInput, tbFornecedoresUncheckedUpdateWithoutTbNfInput>
  }

  export type tbFornecedoresUpdateWithoutTbNfInput = {
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    tbMovimentos?: tbMovimentosUpdateManyWithoutTbFornecedoresNestedInput
  }

  export type tbFornecedoresUncheckedUpdateWithoutTbNfInput = {
    idfor?: IntFieldUpdateOperationsInput | number
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    tbMovimentos?: tbMovimentosUncheckedUpdateManyWithoutTbFornecedoresNestedInput
  }

  export type tbUsuariosUpsertWithoutTbNfInput = {
    update: XOR<tbUsuariosUpdateWithoutTbNfInput, tbUsuariosUncheckedUpdateWithoutTbNfInput>
    create: XOR<tbUsuariosCreateWithoutTbNfInput, tbUsuariosUncheckedCreateWithoutTbNfInput>
    where?: tbUsuariosWhereInput
  }

  export type tbUsuariosUpdateToOneWithWhereWithoutTbNfInput = {
    where?: tbUsuariosWhereInput
    data: XOR<tbUsuariosUpdateWithoutTbNfInput, tbUsuariosUncheckedUpdateWithoutTbNfInput>
  }

  export type tbUsuariosUpdateWithoutTbNfInput = {
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbMovimentos?: tbMovimentosUpdateManyWithoutTbUsuariosNestedInput
  }

  export type tbUsuariosUncheckedUpdateWithoutTbNfInput = {
    idusuario?: IntFieldUpdateOperationsInput | number
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbMovimentos?: tbMovimentosUncheckedUpdateManyWithoutTbUsuariosNestedInput
  }

  export type tbNfitensUpsertWithWhereUniqueWithoutTbNfInput = {
    where: tbNfitensWhereUniqueInput
    update: XOR<tbNfitensUpdateWithoutTbNfInput, tbNfitensUncheckedUpdateWithoutTbNfInput>
    create: XOR<tbNfitensCreateWithoutTbNfInput, tbNfitensUncheckedCreateWithoutTbNfInput>
  }

  export type tbNfitensUpdateWithWhereUniqueWithoutTbNfInput = {
    where: tbNfitensWhereUniqueInput
    data: XOR<tbNfitensUpdateWithoutTbNfInput, tbNfitensUncheckedUpdateWithoutTbNfInput>
  }

  export type tbNfitensUpdateManyWithWhereWithoutTbNfInput = {
    where: tbNfitensScalarWhereInput
    data: XOR<tbNfitensUpdateManyMutationInput, tbNfitensUncheckedUpdateManyWithoutTbNfInput>
  }

  export type tbMovitensCreateWithoutTbNfitensInput = {
    seqitem?: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbLocais?: tbLocaisCreateNestedOneWithoutTbMovitensInput
    tbMovimentos: tbMovimentosCreateNestedOneWithoutTbMovitensInput
    tbProdutos: tbProdutosCreateNestedOneWithoutTbMovitensInput
  }

  export type tbMovitensUncheckedCreateWithoutTbNfitensInput = {
    idmovimento: number
    seqitem?: number
    idproduto: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbMovitensCreateOrConnectWithoutTbNfitensInput = {
    where: tbMovitensWhereUniqueInput
    create: XOR<tbMovitensCreateWithoutTbNfitensInput, tbMovitensUncheckedCreateWithoutTbNfitensInput>
  }

  export type tbNfCreateWithoutTbNfitensInput = {
    numnf?: number | null
    serienf?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    tbMovimentos?: tbMovimentosCreateNestedOneWithoutTbNfInput
    tbFornecedores?: tbFornecedoresCreateNestedOneWithoutTbNfInput
    tbUsuarios?: tbUsuariosCreateNestedOneWithoutTbNfInput
  }

  export type tbNfUncheckedCreateWithoutTbNfitensInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idfor?: number | null
    idusuario_inclusao?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfCreateOrConnectWithoutTbNfitensInput = {
    where: tbNfWhereUniqueInput
    create: XOR<tbNfCreateWithoutTbNfitensInput, tbNfUncheckedCreateWithoutTbNfitensInput>
  }

  export type tbMovitensUpsertWithoutTbNfitensInput = {
    update: XOR<tbMovitensUpdateWithoutTbNfitensInput, tbMovitensUncheckedUpdateWithoutTbNfitensInput>
    create: XOR<tbMovitensCreateWithoutTbNfitensInput, tbMovitensUncheckedCreateWithoutTbNfitensInput>
    where?: tbMovitensWhereInput
  }

  export type tbMovitensUpdateToOneWithWhereWithoutTbNfitensInput = {
    where?: tbMovitensWhereInput
    data: XOR<tbMovitensUpdateWithoutTbNfitensInput, tbMovitensUncheckedUpdateWithoutTbNfitensInput>
  }

  export type tbMovitensUpdateWithoutTbNfitensInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbLocais?: tbLocaisUpdateOneWithoutTbMovitensNestedInput
    tbMovimentos?: tbMovimentosUpdateOneRequiredWithoutTbMovitensNestedInput
    tbProdutos?: tbProdutosUpdateOneRequiredWithoutTbMovitensNestedInput
  }

  export type tbMovitensUncheckedUpdateWithoutTbNfitensInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfUpsertWithoutTbNfitensInput = {
    update: XOR<tbNfUpdateWithoutTbNfitensInput, tbNfUncheckedUpdateWithoutTbNfitensInput>
    create: XOR<tbNfCreateWithoutTbNfitensInput, tbNfUncheckedCreateWithoutTbNfitensInput>
    where?: tbNfWhereInput
  }

  export type tbNfUpdateToOneWithWhereWithoutTbNfitensInput = {
    where?: tbNfWhereInput
    data: XOR<tbNfUpdateWithoutTbNfitensInput, tbNfUncheckedUpdateWithoutTbNfitensInput>
  }

  export type tbNfUpdateWithoutTbNfitensInput = {
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbMovimentos?: tbMovimentosUpdateOneWithoutTbNfNestedInput
    tbFornecedores?: tbFornecedoresUpdateOneWithoutTbNfNestedInput
    tbUsuarios?: tbUsuariosUpdateOneWithoutTbNfNestedInput
  }

  export type tbNfUncheckedUpdateWithoutTbNfitensInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_inclusao?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdutosCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbEstoque?: tbEstoqueCreateNestedManyWithoutTbProdutosInput
    tbMovitens?: tbMovitensCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput
    tbTiposProdutos?: tbTiposprodutosCreateNestedOneWithoutTbProdutosInput
    tbUnidadeMedida?: tbUnidademedidaCreateNestedOneWithoutTbProdutosInput
  }

  export type tbProdutosUncheckedCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    idunidade?: number | null
    quantminima?: number | null
    tbEstoque?: tbEstoqueUncheckedCreateNestedManyWithoutTbProdutosInput
    tbMovitens?: tbMovitensUncheckedCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput
  }

  export type tbProdutosCreateOrConnectWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput = {
    where: tbProdutosWhereUniqueInput
    create: XOR<tbProdutosCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdutosUncheckedCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput>
  }

  export type tbProdutosCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbEstoque?: tbEstoqueCreateNestedManyWithoutTbProdutosInput
    tbMovitens?: tbMovitensCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput
    tbTiposProdutos?: tbTiposprodutosCreateNestedOneWithoutTbProdutosInput
    tbUnidadeMedida?: tbUnidademedidaCreateNestedOneWithoutTbProdutosInput
  }

  export type tbProdutosUncheckedCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    idunidade?: number | null
    quantminima?: number | null
    tbEstoque?: tbEstoqueUncheckedCreateNestedManyWithoutTbProdutosInput
    tbMovitens?: tbMovitensUncheckedCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput
  }

  export type tbProdutosCreateOrConnectWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    where: tbProdutosWhereUniqueInput
    create: XOR<tbProdutosCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdutosUncheckedCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput>
  }

  export type tbProdutosUpsertWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput = {
    update: XOR<tbProdutosUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdutosUncheckedUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput>
    create: XOR<tbProdutosCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdutosUncheckedCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput>
    where?: tbProdutosWhereInput
  }

  export type tbProdutosUpdateToOneWithWhereWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput = {
    where?: tbProdutosWhereInput
    data: XOR<tbProdutosUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput, tbProdutosUncheckedUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput>
  }

  export type tbProdutosUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbEstoque?: tbEstoqueUpdateManyWithoutTbProdutosNestedInput
    tbMovitens?: tbMovitensUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
    tbTiposProdutos?: tbTiposprodutosUpdateOneWithoutTbProdutosNestedInput
    tbUnidadeMedida?: tbUnidademedidaUpdateOneWithoutTbProdutosNestedInput
  }

  export type tbProdutosUncheckedUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbEstoque?: tbEstoqueUncheckedUpdateManyWithoutTbProdutosNestedInput
    tbMovitens?: tbMovitensUncheckedUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
  }

  export type tbProdutosUpsertWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    update: XOR<tbProdutosUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdutosUncheckedUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput>
    create: XOR<tbProdutosCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdutosUncheckedCreateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput>
    where?: tbProdutosWhereInput
  }

  export type tbProdutosUpdateToOneWithWhereWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    where?: tbProdutosWhereInput
    data: XOR<tbProdutosUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput, tbProdutosUncheckedUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput>
  }

  export type tbProdutosUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbEstoque?: tbEstoqueUpdateManyWithoutTbProdutosNestedInput
    tbMovitens?: tbMovitensUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput
    tbTiposProdutos?: tbTiposprodutosUpdateOneWithoutTbProdutosNestedInput
    tbUnidadeMedida?: tbUnidademedidaUpdateOneWithoutTbProdutosNestedInput
  }

  export type tbProdutosUncheckedUpdateWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbEstoque?: tbEstoqueUncheckedUpdateManyWithoutTbProdutosNestedInput
    tbMovitens?: tbMovitensUncheckedUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput
  }

  export type tbProdutosCreateWithoutTbTiposProdutosInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbEstoque?: tbEstoqueCreateNestedManyWithoutTbProdutosInput
    tbMovitens?: tbMovitensCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput
    tbUnidadeMedida?: tbUnidademedidaCreateNestedOneWithoutTbProdutosInput
  }

  export type tbProdutosUncheckedCreateWithoutTbTiposProdutosInput = {
    idproduto?: number
    nomeprod?: string | null
    idunidade?: number | null
    quantminima?: number | null
    tbEstoque?: tbEstoqueUncheckedCreateNestedManyWithoutTbProdutosInput
    tbMovitens?: tbMovitensUncheckedCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput
  }

  export type tbProdutosCreateOrConnectWithoutTbTiposProdutosInput = {
    where: tbProdutosWhereUniqueInput
    create: XOR<tbProdutosCreateWithoutTbTiposProdutosInput, tbProdutosUncheckedCreateWithoutTbTiposProdutosInput>
  }

  export type tbProdutosCreateManyTbTiposProdutosInputEnvelope = {
    data: tbProdutosCreateManyTbTiposProdutosInput | tbProdutosCreateManyTbTiposProdutosInput[]
    skipDuplicates?: boolean
  }

  export type tbProdutosUpsertWithWhereUniqueWithoutTbTiposProdutosInput = {
    where: tbProdutosWhereUniqueInput
    update: XOR<tbProdutosUpdateWithoutTbTiposProdutosInput, tbProdutosUncheckedUpdateWithoutTbTiposProdutosInput>
    create: XOR<tbProdutosCreateWithoutTbTiposProdutosInput, tbProdutosUncheckedCreateWithoutTbTiposProdutosInput>
  }

  export type tbProdutosUpdateWithWhereUniqueWithoutTbTiposProdutosInput = {
    where: tbProdutosWhereUniqueInput
    data: XOR<tbProdutosUpdateWithoutTbTiposProdutosInput, tbProdutosUncheckedUpdateWithoutTbTiposProdutosInput>
  }

  export type tbProdutosUpdateManyWithWhereWithoutTbTiposProdutosInput = {
    where: tbProdutosScalarWhereInput
    data: XOR<tbProdutosUpdateManyMutationInput, tbProdutosUncheckedUpdateManyWithoutTbTiposProdutosInput>
  }

  export type tbProdutosScalarWhereInput = {
    AND?: tbProdutosScalarWhereInput | tbProdutosScalarWhereInput[]
    OR?: tbProdutosScalarWhereInput[]
    NOT?: tbProdutosScalarWhereInput | tbProdutosScalarWhereInput[]
    idproduto?: IntFilter<"tbProdutos"> | number
    nomeprod?: StringNullableFilter<"tbProdutos"> | string | null
    idtipprod?: IntNullableFilter<"tbProdutos"> | number | null
    idunidade?: IntNullableFilter<"tbProdutos"> | number | null
    quantminima?: IntNullableFilter<"tbProdutos"> | number | null
  }

  export type tbProdutosCreateWithoutTbUnidadeMedidaInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbEstoque?: tbEstoqueCreateNestedManyWithoutTbProdutosInput
    tbMovitens?: tbMovitensCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput
    tbTiposProdutos?: tbTiposprodutosCreateNestedOneWithoutTbProdutosInput
  }

  export type tbProdutosUncheckedCreateWithoutTbUnidadeMedidaInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    quantminima?: number | null
    tbEstoque?: tbEstoqueUncheckedCreateNestedManyWithoutTbProdutosInput
    tbMovitens?: tbMovitensUncheckedCreateNestedManyWithoutTbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUncheckedCreateNestedManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput
  }

  export type tbProdutosCreateOrConnectWithoutTbUnidadeMedidaInput = {
    where: tbProdutosWhereUniqueInput
    create: XOR<tbProdutosCreateWithoutTbUnidadeMedidaInput, tbProdutosUncheckedCreateWithoutTbUnidadeMedidaInput>
  }

  export type tbProdutosCreateManyTbUnidadeMedidaInputEnvelope = {
    data: tbProdutosCreateManyTbUnidadeMedidaInput | tbProdutosCreateManyTbUnidadeMedidaInput[]
    skipDuplicates?: boolean
  }

  export type tbProdutosUpsertWithWhereUniqueWithoutTbUnidadeMedidaInput = {
    where: tbProdutosWhereUniqueInput
    update: XOR<tbProdutosUpdateWithoutTbUnidadeMedidaInput, tbProdutosUncheckedUpdateWithoutTbUnidadeMedidaInput>
    create: XOR<tbProdutosCreateWithoutTbUnidadeMedidaInput, tbProdutosUncheckedCreateWithoutTbUnidadeMedidaInput>
  }

  export type tbProdutosUpdateWithWhereUniqueWithoutTbUnidadeMedidaInput = {
    where: tbProdutosWhereUniqueInput
    data: XOR<tbProdutosUpdateWithoutTbUnidadeMedidaInput, tbProdutosUncheckedUpdateWithoutTbUnidadeMedidaInput>
  }

  export type tbProdutosUpdateManyWithWhereWithoutTbUnidadeMedidaInput = {
    where: tbProdutosScalarWhereInput
    data: XOR<tbProdutosUpdateManyMutationInput, tbProdutosUncheckedUpdateManyWithoutTbUnidadeMedidaInput>
  }

  export type tbMovimentosCreateManyTbFornecedoresInput = {
    idmovimento?: number
    tipmov?: string | null
    idusuario_alteracao?: number | null
    dtinc?: Date | string | null
  }

  export type tbNfCreateManyTbFornecedoresInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idusuario_inclusao?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbMovimentosUpdateWithoutTbFornecedoresInput = {
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbUsuarios?: tbUsuariosUpdateOneWithoutTbMovimentosNestedInput
    tbMovitens?: tbMovitensUpdateManyWithoutTbMovimentosNestedInput
    tbNf?: tbNfUpdateOneWithoutTbMovimentosNestedInput
  }

  export type tbMovimentosUncheckedUpdateWithoutTbFornecedoresInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idusuario_alteracao?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbMovitens?: tbMovitensUncheckedUpdateManyWithoutTbMovimentosNestedInput
    tbNf?: tbNfUncheckedUpdateOneWithoutTbMovimentosNestedInput
  }

  export type tbMovimentosUncheckedUpdateManyWithoutTbFornecedoresInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idusuario_alteracao?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbNfUpdateWithoutTbFornecedoresInput = {
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbMovimentos?: tbMovimentosUpdateOneWithoutTbNfNestedInput
    tbUsuarios?: tbUsuariosUpdateOneWithoutTbNfNestedInput
    tbNfitens?: tbNfitensUpdateManyWithoutTbNfNestedInput
  }

  export type tbNfUncheckedUpdateWithoutTbFornecedoresInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_inclusao?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedUpdateManyWithoutTbNfNestedInput
  }

  export type tbNfUncheckedUpdateManyWithoutTbFornecedoresInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_inclusao?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbEstoqueCreateManyTbProdutosInput = {
    idestoque?: number
    idlocal?: number | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
  }

  export type tbMovitensCreateManyTbProdutosInput = {
    idmovimento: number
    seqitem?: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput = {
    idcomp?: number
    idprodutocomp: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoCreateManyTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    idcomp?: number
    idproduto: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbEstoqueUpdateWithoutTbProdutosInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbLocais?: tbLocaisUpdateOneWithoutTbEstoqueNestedInput
  }

  export type tbEstoqueUncheckedUpdateWithoutTbProdutosInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbEstoqueUncheckedUpdateManyWithoutTbProdutosInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbMovitensUpdateWithoutTbProdutosInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbLocais?: tbLocaisUpdateOneWithoutTbMovitensNestedInput
    tbMovimentos?: tbMovimentosUpdateOneRequiredWithoutTbMovitensNestedInput
    tbNfitens?: tbNfitensUpdateManyWithoutTbMovitensNestedInput
  }

  export type tbMovitensUncheckedUpdateWithoutTbProdutosInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedUpdateManyWithoutTbMovitensNestedInput
  }

  export type tbMovitensUncheckedUpdateManyWithoutTbProdutosInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoUpdateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbProdutos_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdutosUpdateOneRequiredWithoutTbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
  }

  export type tbProdcomposicaoUncheckedUpdateWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    idprodutocomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    idprodutocomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoUpdateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbProdutos_tbProdcomposicao_idprodutoTotbProdutos?: tbProdutosUpdateOneRequiredWithoutTbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutosNestedInput
  }

  export type tbProdcomposicaoUncheckedUpdateWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbEstoqueCreateManyTbLocaisInput = {
    idestoque?: number
    idproduto: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
  }

  export type tbMovitensCreateManyTbLocaisInput = {
    idmovimento: number
    seqitem?: number
    idproduto: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbEstoqueUpdateWithoutTbLocaisInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbProdutos?: tbProdutosUpdateOneRequiredWithoutTbEstoqueNestedInput
  }

  export type tbEstoqueUncheckedUpdateWithoutTbLocaisInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbEstoqueUncheckedUpdateManyWithoutTbLocaisInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbMovitensUpdateWithoutTbLocaisInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbMovimentos?: tbMovimentosUpdateOneRequiredWithoutTbMovitensNestedInput
    tbProdutos?: tbProdutosUpdateOneRequiredWithoutTbMovitensNestedInput
    tbNfitens?: tbNfitensUpdateManyWithoutTbMovitensNestedInput
  }

  export type tbMovitensUncheckedUpdateWithoutTbLocaisInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedUpdateManyWithoutTbMovitensNestedInput
  }

  export type tbMovitensUncheckedUpdateManyWithoutTbLocaisInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbMovitensCreateManyTbMovimentosInput = {
    seqitem?: number
    idproduto: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbMovitensUpdateWithoutTbMovimentosInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbLocais?: tbLocaisUpdateOneWithoutTbMovitensNestedInput
    tbProdutos?: tbProdutosUpdateOneRequiredWithoutTbMovitensNestedInput
    tbNfitens?: tbNfitensUpdateManyWithoutTbMovitensNestedInput
  }

  export type tbMovitensUncheckedUpdateWithoutTbMovimentosInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedUpdateManyWithoutTbMovitensNestedInput
  }

  export type tbMovitensUncheckedUpdateManyWithoutTbMovimentosInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbMovimentosCreateManyTbUsuariosInput = {
    idmovimento?: number
    tipmov?: string | null
    idfor?: number | null
    dtinc?: Date | string | null
  }

  export type tbNfCreateManyTbUsuariosInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idfor?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbMovimentosUpdateWithoutTbUsuariosInput = {
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbFornecedores?: tbFornecedoresUpdateOneWithoutTbMovimentosNestedInput
    tbMovitens?: tbMovitensUpdateManyWithoutTbMovimentosNestedInput
    tbNf?: tbNfUpdateOneWithoutTbMovimentosNestedInput
  }

  export type tbMovimentosUncheckedUpdateWithoutTbUsuariosInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbMovitens?: tbMovitensUncheckedUpdateManyWithoutTbMovimentosNestedInput
    tbNf?: tbNfUncheckedUpdateOneWithoutTbMovimentosNestedInput
  }

  export type tbMovimentosUncheckedUpdateManyWithoutTbUsuariosInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbNfUpdateWithoutTbUsuariosInput = {
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbMovimentos?: tbMovimentosUpdateOneWithoutTbNfNestedInput
    tbFornecedores?: tbFornecedoresUpdateOneWithoutTbNfNestedInput
    tbNfitens?: tbNfitensUpdateManyWithoutTbNfNestedInput
  }

  export type tbNfUncheckedUpdateWithoutTbUsuariosInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbNfitens?: tbNfitensUncheckedUpdateManyWithoutTbNfNestedInput
  }

  export type tbNfUncheckedUpdateManyWithoutTbUsuariosInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensCreateManyTbMovitensInput = {
    idnf: number
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensUpdateWithoutTbMovitensInput = {
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbNf?: tbNfUpdateOneRequiredWithoutTbNfitensNestedInput
  }

  export type tbNfitensUncheckedUpdateWithoutTbMovitensInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensUncheckedUpdateManyWithoutTbMovitensInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensCreateManyTbNfInput = {
    idmovimento?: number | null
    seqitem: number
    idproduto: number
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensUpdateWithoutTbNfInput = {
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbMovitens?: tbMovitensUpdateOneWithoutTbNfitensNestedInput
  }

  export type tbNfitensUncheckedUpdateWithoutTbNfInput = {
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbNfitensUncheckedUpdateManyWithoutTbNfInput = {
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbProdutosCreateManyTbTiposProdutosInput = {
    idproduto?: number
    nomeprod?: string | null
    idunidade?: number | null
    quantminima?: number | null
  }

  export type tbProdutosUpdateWithoutTbTiposProdutosInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbEstoque?: tbEstoqueUpdateManyWithoutTbProdutosNestedInput
    tbMovitens?: tbMovitensUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
    tbUnidadeMedida?: tbUnidademedidaUpdateOneWithoutTbProdutosNestedInput
  }

  export type tbProdutosUncheckedUpdateWithoutTbTiposProdutosInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbEstoque?: tbEstoqueUncheckedUpdateManyWithoutTbProdutosNestedInput
    tbMovitens?: tbMovitensUncheckedUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
  }

  export type tbProdutosUncheckedUpdateManyWithoutTbTiposProdutosInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbProdutosCreateManyTbUnidadeMedidaInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    quantminima?: number | null
  }

  export type tbProdutosUpdateWithoutTbUnidadeMedidaInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbEstoque?: tbEstoqueUpdateManyWithoutTbProdutosNestedInput
    tbMovitens?: tbMovitensUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
    tbTiposProdutos?: tbTiposprodutosUpdateOneWithoutTbProdutosNestedInput
  }

  export type tbProdutosUncheckedUpdateWithoutTbUnidadeMedidaInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbEstoque?: tbEstoqueUncheckedUpdateManyWithoutTbProdutosNestedInput
    tbMovitens?: tbMovitensUncheckedUpdateManyWithoutTbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutoTotbProdutos?: tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutoTotbProdutosNestedInput
    tbProdcomposicao_tbProdcomposicao_idprodutocompTotbProdutos?: tbProdcomposicaoUncheckedUpdateManyWithoutTbProdutos_tbProdcomposicao_idprodutocompTotbProdutosNestedInput
  }

  export type tbProdutosUncheckedUpdateManyWithoutTbUnidadeMedidaInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use TbFornecedoresCountOutputTypeDefaultArgs instead
     */
    export type TbFornecedoresCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbFornecedoresCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbProdutosCountOutputTypeDefaultArgs instead
     */
    export type TbProdutosCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbProdutosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbLocaisCountOutputTypeDefaultArgs instead
     */
    export type TbLocaisCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbLocaisCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbMovimentosCountOutputTypeDefaultArgs instead
     */
    export type TbMovimentosCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbMovimentosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbUsuariosCountOutputTypeDefaultArgs instead
     */
    export type TbUsuariosCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbUsuariosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbMovitensCountOutputTypeDefaultArgs instead
     */
    export type TbMovitensCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbMovitensCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbNfCountOutputTypeDefaultArgs instead
     */
    export type TbNfCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbNfCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbTiposprodutosCountOutputTypeDefaultArgs instead
     */
    export type TbTiposprodutosCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbTiposprodutosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbUnidademedidaCountOutputTypeDefaultArgs instead
     */
    export type TbUnidademedidaCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbUnidademedidaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbFornecedoresDefaultArgs instead
     */
    export type tbFornecedoresArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbFornecedoresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbProdutosDefaultArgs instead
     */
    export type tbProdutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbProdutosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbEstoqueDefaultArgs instead
     */
    export type tbEstoqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbEstoqueDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbLocaisDefaultArgs instead
     */
    export type tbLocaisArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbLocaisDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbMovimentosDefaultArgs instead
     */
    export type tbMovimentosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbMovimentosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbUsuariosDefaultArgs instead
     */
    export type tbUsuariosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbUsuariosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbMovitensDefaultArgs instead
     */
    export type tbMovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbMovitensDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbNfDefaultArgs instead
     */
    export type tbNfArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbNfDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbNfitensDefaultArgs instead
     */
    export type tbNfitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbNfitensDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbProdcomposicaoDefaultArgs instead
     */
    export type tbProdcomposicaoArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbProdcomposicaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbTiposprodutosDefaultArgs instead
     */
    export type tbTiposprodutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbTiposprodutosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbUnidademedidaDefaultArgs instead
     */
    export type tbUnidademedidaArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbUnidademedidaDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}