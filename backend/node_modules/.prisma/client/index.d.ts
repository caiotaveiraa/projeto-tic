
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model tbestoque
 * 
 */
export type tbestoque = $Result.DefaultSelection<Prisma.$tbestoquePayload>
/**
 * Model tbfornecedores
 * 
 */
export type tbfornecedores = $Result.DefaultSelection<Prisma.$tbfornecedoresPayload>
/**
 * Model tblocais
 * 
 */
export type tblocais = $Result.DefaultSelection<Prisma.$tblocaisPayload>
/**
 * Model tbmovimentos
 * 
 */
export type tbmovimentos = $Result.DefaultSelection<Prisma.$tbmovimentosPayload>
/**
 * Model tbmovitens
 * 
 */
export type tbmovitens = $Result.DefaultSelection<Prisma.$tbmovitensPayload>
/**
 * Model tbnf
 * 
 */
export type tbnf = $Result.DefaultSelection<Prisma.$tbnfPayload>
/**
 * Model tbnfitens
 * 
 */
export type tbnfitens = $Result.DefaultSelection<Prisma.$tbnfitensPayload>
/**
 * Model tbprodcomposicao
 * 
 */
export type tbprodcomposicao = $Result.DefaultSelection<Prisma.$tbprodcomposicaoPayload>
/**
 * Model tbprodutos
 * 
 */
export type tbprodutos = $Result.DefaultSelection<Prisma.$tbprodutosPayload>
/**
 * Model tbtiposprodutos
 * 
 */
export type tbtiposprodutos = $Result.DefaultSelection<Prisma.$tbtiposprodutosPayload>
/**
 * Model tbunidademedida
 * 
 */
export type tbunidademedida = $Result.DefaultSelection<Prisma.$tbunidademedidaPayload>
/**
 * Model tbusuarios
 * 
 */
export type tbusuarios = $Result.DefaultSelection<Prisma.$tbusuariosPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Tbestoques
 * const tbestoques = await prisma.tbestoque.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Tbestoques
   * const tbestoques = await prisma.tbestoque.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.tbestoque`: Exposes CRUD operations for the **tbestoque** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbestoques
    * const tbestoques = await prisma.tbestoque.findMany()
    * ```
    */
  get tbestoque(): Prisma.tbestoqueDelegate<ExtArgs>;

  /**
   * `prisma.tbfornecedores`: Exposes CRUD operations for the **tbfornecedores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbfornecedores
    * const tbfornecedores = await prisma.tbfornecedores.findMany()
    * ```
    */
  get tbfornecedores(): Prisma.tbfornecedoresDelegate<ExtArgs>;

  /**
   * `prisma.tblocais`: Exposes CRUD operations for the **tblocais** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tblocais
    * const tblocais = await prisma.tblocais.findMany()
    * ```
    */
  get tblocais(): Prisma.tblocaisDelegate<ExtArgs>;

  /**
   * `prisma.tbmovimentos`: Exposes CRUD operations for the **tbmovimentos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbmovimentos
    * const tbmovimentos = await prisma.tbmovimentos.findMany()
    * ```
    */
  get tbmovimentos(): Prisma.tbmovimentosDelegate<ExtArgs>;

  /**
   * `prisma.tbmovitens`: Exposes CRUD operations for the **tbmovitens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbmovitens
    * const tbmovitens = await prisma.tbmovitens.findMany()
    * ```
    */
  get tbmovitens(): Prisma.tbmovitensDelegate<ExtArgs>;

  /**
   * `prisma.tbnf`: Exposes CRUD operations for the **tbnf** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbnfs
    * const tbnfs = await prisma.tbnf.findMany()
    * ```
    */
  get tbnf(): Prisma.tbnfDelegate<ExtArgs>;

  /**
   * `prisma.tbnfitens`: Exposes CRUD operations for the **tbnfitens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbnfitens
    * const tbnfitens = await prisma.tbnfitens.findMany()
    * ```
    */
  get tbnfitens(): Prisma.tbnfitensDelegate<ExtArgs>;

  /**
   * `prisma.tbprodcomposicao`: Exposes CRUD operations for the **tbprodcomposicao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbprodcomposicaos
    * const tbprodcomposicaos = await prisma.tbprodcomposicao.findMany()
    * ```
    */
  get tbprodcomposicao(): Prisma.tbprodcomposicaoDelegate<ExtArgs>;

  /**
   * `prisma.tbprodutos`: Exposes CRUD operations for the **tbprodutos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbprodutos
    * const tbprodutos = await prisma.tbprodutos.findMany()
    * ```
    */
  get tbprodutos(): Prisma.tbprodutosDelegate<ExtArgs>;

  /**
   * `prisma.tbtiposprodutos`: Exposes CRUD operations for the **tbtiposprodutos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbtiposprodutos
    * const tbtiposprodutos = await prisma.tbtiposprodutos.findMany()
    * ```
    */
  get tbtiposprodutos(): Prisma.tbtiposprodutosDelegate<ExtArgs>;

  /**
   * `prisma.tbunidademedida`: Exposes CRUD operations for the **tbunidademedida** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbunidademedidas
    * const tbunidademedidas = await prisma.tbunidademedida.findMany()
    * ```
    */
  get tbunidademedida(): Prisma.tbunidademedidaDelegate<ExtArgs>;

  /**
   * `prisma.tbusuarios`: Exposes CRUD operations for the **tbusuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbusuarios
    * const tbusuarios = await prisma.tbusuarios.findMany()
    * ```
    */
  get tbusuarios(): Prisma.tbusuariosDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.2.0
   * Query Engine version: 2804dc98259d2ea960602aca6b8e7fdc03c1758f
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    tbestoque: 'tbestoque',
    tbfornecedores: 'tbfornecedores',
    tblocais: 'tblocais',
    tbmovimentos: 'tbmovimentos',
    tbmovitens: 'tbmovitens',
    tbnf: 'tbnf',
    tbnfitens: 'tbnfitens',
    tbprodcomposicao: 'tbprodcomposicao',
    tbprodutos: 'tbprodutos',
    tbtiposprodutos: 'tbtiposprodutos',
    tbunidademedida: 'tbunidademedida',
    tbusuarios: 'tbusuarios'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.Args}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'tbestoque' | 'tbfornecedores' | 'tblocais' | 'tbmovimentos' | 'tbmovitens' | 'tbnf' | 'tbnfitens' | 'tbprodcomposicao' | 'tbprodutos' | 'tbtiposprodutos' | 'tbunidademedida' | 'tbusuarios'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      tbestoque: {
        payload: Prisma.$tbestoquePayload<ExtArgs>
        fields: Prisma.tbestoqueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbestoqueFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbestoquePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbestoqueFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbestoquePayload>
          }
          findFirst: {
            args: Prisma.tbestoqueFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbestoquePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbestoqueFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbestoquePayload>
          }
          findMany: {
            args: Prisma.tbestoqueFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbestoquePayload>[]
          }
          create: {
            args: Prisma.tbestoqueCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbestoquePayload>
          }
          createMany: {
            args: Prisma.tbestoqueCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbestoqueDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbestoquePayload>
          }
          update: {
            args: Prisma.tbestoqueUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbestoquePayload>
          }
          deleteMany: {
            args: Prisma.tbestoqueDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbestoqueUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbestoqueUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbestoquePayload>
          }
          aggregate: {
            args: Prisma.TbestoqueAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbestoque>
          }
          groupBy: {
            args: Prisma.tbestoqueGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbestoqueGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbestoqueCountArgs<ExtArgs>,
            result: $Utils.Optional<TbestoqueCountAggregateOutputType> | number
          }
        }
      }
      tbfornecedores: {
        payload: Prisma.$tbfornecedoresPayload<ExtArgs>
        fields: Prisma.tbfornecedoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbfornecedoresFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbfornecedoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbfornecedoresFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbfornecedoresPayload>
          }
          findFirst: {
            args: Prisma.tbfornecedoresFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbfornecedoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbfornecedoresFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbfornecedoresPayload>
          }
          findMany: {
            args: Prisma.tbfornecedoresFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbfornecedoresPayload>[]
          }
          create: {
            args: Prisma.tbfornecedoresCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbfornecedoresPayload>
          }
          createMany: {
            args: Prisma.tbfornecedoresCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbfornecedoresDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbfornecedoresPayload>
          }
          update: {
            args: Prisma.tbfornecedoresUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbfornecedoresPayload>
          }
          deleteMany: {
            args: Prisma.tbfornecedoresDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbfornecedoresUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbfornecedoresUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbfornecedoresPayload>
          }
          aggregate: {
            args: Prisma.TbfornecedoresAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbfornecedores>
          }
          groupBy: {
            args: Prisma.tbfornecedoresGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbfornecedoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbfornecedoresCountArgs<ExtArgs>,
            result: $Utils.Optional<TbfornecedoresCountAggregateOutputType> | number
          }
        }
      }
      tblocais: {
        payload: Prisma.$tblocaisPayload<ExtArgs>
        fields: Prisma.tblocaisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tblocaisFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tblocaisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tblocaisFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tblocaisPayload>
          }
          findFirst: {
            args: Prisma.tblocaisFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tblocaisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tblocaisFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tblocaisPayload>
          }
          findMany: {
            args: Prisma.tblocaisFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tblocaisPayload>[]
          }
          create: {
            args: Prisma.tblocaisCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tblocaisPayload>
          }
          createMany: {
            args: Prisma.tblocaisCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tblocaisDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tblocaisPayload>
          }
          update: {
            args: Prisma.tblocaisUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tblocaisPayload>
          }
          deleteMany: {
            args: Prisma.tblocaisDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tblocaisUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tblocaisUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tblocaisPayload>
          }
          aggregate: {
            args: Prisma.TblocaisAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTblocais>
          }
          groupBy: {
            args: Prisma.tblocaisGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TblocaisGroupByOutputType>[]
          }
          count: {
            args: Prisma.tblocaisCountArgs<ExtArgs>,
            result: $Utils.Optional<TblocaisCountAggregateOutputType> | number
          }
        }
      }
      tbmovimentos: {
        payload: Prisma.$tbmovimentosPayload<ExtArgs>
        fields: Prisma.tbmovimentosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbmovimentosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovimentosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbmovimentosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovimentosPayload>
          }
          findFirst: {
            args: Prisma.tbmovimentosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovimentosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbmovimentosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovimentosPayload>
          }
          findMany: {
            args: Prisma.tbmovimentosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovimentosPayload>[]
          }
          create: {
            args: Prisma.tbmovimentosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovimentosPayload>
          }
          createMany: {
            args: Prisma.tbmovimentosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbmovimentosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovimentosPayload>
          }
          update: {
            args: Prisma.tbmovimentosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovimentosPayload>
          }
          deleteMany: {
            args: Prisma.tbmovimentosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbmovimentosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbmovimentosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovimentosPayload>
          }
          aggregate: {
            args: Prisma.TbmovimentosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbmovimentos>
          }
          groupBy: {
            args: Prisma.tbmovimentosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbmovimentosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbmovimentosCountArgs<ExtArgs>,
            result: $Utils.Optional<TbmovimentosCountAggregateOutputType> | number
          }
        }
      }
      tbmovitens: {
        payload: Prisma.$tbmovitensPayload<ExtArgs>
        fields: Prisma.tbmovitensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbmovitensFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovitensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbmovitensFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovitensPayload>
          }
          findFirst: {
            args: Prisma.tbmovitensFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovitensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbmovitensFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovitensPayload>
          }
          findMany: {
            args: Prisma.tbmovitensFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovitensPayload>[]
          }
          create: {
            args: Prisma.tbmovitensCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovitensPayload>
          }
          createMany: {
            args: Prisma.tbmovitensCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbmovitensDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovitensPayload>
          }
          update: {
            args: Prisma.tbmovitensUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovitensPayload>
          }
          deleteMany: {
            args: Prisma.tbmovitensDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbmovitensUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbmovitensUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbmovitensPayload>
          }
          aggregate: {
            args: Prisma.TbmovitensAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbmovitens>
          }
          groupBy: {
            args: Prisma.tbmovitensGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbmovitensGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbmovitensCountArgs<ExtArgs>,
            result: $Utils.Optional<TbmovitensCountAggregateOutputType> | number
          }
        }
      }
      tbnf: {
        payload: Prisma.$tbnfPayload<ExtArgs>
        fields: Prisma.tbnfFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbnfFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbnfFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfPayload>
          }
          findFirst: {
            args: Prisma.tbnfFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbnfFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfPayload>
          }
          findMany: {
            args: Prisma.tbnfFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfPayload>[]
          }
          create: {
            args: Prisma.tbnfCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfPayload>
          }
          createMany: {
            args: Prisma.tbnfCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbnfDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfPayload>
          }
          update: {
            args: Prisma.tbnfUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfPayload>
          }
          deleteMany: {
            args: Prisma.tbnfDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbnfUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbnfUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfPayload>
          }
          aggregate: {
            args: Prisma.TbnfAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbnf>
          }
          groupBy: {
            args: Prisma.tbnfGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbnfGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbnfCountArgs<ExtArgs>,
            result: $Utils.Optional<TbnfCountAggregateOutputType> | number
          }
        }
      }
      tbnfitens: {
        payload: Prisma.$tbnfitensPayload<ExtArgs>
        fields: Prisma.tbnfitensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbnfitensFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfitensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbnfitensFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfitensPayload>
          }
          findFirst: {
            args: Prisma.tbnfitensFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfitensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbnfitensFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfitensPayload>
          }
          findMany: {
            args: Prisma.tbnfitensFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfitensPayload>[]
          }
          create: {
            args: Prisma.tbnfitensCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfitensPayload>
          }
          createMany: {
            args: Prisma.tbnfitensCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbnfitensDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfitensPayload>
          }
          update: {
            args: Prisma.tbnfitensUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfitensPayload>
          }
          deleteMany: {
            args: Prisma.tbnfitensDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbnfitensUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbnfitensUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbnfitensPayload>
          }
          aggregate: {
            args: Prisma.TbnfitensAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbnfitens>
          }
          groupBy: {
            args: Prisma.tbnfitensGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbnfitensGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbnfitensCountArgs<ExtArgs>,
            result: $Utils.Optional<TbnfitensCountAggregateOutputType> | number
          }
        }
      }
      tbprodcomposicao: {
        payload: Prisma.$tbprodcomposicaoPayload<ExtArgs>
        fields: Prisma.tbprodcomposicaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbprodcomposicaoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodcomposicaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbprodcomposicaoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodcomposicaoPayload>
          }
          findFirst: {
            args: Prisma.tbprodcomposicaoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodcomposicaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbprodcomposicaoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodcomposicaoPayload>
          }
          findMany: {
            args: Prisma.tbprodcomposicaoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodcomposicaoPayload>[]
          }
          create: {
            args: Prisma.tbprodcomposicaoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodcomposicaoPayload>
          }
          createMany: {
            args: Prisma.tbprodcomposicaoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbprodcomposicaoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodcomposicaoPayload>
          }
          update: {
            args: Prisma.tbprodcomposicaoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodcomposicaoPayload>
          }
          deleteMany: {
            args: Prisma.tbprodcomposicaoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbprodcomposicaoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbprodcomposicaoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodcomposicaoPayload>
          }
          aggregate: {
            args: Prisma.TbprodcomposicaoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbprodcomposicao>
          }
          groupBy: {
            args: Prisma.tbprodcomposicaoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbprodcomposicaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbprodcomposicaoCountArgs<ExtArgs>,
            result: $Utils.Optional<TbprodcomposicaoCountAggregateOutputType> | number
          }
        }
      }
      tbprodutos: {
        payload: Prisma.$tbprodutosPayload<ExtArgs>
        fields: Prisma.tbprodutosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbprodutosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodutosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbprodutosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodutosPayload>
          }
          findFirst: {
            args: Prisma.tbprodutosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodutosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbprodutosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodutosPayload>
          }
          findMany: {
            args: Prisma.tbprodutosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodutosPayload>[]
          }
          create: {
            args: Prisma.tbprodutosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodutosPayload>
          }
          createMany: {
            args: Prisma.tbprodutosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbprodutosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodutosPayload>
          }
          update: {
            args: Prisma.tbprodutosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodutosPayload>
          }
          deleteMany: {
            args: Prisma.tbprodutosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbprodutosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbprodutosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbprodutosPayload>
          }
          aggregate: {
            args: Prisma.TbprodutosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbprodutos>
          }
          groupBy: {
            args: Prisma.tbprodutosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbprodutosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbprodutosCountArgs<ExtArgs>,
            result: $Utils.Optional<TbprodutosCountAggregateOutputType> | number
          }
        }
      }
      tbtiposprodutos: {
        payload: Prisma.$tbtiposprodutosPayload<ExtArgs>
        fields: Prisma.tbtiposprodutosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbtiposprodutosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbtiposprodutosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbtiposprodutosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbtiposprodutosPayload>
          }
          findFirst: {
            args: Prisma.tbtiposprodutosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbtiposprodutosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbtiposprodutosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbtiposprodutosPayload>
          }
          findMany: {
            args: Prisma.tbtiposprodutosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbtiposprodutosPayload>[]
          }
          create: {
            args: Prisma.tbtiposprodutosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbtiposprodutosPayload>
          }
          createMany: {
            args: Prisma.tbtiposprodutosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbtiposprodutosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbtiposprodutosPayload>
          }
          update: {
            args: Prisma.tbtiposprodutosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbtiposprodutosPayload>
          }
          deleteMany: {
            args: Prisma.tbtiposprodutosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbtiposprodutosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbtiposprodutosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbtiposprodutosPayload>
          }
          aggregate: {
            args: Prisma.TbtiposprodutosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbtiposprodutos>
          }
          groupBy: {
            args: Prisma.tbtiposprodutosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbtiposprodutosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbtiposprodutosCountArgs<ExtArgs>,
            result: $Utils.Optional<TbtiposprodutosCountAggregateOutputType> | number
          }
        }
      }
      tbunidademedida: {
        payload: Prisma.$tbunidademedidaPayload<ExtArgs>
        fields: Prisma.tbunidademedidaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbunidademedidaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbunidademedidaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbunidademedidaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbunidademedidaPayload>
          }
          findFirst: {
            args: Prisma.tbunidademedidaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbunidademedidaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbunidademedidaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbunidademedidaPayload>
          }
          findMany: {
            args: Prisma.tbunidademedidaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbunidademedidaPayload>[]
          }
          create: {
            args: Prisma.tbunidademedidaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbunidademedidaPayload>
          }
          createMany: {
            args: Prisma.tbunidademedidaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbunidademedidaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbunidademedidaPayload>
          }
          update: {
            args: Prisma.tbunidademedidaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbunidademedidaPayload>
          }
          deleteMany: {
            args: Prisma.tbunidademedidaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbunidademedidaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbunidademedidaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbunidademedidaPayload>
          }
          aggregate: {
            args: Prisma.TbunidademedidaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbunidademedida>
          }
          groupBy: {
            args: Prisma.tbunidademedidaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbunidademedidaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbunidademedidaCountArgs<ExtArgs>,
            result: $Utils.Optional<TbunidademedidaCountAggregateOutputType> | number
          }
        }
      }
      tbusuarios: {
        payload: Prisma.$tbusuariosPayload<ExtArgs>
        fields: Prisma.tbusuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbusuariosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbusuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbusuariosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbusuariosPayload>
          }
          findFirst: {
            args: Prisma.tbusuariosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbusuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbusuariosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbusuariosPayload>
          }
          findMany: {
            args: Prisma.tbusuariosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbusuariosPayload>[]
          }
          create: {
            args: Prisma.tbusuariosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbusuariosPayload>
          }
          createMany: {
            args: Prisma.tbusuariosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbusuariosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbusuariosPayload>
          }
          update: {
            args: Prisma.tbusuariosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbusuariosPayload>
          }
          deleteMany: {
            args: Prisma.tbusuariosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbusuariosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbusuariosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbusuariosPayload>
          }
          aggregate: {
            args: Prisma.TbusuariosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbusuarios>
          }
          groupBy: {
            args: Prisma.tbusuariosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TbusuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbusuariosCountArgs<ExtArgs>,
            result: $Utils.Optional<TbusuariosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources

    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type TbfornecedoresCountOutputType
   */

  export type TbfornecedoresCountOutputType = {
    tbmovimentos: number
    tbnf: number
  }

  export type TbfornecedoresCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbmovimentos?: boolean | TbfornecedoresCountOutputTypeCountTbmovimentosArgs
    tbnf?: boolean | TbfornecedoresCountOutputTypeCountTbnfArgs
  }

  // Custom InputTypes

  /**
   * TbfornecedoresCountOutputType without action
   */
  export type TbfornecedoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbfornecedoresCountOutputType
     */
    select?: TbfornecedoresCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbfornecedoresCountOutputType without action
   */
  export type TbfornecedoresCountOutputTypeCountTbmovimentosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbmovimentosWhereInput
  }


  /**
   * TbfornecedoresCountOutputType without action
   */
  export type TbfornecedoresCountOutputTypeCountTbnfArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbnfWhereInput
  }



  /**
   * Count Type TblocaisCountOutputType
   */

  export type TblocaisCountOutputType = {
    tbestoque: number
    tbmovitens: number
  }

  export type TblocaisCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbestoque?: boolean | TblocaisCountOutputTypeCountTbestoqueArgs
    tbmovitens?: boolean | TblocaisCountOutputTypeCountTbmovitensArgs
  }

  // Custom InputTypes

  /**
   * TblocaisCountOutputType without action
   */
  export type TblocaisCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TblocaisCountOutputType
     */
    select?: TblocaisCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TblocaisCountOutputType without action
   */
  export type TblocaisCountOutputTypeCountTbestoqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbestoqueWhereInput
  }


  /**
   * TblocaisCountOutputType without action
   */
  export type TblocaisCountOutputTypeCountTbmovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbmovitensWhereInput
  }



  /**
   * Count Type TbmovimentosCountOutputType
   */

  export type TbmovimentosCountOutputType = {
    tbmovitens: number
  }

  export type TbmovimentosCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbmovitens?: boolean | TbmovimentosCountOutputTypeCountTbmovitensArgs
  }

  // Custom InputTypes

  /**
   * TbmovimentosCountOutputType without action
   */
  export type TbmovimentosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbmovimentosCountOutputType
     */
    select?: TbmovimentosCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbmovimentosCountOutputType without action
   */
  export type TbmovimentosCountOutputTypeCountTbmovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbmovitensWhereInput
  }



  /**
   * Count Type TbmovitensCountOutputType
   */

  export type TbmovitensCountOutputType = {
    tbnfitens: number
  }

  export type TbmovitensCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbnfitens?: boolean | TbmovitensCountOutputTypeCountTbnfitensArgs
  }

  // Custom InputTypes

  /**
   * TbmovitensCountOutputType without action
   */
  export type TbmovitensCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbmovitensCountOutputType
     */
    select?: TbmovitensCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbmovitensCountOutputType without action
   */
  export type TbmovitensCountOutputTypeCountTbnfitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbnfitensWhereInput
  }



  /**
   * Count Type TbnfCountOutputType
   */

  export type TbnfCountOutputType = {
    tbnfitens: number
  }

  export type TbnfCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbnfitens?: boolean | TbnfCountOutputTypeCountTbnfitensArgs
  }

  // Custom InputTypes

  /**
   * TbnfCountOutputType without action
   */
  export type TbnfCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbnfCountOutputType
     */
    select?: TbnfCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbnfCountOutputType without action
   */
  export type TbnfCountOutputTypeCountTbnfitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbnfitensWhereInput
  }



  /**
   * Count Type TbprodutosCountOutputType
   */

  export type TbprodutosCountOutputType = {
    tbestoque: number
    tbmovitens: number
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos: number
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos: number
  }

  export type TbprodutosCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbestoque?: boolean | TbprodutosCountOutputTypeCountTbestoqueArgs
    tbmovitens?: boolean | TbprodutosCountOutputTypeCountTbmovitensArgs
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: boolean | TbprodutosCountOutputTypeCountTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosArgs
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: boolean | TbprodutosCountOutputTypeCountTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosArgs
  }

  // Custom InputTypes

  /**
   * TbprodutosCountOutputType without action
   */
  export type TbprodutosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbprodutosCountOutputType
     */
    select?: TbprodutosCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbprodutosCountOutputType without action
   */
  export type TbprodutosCountOutputTypeCountTbestoqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbestoqueWhereInput
  }


  /**
   * TbprodutosCountOutputType without action
   */
  export type TbprodutosCountOutputTypeCountTbmovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbmovitensWhereInput
  }


  /**
   * TbprodutosCountOutputType without action
   */
  export type TbprodutosCountOutputTypeCountTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbprodcomposicaoWhereInput
  }


  /**
   * TbprodutosCountOutputType without action
   */
  export type TbprodutosCountOutputTypeCountTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbprodcomposicaoWhereInput
  }



  /**
   * Count Type TbtiposprodutosCountOutputType
   */

  export type TbtiposprodutosCountOutputType = {
    tbprodutos: number
  }

  export type TbtiposprodutosCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbprodutos?: boolean | TbtiposprodutosCountOutputTypeCountTbprodutosArgs
  }

  // Custom InputTypes

  /**
   * TbtiposprodutosCountOutputType without action
   */
  export type TbtiposprodutosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbtiposprodutosCountOutputType
     */
    select?: TbtiposprodutosCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbtiposprodutosCountOutputType without action
   */
  export type TbtiposprodutosCountOutputTypeCountTbprodutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbprodutosWhereInput
  }



  /**
   * Count Type TbunidademedidaCountOutputType
   */

  export type TbunidademedidaCountOutputType = {
    tbprodutos: number
  }

  export type TbunidademedidaCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbprodutos?: boolean | TbunidademedidaCountOutputTypeCountTbprodutosArgs
  }

  // Custom InputTypes

  /**
   * TbunidademedidaCountOutputType without action
   */
  export type TbunidademedidaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbunidademedidaCountOutputType
     */
    select?: TbunidademedidaCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbunidademedidaCountOutputType without action
   */
  export type TbunidademedidaCountOutputTypeCountTbprodutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbprodutosWhereInput
  }



  /**
   * Count Type TbusuariosCountOutputType
   */

  export type TbusuariosCountOutputType = {
    tbmovimentos: number
    tbnf: number
  }

  export type TbusuariosCountOutputTypeSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbmovimentos?: boolean | TbusuariosCountOutputTypeCountTbmovimentosArgs
    tbnf?: boolean | TbusuariosCountOutputTypeCountTbnfArgs
  }

  // Custom InputTypes

  /**
   * TbusuariosCountOutputType without action
   */
  export type TbusuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TbusuariosCountOutputType
     */
    select?: TbusuariosCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * TbusuariosCountOutputType without action
   */
  export type TbusuariosCountOutputTypeCountTbmovimentosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbmovimentosWhereInput
  }


  /**
   * TbusuariosCountOutputType without action
   */
  export type TbusuariosCountOutputTypeCountTbnfArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbnfWhereInput
  }



  /**
   * Models
   */

  /**
   * Model tbestoque
   */

  export type AggregateTbestoque = {
    _count: TbestoqueCountAggregateOutputType | null
    _avg: TbestoqueAvgAggregateOutputType | null
    _sum: TbestoqueSumAggregateOutputType | null
    _min: TbestoqueMinAggregateOutputType | null
    _max: TbestoqueMaxAggregateOutputType | null
  }

  export type TbestoqueAvgAggregateOutputType = {
    idestoque: number | null
    idproduto: number | null
    idlocal: number | null
    quantidade: Decimal | null
  }

  export type TbestoqueSumAggregateOutputType = {
    idestoque: number | null
    idproduto: number | null
    idlocal: number | null
    quantidade: Decimal | null
  }

  export type TbestoqueMinAggregateOutputType = {
    idestoque: number | null
    idproduto: number | null
    idlocal: number | null
    quantidade: Decimal | null
    dtinc: Date | null
  }

  export type TbestoqueMaxAggregateOutputType = {
    idestoque: number | null
    idproduto: number | null
    idlocal: number | null
    quantidade: Decimal | null
    dtinc: Date | null
  }

  export type TbestoqueCountAggregateOutputType = {
    idestoque: number
    idproduto: number
    idlocal: number
    quantidade: number
    dtinc: number
    _all: number
  }


  export type TbestoqueAvgAggregateInputType = {
    idestoque?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
  }

  export type TbestoqueSumAggregateInputType = {
    idestoque?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
  }

  export type TbestoqueMinAggregateInputType = {
    idestoque?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
    dtinc?: true
  }

  export type TbestoqueMaxAggregateInputType = {
    idestoque?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
    dtinc?: true
  }

  export type TbestoqueCountAggregateInputType = {
    idestoque?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
    dtinc?: true
    _all?: true
  }

  export type TbestoqueAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbestoque to aggregate.
     */
    where?: tbestoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbestoques to fetch.
     */
    orderBy?: tbestoqueOrderByWithRelationInput | tbestoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbestoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbestoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbestoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbestoques
    **/
    _count?: true | TbestoqueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbestoqueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbestoqueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbestoqueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbestoqueMaxAggregateInputType
  }

  export type GetTbestoqueAggregateType<T extends TbestoqueAggregateArgs> = {
        [P in keyof T & keyof AggregateTbestoque]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbestoque[P]>
      : GetScalarType<T[P], AggregateTbestoque[P]>
  }




  export type tbestoqueGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbestoqueWhereInput
    orderBy?: tbestoqueOrderByWithAggregationInput | tbestoqueOrderByWithAggregationInput[]
    by: TbestoqueScalarFieldEnum[] | TbestoqueScalarFieldEnum
    having?: tbestoqueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbestoqueCountAggregateInputType | true
    _avg?: TbestoqueAvgAggregateInputType
    _sum?: TbestoqueSumAggregateInputType
    _min?: TbestoqueMinAggregateInputType
    _max?: TbestoqueMaxAggregateInputType
  }

  export type TbestoqueGroupByOutputType = {
    idestoque: number
    idproduto: number
    idlocal: number | null
    quantidade: Decimal | null
    dtinc: Date | null
    _count: TbestoqueCountAggregateOutputType | null
    _avg: TbestoqueAvgAggregateOutputType | null
    _sum: TbestoqueSumAggregateOutputType | null
    _min: TbestoqueMinAggregateOutputType | null
    _max: TbestoqueMaxAggregateOutputType | null
  }

  type GetTbestoqueGroupByPayload<T extends tbestoqueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbestoqueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbestoqueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbestoqueGroupByOutputType[P]>
            : GetScalarType<T[P], TbestoqueGroupByOutputType[P]>
        }
      >
    >


  export type tbestoqueSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idestoque?: boolean
    idproduto?: boolean
    idlocal?: boolean
    quantidade?: boolean
    dtinc?: boolean
    tblocais?: boolean | tbestoque$tblocaisArgs<ExtArgs>
    tbprodutos?: boolean | tbprodutosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbestoque"]>

  export type tbestoqueSelectScalar = {
    idestoque?: boolean
    idproduto?: boolean
    idlocal?: boolean
    quantidade?: boolean
    dtinc?: boolean
  }

  export type tbestoqueInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tblocais?: boolean | tbestoque$tblocaisArgs<ExtArgs>
    tbprodutos?: boolean | tbprodutosDefaultArgs<ExtArgs>
  }


  export type $tbestoquePayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbestoque"
    objects: {
      tblocais: Prisma.$tblocaisPayload<ExtArgs> | null
      tbprodutos: Prisma.$tbprodutosPayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      idestoque: number
      idproduto: number
      idlocal: number | null
      quantidade: Prisma.Decimal | null
      dtinc: Date | null
    }, ExtArgs["result"]["tbestoque"]>
    composites: {}
  }


  type tbestoqueGetPayload<S extends boolean | null | undefined | tbestoqueDefaultArgs> = $Result.GetResult<Prisma.$tbestoquePayload, S>

  type tbestoqueCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbestoqueFindManyArgs, 'select' | 'include'> & {
      select?: TbestoqueCountAggregateInputType | true
    }

  export interface tbestoqueDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbestoque'], meta: { name: 'tbestoque' } }
    /**
     * Find zero or one Tbestoque that matches the filter.
     * @param {tbestoqueFindUniqueArgs} args - Arguments to find a Tbestoque
     * @example
     * // Get one Tbestoque
     * const tbestoque = await prisma.tbestoque.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbestoqueFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbestoqueFindUniqueArgs<ExtArgs>>
    ): Prisma__tbestoqueClient<$Result.GetResult<Prisma.$tbestoquePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbestoque that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbestoqueFindUniqueOrThrowArgs} args - Arguments to find a Tbestoque
     * @example
     * // Get one Tbestoque
     * const tbestoque = await prisma.tbestoque.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbestoqueFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbestoqueFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbestoqueClient<$Result.GetResult<Prisma.$tbestoquePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbestoque that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbestoqueFindFirstArgs} args - Arguments to find a Tbestoque
     * @example
     * // Get one Tbestoque
     * const tbestoque = await prisma.tbestoque.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbestoqueFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbestoqueFindFirstArgs<ExtArgs>>
    ): Prisma__tbestoqueClient<$Result.GetResult<Prisma.$tbestoquePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbestoque that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbestoqueFindFirstOrThrowArgs} args - Arguments to find a Tbestoque
     * @example
     * // Get one Tbestoque
     * const tbestoque = await prisma.tbestoque.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbestoqueFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbestoqueFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbestoqueClient<$Result.GetResult<Prisma.$tbestoquePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbestoques that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbestoqueFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbestoques
     * const tbestoques = await prisma.tbestoque.findMany()
     * 
     * // Get first 10 Tbestoques
     * const tbestoques = await prisma.tbestoque.findMany({ take: 10 })
     * 
     * // Only select the `idestoque`
     * const tbestoqueWithIdestoqueOnly = await prisma.tbestoque.findMany({ select: { idestoque: true } })
     * 
    **/
    findMany<T extends tbestoqueFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbestoqueFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbestoquePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbestoque.
     * @param {tbestoqueCreateArgs} args - Arguments to create a Tbestoque.
     * @example
     * // Create one Tbestoque
     * const Tbestoque = await prisma.tbestoque.create({
     *   data: {
     *     // ... data to create a Tbestoque
     *   }
     * })
     * 
    **/
    create<T extends tbestoqueCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbestoqueCreateArgs<ExtArgs>>
    ): Prisma__tbestoqueClient<$Result.GetResult<Prisma.$tbestoquePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbestoques.
     *     @param {tbestoqueCreateManyArgs} args - Arguments to create many Tbestoques.
     *     @example
     *     // Create many Tbestoques
     *     const tbestoque = await prisma.tbestoque.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbestoqueCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbestoqueCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbestoque.
     * @param {tbestoqueDeleteArgs} args - Arguments to delete one Tbestoque.
     * @example
     * // Delete one Tbestoque
     * const Tbestoque = await prisma.tbestoque.delete({
     *   where: {
     *     // ... filter to delete one Tbestoque
     *   }
     * })
     * 
    **/
    delete<T extends tbestoqueDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbestoqueDeleteArgs<ExtArgs>>
    ): Prisma__tbestoqueClient<$Result.GetResult<Prisma.$tbestoquePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbestoque.
     * @param {tbestoqueUpdateArgs} args - Arguments to update one Tbestoque.
     * @example
     * // Update one Tbestoque
     * const tbestoque = await prisma.tbestoque.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbestoqueUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbestoqueUpdateArgs<ExtArgs>>
    ): Prisma__tbestoqueClient<$Result.GetResult<Prisma.$tbestoquePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbestoques.
     * @param {tbestoqueDeleteManyArgs} args - Arguments to filter Tbestoques to delete.
     * @example
     * // Delete a few Tbestoques
     * const { count } = await prisma.tbestoque.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbestoqueDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbestoqueDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbestoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbestoqueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbestoques
     * const tbestoque = await prisma.tbestoque.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbestoqueUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbestoqueUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbestoque.
     * @param {tbestoqueUpsertArgs} args - Arguments to update or create a Tbestoque.
     * @example
     * // Update or create a Tbestoque
     * const tbestoque = await prisma.tbestoque.upsert({
     *   create: {
     *     // ... data to create a Tbestoque
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbestoque we want to update
     *   }
     * })
    **/
    upsert<T extends tbestoqueUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbestoqueUpsertArgs<ExtArgs>>
    ): Prisma__tbestoqueClient<$Result.GetResult<Prisma.$tbestoquePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbestoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbestoqueCountArgs} args - Arguments to filter Tbestoques to count.
     * @example
     * // Count the number of Tbestoques
     * const count = await prisma.tbestoque.count({
     *   where: {
     *     // ... the filter for the Tbestoques we want to count
     *   }
     * })
    **/
    count<T extends tbestoqueCountArgs>(
      args?: Subset<T, tbestoqueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbestoqueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbestoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbestoqueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbestoqueAggregateArgs>(args: Subset<T, TbestoqueAggregateArgs>): Prisma.PrismaPromise<GetTbestoqueAggregateType<T>>

    /**
     * Group by Tbestoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbestoqueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbestoqueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbestoqueGroupByArgs['orderBy'] }
        : { orderBy?: tbestoqueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbestoqueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbestoqueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbestoque model
   */
  readonly fields: tbestoqueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbestoque.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbestoqueClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tblocais<T extends tbestoque$tblocaisArgs<ExtArgs> = {}>(args?: Subset<T, tbestoque$tblocaisArgs<ExtArgs>>): Prisma__tblocaisClient<$Result.GetResult<Prisma.$tblocaisPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbprodutos<T extends tbprodutosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbprodutosDefaultArgs<ExtArgs>>): Prisma__tbprodutosClient<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbestoque model
   */ 
  interface tbestoqueFieldRefs {
    readonly idestoque: FieldRef<"tbestoque", 'Int'>
    readonly idproduto: FieldRef<"tbestoque", 'Int'>
    readonly idlocal: FieldRef<"tbestoque", 'Int'>
    readonly quantidade: FieldRef<"tbestoque", 'Decimal'>
    readonly dtinc: FieldRef<"tbestoque", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * tbestoque findUnique
   */
  export type tbestoqueFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbestoque
     */
    select?: tbestoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbestoqueInclude<ExtArgs> | null
    /**
     * Filter, which tbestoque to fetch.
     */
    where: tbestoqueWhereUniqueInput
  }


  /**
   * tbestoque findUniqueOrThrow
   */
  export type tbestoqueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbestoque
     */
    select?: tbestoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbestoqueInclude<ExtArgs> | null
    /**
     * Filter, which tbestoque to fetch.
     */
    where: tbestoqueWhereUniqueInput
  }


  /**
   * tbestoque findFirst
   */
  export type tbestoqueFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbestoque
     */
    select?: tbestoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbestoqueInclude<ExtArgs> | null
    /**
     * Filter, which tbestoque to fetch.
     */
    where?: tbestoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbestoques to fetch.
     */
    orderBy?: tbestoqueOrderByWithRelationInput | tbestoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbestoques.
     */
    cursor?: tbestoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbestoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbestoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbestoques.
     */
    distinct?: TbestoqueScalarFieldEnum | TbestoqueScalarFieldEnum[]
  }


  /**
   * tbestoque findFirstOrThrow
   */
  export type tbestoqueFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbestoque
     */
    select?: tbestoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbestoqueInclude<ExtArgs> | null
    /**
     * Filter, which tbestoque to fetch.
     */
    where?: tbestoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbestoques to fetch.
     */
    orderBy?: tbestoqueOrderByWithRelationInput | tbestoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbestoques.
     */
    cursor?: tbestoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbestoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbestoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbestoques.
     */
    distinct?: TbestoqueScalarFieldEnum | TbestoqueScalarFieldEnum[]
  }


  /**
   * tbestoque findMany
   */
  export type tbestoqueFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbestoque
     */
    select?: tbestoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbestoqueInclude<ExtArgs> | null
    /**
     * Filter, which tbestoques to fetch.
     */
    where?: tbestoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbestoques to fetch.
     */
    orderBy?: tbestoqueOrderByWithRelationInput | tbestoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbestoques.
     */
    cursor?: tbestoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbestoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbestoques.
     */
    skip?: number
    distinct?: TbestoqueScalarFieldEnum | TbestoqueScalarFieldEnum[]
  }


  /**
   * tbestoque create
   */
  export type tbestoqueCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbestoque
     */
    select?: tbestoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbestoqueInclude<ExtArgs> | null
    /**
     * The data needed to create a tbestoque.
     */
    data: XOR<tbestoqueCreateInput, tbestoqueUncheckedCreateInput>
  }


  /**
   * tbestoque createMany
   */
  export type tbestoqueCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbestoques.
     */
    data: tbestoqueCreateManyInput | tbestoqueCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbestoque update
   */
  export type tbestoqueUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbestoque
     */
    select?: tbestoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbestoqueInclude<ExtArgs> | null
    /**
     * The data needed to update a tbestoque.
     */
    data: XOR<tbestoqueUpdateInput, tbestoqueUncheckedUpdateInput>
    /**
     * Choose, which tbestoque to update.
     */
    where: tbestoqueWhereUniqueInput
  }


  /**
   * tbestoque updateMany
   */
  export type tbestoqueUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbestoques.
     */
    data: XOR<tbestoqueUpdateManyMutationInput, tbestoqueUncheckedUpdateManyInput>
    /**
     * Filter which tbestoques to update
     */
    where?: tbestoqueWhereInput
  }


  /**
   * tbestoque upsert
   */
  export type tbestoqueUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbestoque
     */
    select?: tbestoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbestoqueInclude<ExtArgs> | null
    /**
     * The filter to search for the tbestoque to update in case it exists.
     */
    where: tbestoqueWhereUniqueInput
    /**
     * In case the tbestoque found by the `where` argument doesn't exist, create a new tbestoque with this data.
     */
    create: XOR<tbestoqueCreateInput, tbestoqueUncheckedCreateInput>
    /**
     * In case the tbestoque was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbestoqueUpdateInput, tbestoqueUncheckedUpdateInput>
  }


  /**
   * tbestoque delete
   */
  export type tbestoqueDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbestoque
     */
    select?: tbestoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbestoqueInclude<ExtArgs> | null
    /**
     * Filter which tbestoque to delete.
     */
    where: tbestoqueWhereUniqueInput
  }


  /**
   * tbestoque deleteMany
   */
  export type tbestoqueDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbestoques to delete
     */
    where?: tbestoqueWhereInput
  }


  /**
   * tbestoque.tblocais
   */
  export type tbestoque$tblocaisArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tblocais
     */
    select?: tblocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tblocaisInclude<ExtArgs> | null
    where?: tblocaisWhereInput
  }


  /**
   * tbestoque without action
   */
  export type tbestoqueDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbestoque
     */
    select?: tbestoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbestoqueInclude<ExtArgs> | null
  }



  /**
   * Model tbfornecedores
   */

  export type AggregateTbfornecedores = {
    _count: TbfornecedoresCountAggregateOutputType | null
    _avg: TbfornecedoresAvgAggregateOutputType | null
    _sum: TbfornecedoresSumAggregateOutputType | null
    _min: TbfornecedoresMinAggregateOutputType | null
    _max: TbfornecedoresMaxAggregateOutputType | null
  }

  export type TbfornecedoresAvgAggregateOutputType = {
    idfor: number | null
    numero: number | null
  }

  export type TbfornecedoresSumAggregateOutputType = {
    idfor: number | null
    numero: number | null
  }

  export type TbfornecedoresMinAggregateOutputType = {
    idfor: number | null
    nomefor: string | null
    fisjur: string | null
    cnpjcpf: string | null
    telefone: string | null
    cep: string | null
    cidade: string | null
    rua: string | null
    bairro: string | null
    numero: number | null
    complemento: string | null
    email: string | null
  }

  export type TbfornecedoresMaxAggregateOutputType = {
    idfor: number | null
    nomefor: string | null
    fisjur: string | null
    cnpjcpf: string | null
    telefone: string | null
    cep: string | null
    cidade: string | null
    rua: string | null
    bairro: string | null
    numero: number | null
    complemento: string | null
    email: string | null
  }

  export type TbfornecedoresCountAggregateOutputType = {
    idfor: number
    nomefor: number
    fisjur: number
    cnpjcpf: number
    telefone: number
    cep: number
    cidade: number
    rua: number
    bairro: number
    numero: number
    complemento: number
    email: number
    _all: number
  }


  export type TbfornecedoresAvgAggregateInputType = {
    idfor?: true
    numero?: true
  }

  export type TbfornecedoresSumAggregateInputType = {
    idfor?: true
    numero?: true
  }

  export type TbfornecedoresMinAggregateInputType = {
    idfor?: true
    nomefor?: true
    fisjur?: true
    cnpjcpf?: true
    telefone?: true
    cep?: true
    cidade?: true
    rua?: true
    bairro?: true
    numero?: true
    complemento?: true
    email?: true
  }

  export type TbfornecedoresMaxAggregateInputType = {
    idfor?: true
    nomefor?: true
    fisjur?: true
    cnpjcpf?: true
    telefone?: true
    cep?: true
    cidade?: true
    rua?: true
    bairro?: true
    numero?: true
    complemento?: true
    email?: true
  }

  export type TbfornecedoresCountAggregateInputType = {
    idfor?: true
    nomefor?: true
    fisjur?: true
    cnpjcpf?: true
    telefone?: true
    cep?: true
    cidade?: true
    rua?: true
    bairro?: true
    numero?: true
    complemento?: true
    email?: true
    _all?: true
  }

  export type TbfornecedoresAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbfornecedores to aggregate.
     */
    where?: tbfornecedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbfornecedores to fetch.
     */
    orderBy?: tbfornecedoresOrderByWithRelationInput | tbfornecedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbfornecedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbfornecedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbfornecedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbfornecedores
    **/
    _count?: true | TbfornecedoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbfornecedoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbfornecedoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbfornecedoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbfornecedoresMaxAggregateInputType
  }

  export type GetTbfornecedoresAggregateType<T extends TbfornecedoresAggregateArgs> = {
        [P in keyof T & keyof AggregateTbfornecedores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbfornecedores[P]>
      : GetScalarType<T[P], AggregateTbfornecedores[P]>
  }




  export type tbfornecedoresGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbfornecedoresWhereInput
    orderBy?: tbfornecedoresOrderByWithAggregationInput | tbfornecedoresOrderByWithAggregationInput[]
    by: TbfornecedoresScalarFieldEnum[] | TbfornecedoresScalarFieldEnum
    having?: tbfornecedoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbfornecedoresCountAggregateInputType | true
    _avg?: TbfornecedoresAvgAggregateInputType
    _sum?: TbfornecedoresSumAggregateInputType
    _min?: TbfornecedoresMinAggregateInputType
    _max?: TbfornecedoresMaxAggregateInputType
  }

  export type TbfornecedoresGroupByOutputType = {
    idfor: number
    nomefor: string | null
    fisjur: string | null
    cnpjcpf: string | null
    telefone: string | null
    cep: string | null
    cidade: string | null
    rua: string | null
    bairro: string | null
    numero: number | null
    complemento: string | null
    email: string | null
    _count: TbfornecedoresCountAggregateOutputType | null
    _avg: TbfornecedoresAvgAggregateOutputType | null
    _sum: TbfornecedoresSumAggregateOutputType | null
    _min: TbfornecedoresMinAggregateOutputType | null
    _max: TbfornecedoresMaxAggregateOutputType | null
  }

  type GetTbfornecedoresGroupByPayload<T extends tbfornecedoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbfornecedoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbfornecedoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbfornecedoresGroupByOutputType[P]>
            : GetScalarType<T[P], TbfornecedoresGroupByOutputType[P]>
        }
      >
    >


  export type tbfornecedoresSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idfor?: boolean
    nomefor?: boolean
    fisjur?: boolean
    cnpjcpf?: boolean
    telefone?: boolean
    cep?: boolean
    cidade?: boolean
    rua?: boolean
    bairro?: boolean
    numero?: boolean
    complemento?: boolean
    email?: boolean
    tbmovimentos?: boolean | tbfornecedores$tbmovimentosArgs<ExtArgs>
    tbnf?: boolean | tbfornecedores$tbnfArgs<ExtArgs>
    _count?: boolean | TbfornecedoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbfornecedores"]>

  export type tbfornecedoresSelectScalar = {
    idfor?: boolean
    nomefor?: boolean
    fisjur?: boolean
    cnpjcpf?: boolean
    telefone?: boolean
    cep?: boolean
    cidade?: boolean
    rua?: boolean
    bairro?: boolean
    numero?: boolean
    complemento?: boolean
    email?: boolean
  }

  export type tbfornecedoresInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbmovimentos?: boolean | tbfornecedores$tbmovimentosArgs<ExtArgs>
    tbnf?: boolean | tbfornecedores$tbnfArgs<ExtArgs>
    _count?: boolean | TbfornecedoresCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbfornecedoresPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbfornecedores"
    objects: {
      tbmovimentos: Prisma.$tbmovimentosPayload<ExtArgs>[]
      tbnf: Prisma.$tbnfPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idfor: number
      nomefor: string | null
      fisjur: string | null
      cnpjcpf: string | null
      telefone: string | null
      cep: string | null
      cidade: string | null
      rua: string | null
      bairro: string | null
      numero: number | null
      complemento: string | null
      email: string | null
    }, ExtArgs["result"]["tbfornecedores"]>
    composites: {}
  }


  type tbfornecedoresGetPayload<S extends boolean | null | undefined | tbfornecedoresDefaultArgs> = $Result.GetResult<Prisma.$tbfornecedoresPayload, S>

  type tbfornecedoresCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbfornecedoresFindManyArgs, 'select' | 'include'> & {
      select?: TbfornecedoresCountAggregateInputType | true
    }

  export interface tbfornecedoresDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbfornecedores'], meta: { name: 'tbfornecedores' } }
    /**
     * Find zero or one Tbfornecedores that matches the filter.
     * @param {tbfornecedoresFindUniqueArgs} args - Arguments to find a Tbfornecedores
     * @example
     * // Get one Tbfornecedores
     * const tbfornecedores = await prisma.tbfornecedores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbfornecedoresFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbfornecedoresFindUniqueArgs<ExtArgs>>
    ): Prisma__tbfornecedoresClient<$Result.GetResult<Prisma.$tbfornecedoresPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbfornecedores that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbfornecedoresFindUniqueOrThrowArgs} args - Arguments to find a Tbfornecedores
     * @example
     * // Get one Tbfornecedores
     * const tbfornecedores = await prisma.tbfornecedores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbfornecedoresFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbfornecedoresFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbfornecedoresClient<$Result.GetResult<Prisma.$tbfornecedoresPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbfornecedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbfornecedoresFindFirstArgs} args - Arguments to find a Tbfornecedores
     * @example
     * // Get one Tbfornecedores
     * const tbfornecedores = await prisma.tbfornecedores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbfornecedoresFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbfornecedoresFindFirstArgs<ExtArgs>>
    ): Prisma__tbfornecedoresClient<$Result.GetResult<Prisma.$tbfornecedoresPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbfornecedores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbfornecedoresFindFirstOrThrowArgs} args - Arguments to find a Tbfornecedores
     * @example
     * // Get one Tbfornecedores
     * const tbfornecedores = await prisma.tbfornecedores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbfornecedoresFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbfornecedoresFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbfornecedoresClient<$Result.GetResult<Prisma.$tbfornecedoresPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbfornecedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbfornecedoresFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbfornecedores
     * const tbfornecedores = await prisma.tbfornecedores.findMany()
     * 
     * // Get first 10 Tbfornecedores
     * const tbfornecedores = await prisma.tbfornecedores.findMany({ take: 10 })
     * 
     * // Only select the `idfor`
     * const tbfornecedoresWithIdforOnly = await prisma.tbfornecedores.findMany({ select: { idfor: true } })
     * 
    **/
    findMany<T extends tbfornecedoresFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbfornecedoresFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbfornecedoresPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbfornecedores.
     * @param {tbfornecedoresCreateArgs} args - Arguments to create a Tbfornecedores.
     * @example
     * // Create one Tbfornecedores
     * const Tbfornecedores = await prisma.tbfornecedores.create({
     *   data: {
     *     // ... data to create a Tbfornecedores
     *   }
     * })
     * 
    **/
    create<T extends tbfornecedoresCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbfornecedoresCreateArgs<ExtArgs>>
    ): Prisma__tbfornecedoresClient<$Result.GetResult<Prisma.$tbfornecedoresPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbfornecedores.
     *     @param {tbfornecedoresCreateManyArgs} args - Arguments to create many Tbfornecedores.
     *     @example
     *     // Create many Tbfornecedores
     *     const tbfornecedores = await prisma.tbfornecedores.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbfornecedoresCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbfornecedoresCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbfornecedores.
     * @param {tbfornecedoresDeleteArgs} args - Arguments to delete one Tbfornecedores.
     * @example
     * // Delete one Tbfornecedores
     * const Tbfornecedores = await prisma.tbfornecedores.delete({
     *   where: {
     *     // ... filter to delete one Tbfornecedores
     *   }
     * })
     * 
    **/
    delete<T extends tbfornecedoresDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbfornecedoresDeleteArgs<ExtArgs>>
    ): Prisma__tbfornecedoresClient<$Result.GetResult<Prisma.$tbfornecedoresPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbfornecedores.
     * @param {tbfornecedoresUpdateArgs} args - Arguments to update one Tbfornecedores.
     * @example
     * // Update one Tbfornecedores
     * const tbfornecedores = await prisma.tbfornecedores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbfornecedoresUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbfornecedoresUpdateArgs<ExtArgs>>
    ): Prisma__tbfornecedoresClient<$Result.GetResult<Prisma.$tbfornecedoresPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbfornecedores.
     * @param {tbfornecedoresDeleteManyArgs} args - Arguments to filter Tbfornecedores to delete.
     * @example
     * // Delete a few Tbfornecedores
     * const { count } = await prisma.tbfornecedores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbfornecedoresDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbfornecedoresDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbfornecedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbfornecedoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbfornecedores
     * const tbfornecedores = await prisma.tbfornecedores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbfornecedoresUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbfornecedoresUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbfornecedores.
     * @param {tbfornecedoresUpsertArgs} args - Arguments to update or create a Tbfornecedores.
     * @example
     * // Update or create a Tbfornecedores
     * const tbfornecedores = await prisma.tbfornecedores.upsert({
     *   create: {
     *     // ... data to create a Tbfornecedores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbfornecedores we want to update
     *   }
     * })
    **/
    upsert<T extends tbfornecedoresUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbfornecedoresUpsertArgs<ExtArgs>>
    ): Prisma__tbfornecedoresClient<$Result.GetResult<Prisma.$tbfornecedoresPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbfornecedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbfornecedoresCountArgs} args - Arguments to filter Tbfornecedores to count.
     * @example
     * // Count the number of Tbfornecedores
     * const count = await prisma.tbfornecedores.count({
     *   where: {
     *     // ... the filter for the Tbfornecedores we want to count
     *   }
     * })
    **/
    count<T extends tbfornecedoresCountArgs>(
      args?: Subset<T, tbfornecedoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbfornecedoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbfornecedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbfornecedoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbfornecedoresAggregateArgs>(args: Subset<T, TbfornecedoresAggregateArgs>): Prisma.PrismaPromise<GetTbfornecedoresAggregateType<T>>

    /**
     * Group by Tbfornecedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbfornecedoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbfornecedoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbfornecedoresGroupByArgs['orderBy'] }
        : { orderBy?: tbfornecedoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbfornecedoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbfornecedoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbfornecedores model
   */
  readonly fields: tbfornecedoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbfornecedores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbfornecedoresClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbmovimentos<T extends tbfornecedores$tbmovimentosArgs<ExtArgs> = {}>(args?: Subset<T, tbfornecedores$tbmovimentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbnf<T extends tbfornecedores$tbnfArgs<ExtArgs> = {}>(args?: Subset<T, tbfornecedores$tbnfArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbfornecedores model
   */ 
  interface tbfornecedoresFieldRefs {
    readonly idfor: FieldRef<"tbfornecedores", 'Int'>
    readonly nomefor: FieldRef<"tbfornecedores", 'String'>
    readonly fisjur: FieldRef<"tbfornecedores", 'String'>
    readonly cnpjcpf: FieldRef<"tbfornecedores", 'String'>
    readonly telefone: FieldRef<"tbfornecedores", 'String'>
    readonly cep: FieldRef<"tbfornecedores", 'String'>
    readonly cidade: FieldRef<"tbfornecedores", 'String'>
    readonly rua: FieldRef<"tbfornecedores", 'String'>
    readonly bairro: FieldRef<"tbfornecedores", 'String'>
    readonly numero: FieldRef<"tbfornecedores", 'Int'>
    readonly complemento: FieldRef<"tbfornecedores", 'String'>
    readonly email: FieldRef<"tbfornecedores", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tbfornecedores findUnique
   */
  export type tbfornecedoresFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbfornecedores
     */
    select?: tbfornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbfornecedoresInclude<ExtArgs> | null
    /**
     * Filter, which tbfornecedores to fetch.
     */
    where: tbfornecedoresWhereUniqueInput
  }


  /**
   * tbfornecedores findUniqueOrThrow
   */
  export type tbfornecedoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbfornecedores
     */
    select?: tbfornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbfornecedoresInclude<ExtArgs> | null
    /**
     * Filter, which tbfornecedores to fetch.
     */
    where: tbfornecedoresWhereUniqueInput
  }


  /**
   * tbfornecedores findFirst
   */
  export type tbfornecedoresFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbfornecedores
     */
    select?: tbfornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbfornecedoresInclude<ExtArgs> | null
    /**
     * Filter, which tbfornecedores to fetch.
     */
    where?: tbfornecedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbfornecedores to fetch.
     */
    orderBy?: tbfornecedoresOrderByWithRelationInput | tbfornecedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbfornecedores.
     */
    cursor?: tbfornecedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbfornecedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbfornecedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbfornecedores.
     */
    distinct?: TbfornecedoresScalarFieldEnum | TbfornecedoresScalarFieldEnum[]
  }


  /**
   * tbfornecedores findFirstOrThrow
   */
  export type tbfornecedoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbfornecedores
     */
    select?: tbfornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbfornecedoresInclude<ExtArgs> | null
    /**
     * Filter, which tbfornecedores to fetch.
     */
    where?: tbfornecedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbfornecedores to fetch.
     */
    orderBy?: tbfornecedoresOrderByWithRelationInput | tbfornecedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbfornecedores.
     */
    cursor?: tbfornecedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbfornecedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbfornecedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbfornecedores.
     */
    distinct?: TbfornecedoresScalarFieldEnum | TbfornecedoresScalarFieldEnum[]
  }


  /**
   * tbfornecedores findMany
   */
  export type tbfornecedoresFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbfornecedores
     */
    select?: tbfornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbfornecedoresInclude<ExtArgs> | null
    /**
     * Filter, which tbfornecedores to fetch.
     */
    where?: tbfornecedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbfornecedores to fetch.
     */
    orderBy?: tbfornecedoresOrderByWithRelationInput | tbfornecedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbfornecedores.
     */
    cursor?: tbfornecedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbfornecedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbfornecedores.
     */
    skip?: number
    distinct?: TbfornecedoresScalarFieldEnum | TbfornecedoresScalarFieldEnum[]
  }


  /**
   * tbfornecedores create
   */
  export type tbfornecedoresCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbfornecedores
     */
    select?: tbfornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbfornecedoresInclude<ExtArgs> | null
    /**
     * The data needed to create a tbfornecedores.
     */
    data?: XOR<tbfornecedoresCreateInput, tbfornecedoresUncheckedCreateInput>
  }


  /**
   * tbfornecedores createMany
   */
  export type tbfornecedoresCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbfornecedores.
     */
    data: tbfornecedoresCreateManyInput | tbfornecedoresCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbfornecedores update
   */
  export type tbfornecedoresUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbfornecedores
     */
    select?: tbfornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbfornecedoresInclude<ExtArgs> | null
    /**
     * The data needed to update a tbfornecedores.
     */
    data: XOR<tbfornecedoresUpdateInput, tbfornecedoresUncheckedUpdateInput>
    /**
     * Choose, which tbfornecedores to update.
     */
    where: tbfornecedoresWhereUniqueInput
  }


  /**
   * tbfornecedores updateMany
   */
  export type tbfornecedoresUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbfornecedores.
     */
    data: XOR<tbfornecedoresUpdateManyMutationInput, tbfornecedoresUncheckedUpdateManyInput>
    /**
     * Filter which tbfornecedores to update
     */
    where?: tbfornecedoresWhereInput
  }


  /**
   * tbfornecedores upsert
   */
  export type tbfornecedoresUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbfornecedores
     */
    select?: tbfornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbfornecedoresInclude<ExtArgs> | null
    /**
     * The filter to search for the tbfornecedores to update in case it exists.
     */
    where: tbfornecedoresWhereUniqueInput
    /**
     * In case the tbfornecedores found by the `where` argument doesn't exist, create a new tbfornecedores with this data.
     */
    create: XOR<tbfornecedoresCreateInput, tbfornecedoresUncheckedCreateInput>
    /**
     * In case the tbfornecedores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbfornecedoresUpdateInput, tbfornecedoresUncheckedUpdateInput>
  }


  /**
   * tbfornecedores delete
   */
  export type tbfornecedoresDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbfornecedores
     */
    select?: tbfornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbfornecedoresInclude<ExtArgs> | null
    /**
     * Filter which tbfornecedores to delete.
     */
    where: tbfornecedoresWhereUniqueInput
  }


  /**
   * tbfornecedores deleteMany
   */
  export type tbfornecedoresDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbfornecedores to delete
     */
    where?: tbfornecedoresWhereInput
  }


  /**
   * tbfornecedores.tbmovimentos
   */
  export type tbfornecedores$tbmovimentosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
    where?: tbmovimentosWhereInput
    orderBy?: tbmovimentosOrderByWithRelationInput | tbmovimentosOrderByWithRelationInput[]
    cursor?: tbmovimentosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbmovimentosScalarFieldEnum | TbmovimentosScalarFieldEnum[]
  }


  /**
   * tbfornecedores.tbnf
   */
  export type tbfornecedores$tbnfArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
    where?: tbnfWhereInput
    orderBy?: tbnfOrderByWithRelationInput | tbnfOrderByWithRelationInput[]
    cursor?: tbnfWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbnfScalarFieldEnum | TbnfScalarFieldEnum[]
  }


  /**
   * tbfornecedores without action
   */
  export type tbfornecedoresDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbfornecedores
     */
    select?: tbfornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbfornecedoresInclude<ExtArgs> | null
  }



  /**
   * Model tblocais
   */

  export type AggregateTblocais = {
    _count: TblocaisCountAggregateOutputType | null
    _avg: TblocaisAvgAggregateOutputType | null
    _sum: TblocaisSumAggregateOutputType | null
    _min: TblocaisMinAggregateOutputType | null
    _max: TblocaisMaxAggregateOutputType | null
  }

  export type TblocaisAvgAggregateOutputType = {
    idlocal: number | null
  }

  export type TblocaisSumAggregateOutputType = {
    idlocal: number | null
  }

  export type TblocaisMinAggregateOutputType = {
    idlocal: number | null
    nomelocal: string | null
  }

  export type TblocaisMaxAggregateOutputType = {
    idlocal: number | null
    nomelocal: string | null
  }

  export type TblocaisCountAggregateOutputType = {
    idlocal: number
    nomelocal: number
    _all: number
  }


  export type TblocaisAvgAggregateInputType = {
    idlocal?: true
  }

  export type TblocaisSumAggregateInputType = {
    idlocal?: true
  }

  export type TblocaisMinAggregateInputType = {
    idlocal?: true
    nomelocal?: true
  }

  export type TblocaisMaxAggregateInputType = {
    idlocal?: true
    nomelocal?: true
  }

  export type TblocaisCountAggregateInputType = {
    idlocal?: true
    nomelocal?: true
    _all?: true
  }

  export type TblocaisAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tblocais to aggregate.
     */
    where?: tblocaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tblocais to fetch.
     */
    orderBy?: tblocaisOrderByWithRelationInput | tblocaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tblocaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tblocais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tblocais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tblocais
    **/
    _count?: true | TblocaisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TblocaisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TblocaisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TblocaisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TblocaisMaxAggregateInputType
  }

  export type GetTblocaisAggregateType<T extends TblocaisAggregateArgs> = {
        [P in keyof T & keyof AggregateTblocais]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTblocais[P]>
      : GetScalarType<T[P], AggregateTblocais[P]>
  }




  export type tblocaisGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tblocaisWhereInput
    orderBy?: tblocaisOrderByWithAggregationInput | tblocaisOrderByWithAggregationInput[]
    by: TblocaisScalarFieldEnum[] | TblocaisScalarFieldEnum
    having?: tblocaisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TblocaisCountAggregateInputType | true
    _avg?: TblocaisAvgAggregateInputType
    _sum?: TblocaisSumAggregateInputType
    _min?: TblocaisMinAggregateInputType
    _max?: TblocaisMaxAggregateInputType
  }

  export type TblocaisGroupByOutputType = {
    idlocal: number
    nomelocal: string | null
    _count: TblocaisCountAggregateOutputType | null
    _avg: TblocaisAvgAggregateOutputType | null
    _sum: TblocaisSumAggregateOutputType | null
    _min: TblocaisMinAggregateOutputType | null
    _max: TblocaisMaxAggregateOutputType | null
  }

  type GetTblocaisGroupByPayload<T extends tblocaisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TblocaisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TblocaisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TblocaisGroupByOutputType[P]>
            : GetScalarType<T[P], TblocaisGroupByOutputType[P]>
        }
      >
    >


  export type tblocaisSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idlocal?: boolean
    nomelocal?: boolean
    tbestoque?: boolean | tblocais$tbestoqueArgs<ExtArgs>
    tbmovitens?: boolean | tblocais$tbmovitensArgs<ExtArgs>
    _count?: boolean | TblocaisCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tblocais"]>

  export type tblocaisSelectScalar = {
    idlocal?: boolean
    nomelocal?: boolean
  }

  export type tblocaisInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbestoque?: boolean | tblocais$tbestoqueArgs<ExtArgs>
    tbmovitens?: boolean | tblocais$tbmovitensArgs<ExtArgs>
    _count?: boolean | TblocaisCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tblocaisPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tblocais"
    objects: {
      tbestoque: Prisma.$tbestoquePayload<ExtArgs>[]
      tbmovitens: Prisma.$tbmovitensPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idlocal: number
      nomelocal: string | null
    }, ExtArgs["result"]["tblocais"]>
    composites: {}
  }


  type tblocaisGetPayload<S extends boolean | null | undefined | tblocaisDefaultArgs> = $Result.GetResult<Prisma.$tblocaisPayload, S>

  type tblocaisCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tblocaisFindManyArgs, 'select' | 'include'> & {
      select?: TblocaisCountAggregateInputType | true
    }

  export interface tblocaisDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tblocais'], meta: { name: 'tblocais' } }
    /**
     * Find zero or one Tblocais that matches the filter.
     * @param {tblocaisFindUniqueArgs} args - Arguments to find a Tblocais
     * @example
     * // Get one Tblocais
     * const tblocais = await prisma.tblocais.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tblocaisFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tblocaisFindUniqueArgs<ExtArgs>>
    ): Prisma__tblocaisClient<$Result.GetResult<Prisma.$tblocaisPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tblocais that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tblocaisFindUniqueOrThrowArgs} args - Arguments to find a Tblocais
     * @example
     * // Get one Tblocais
     * const tblocais = await prisma.tblocais.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tblocaisFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tblocaisFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tblocaisClient<$Result.GetResult<Prisma.$tblocaisPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tblocais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tblocaisFindFirstArgs} args - Arguments to find a Tblocais
     * @example
     * // Get one Tblocais
     * const tblocais = await prisma.tblocais.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tblocaisFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tblocaisFindFirstArgs<ExtArgs>>
    ): Prisma__tblocaisClient<$Result.GetResult<Prisma.$tblocaisPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tblocais that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tblocaisFindFirstOrThrowArgs} args - Arguments to find a Tblocais
     * @example
     * // Get one Tblocais
     * const tblocais = await prisma.tblocais.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tblocaisFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tblocaisFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tblocaisClient<$Result.GetResult<Prisma.$tblocaisPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tblocais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tblocaisFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tblocais
     * const tblocais = await prisma.tblocais.findMany()
     * 
     * // Get first 10 Tblocais
     * const tblocais = await prisma.tblocais.findMany({ take: 10 })
     * 
     * // Only select the `idlocal`
     * const tblocaisWithIdlocalOnly = await prisma.tblocais.findMany({ select: { idlocal: true } })
     * 
    **/
    findMany<T extends tblocaisFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tblocaisFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tblocaisPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tblocais.
     * @param {tblocaisCreateArgs} args - Arguments to create a Tblocais.
     * @example
     * // Create one Tblocais
     * const Tblocais = await prisma.tblocais.create({
     *   data: {
     *     // ... data to create a Tblocais
     *   }
     * })
     * 
    **/
    create<T extends tblocaisCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tblocaisCreateArgs<ExtArgs>>
    ): Prisma__tblocaisClient<$Result.GetResult<Prisma.$tblocaisPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tblocais.
     *     @param {tblocaisCreateManyArgs} args - Arguments to create many Tblocais.
     *     @example
     *     // Create many Tblocais
     *     const tblocais = await prisma.tblocais.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tblocaisCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tblocaisCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tblocais.
     * @param {tblocaisDeleteArgs} args - Arguments to delete one Tblocais.
     * @example
     * // Delete one Tblocais
     * const Tblocais = await prisma.tblocais.delete({
     *   where: {
     *     // ... filter to delete one Tblocais
     *   }
     * })
     * 
    **/
    delete<T extends tblocaisDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tblocaisDeleteArgs<ExtArgs>>
    ): Prisma__tblocaisClient<$Result.GetResult<Prisma.$tblocaisPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tblocais.
     * @param {tblocaisUpdateArgs} args - Arguments to update one Tblocais.
     * @example
     * // Update one Tblocais
     * const tblocais = await prisma.tblocais.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tblocaisUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tblocaisUpdateArgs<ExtArgs>>
    ): Prisma__tblocaisClient<$Result.GetResult<Prisma.$tblocaisPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tblocais.
     * @param {tblocaisDeleteManyArgs} args - Arguments to filter Tblocais to delete.
     * @example
     * // Delete a few Tblocais
     * const { count } = await prisma.tblocais.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tblocaisDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tblocaisDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tblocais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tblocaisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tblocais
     * const tblocais = await prisma.tblocais.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tblocaisUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tblocaisUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tblocais.
     * @param {tblocaisUpsertArgs} args - Arguments to update or create a Tblocais.
     * @example
     * // Update or create a Tblocais
     * const tblocais = await prisma.tblocais.upsert({
     *   create: {
     *     // ... data to create a Tblocais
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tblocais we want to update
     *   }
     * })
    **/
    upsert<T extends tblocaisUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tblocaisUpsertArgs<ExtArgs>>
    ): Prisma__tblocaisClient<$Result.GetResult<Prisma.$tblocaisPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tblocais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tblocaisCountArgs} args - Arguments to filter Tblocais to count.
     * @example
     * // Count the number of Tblocais
     * const count = await prisma.tblocais.count({
     *   where: {
     *     // ... the filter for the Tblocais we want to count
     *   }
     * })
    **/
    count<T extends tblocaisCountArgs>(
      args?: Subset<T, tblocaisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TblocaisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tblocais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TblocaisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TblocaisAggregateArgs>(args: Subset<T, TblocaisAggregateArgs>): Prisma.PrismaPromise<GetTblocaisAggregateType<T>>

    /**
     * Group by Tblocais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tblocaisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tblocaisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tblocaisGroupByArgs['orderBy'] }
        : { orderBy?: tblocaisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tblocaisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTblocaisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tblocais model
   */
  readonly fields: tblocaisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tblocais.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tblocaisClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbestoque<T extends tblocais$tbestoqueArgs<ExtArgs> = {}>(args?: Subset<T, tblocais$tbestoqueArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbestoquePayload<ExtArgs>, T, 'findMany'> | Null>;

    tbmovitens<T extends tblocais$tbmovitensArgs<ExtArgs> = {}>(args?: Subset<T, tblocais$tbmovitensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tblocais model
   */ 
  interface tblocaisFieldRefs {
    readonly idlocal: FieldRef<"tblocais", 'Int'>
    readonly nomelocal: FieldRef<"tblocais", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tblocais findUnique
   */
  export type tblocaisFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tblocais
     */
    select?: tblocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tblocaisInclude<ExtArgs> | null
    /**
     * Filter, which tblocais to fetch.
     */
    where: tblocaisWhereUniqueInput
  }


  /**
   * tblocais findUniqueOrThrow
   */
  export type tblocaisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tblocais
     */
    select?: tblocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tblocaisInclude<ExtArgs> | null
    /**
     * Filter, which tblocais to fetch.
     */
    where: tblocaisWhereUniqueInput
  }


  /**
   * tblocais findFirst
   */
  export type tblocaisFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tblocais
     */
    select?: tblocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tblocaisInclude<ExtArgs> | null
    /**
     * Filter, which tblocais to fetch.
     */
    where?: tblocaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tblocais to fetch.
     */
    orderBy?: tblocaisOrderByWithRelationInput | tblocaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tblocais.
     */
    cursor?: tblocaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tblocais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tblocais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tblocais.
     */
    distinct?: TblocaisScalarFieldEnum | TblocaisScalarFieldEnum[]
  }


  /**
   * tblocais findFirstOrThrow
   */
  export type tblocaisFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tblocais
     */
    select?: tblocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tblocaisInclude<ExtArgs> | null
    /**
     * Filter, which tblocais to fetch.
     */
    where?: tblocaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tblocais to fetch.
     */
    orderBy?: tblocaisOrderByWithRelationInput | tblocaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tblocais.
     */
    cursor?: tblocaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tblocais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tblocais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tblocais.
     */
    distinct?: TblocaisScalarFieldEnum | TblocaisScalarFieldEnum[]
  }


  /**
   * tblocais findMany
   */
  export type tblocaisFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tblocais
     */
    select?: tblocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tblocaisInclude<ExtArgs> | null
    /**
     * Filter, which tblocais to fetch.
     */
    where?: tblocaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tblocais to fetch.
     */
    orderBy?: tblocaisOrderByWithRelationInput | tblocaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tblocais.
     */
    cursor?: tblocaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tblocais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tblocais.
     */
    skip?: number
    distinct?: TblocaisScalarFieldEnum | TblocaisScalarFieldEnum[]
  }


  /**
   * tblocais create
   */
  export type tblocaisCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tblocais
     */
    select?: tblocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tblocaisInclude<ExtArgs> | null
    /**
     * The data needed to create a tblocais.
     */
    data?: XOR<tblocaisCreateInput, tblocaisUncheckedCreateInput>
  }


  /**
   * tblocais createMany
   */
  export type tblocaisCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tblocais.
     */
    data: tblocaisCreateManyInput | tblocaisCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tblocais update
   */
  export type tblocaisUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tblocais
     */
    select?: tblocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tblocaisInclude<ExtArgs> | null
    /**
     * The data needed to update a tblocais.
     */
    data: XOR<tblocaisUpdateInput, tblocaisUncheckedUpdateInput>
    /**
     * Choose, which tblocais to update.
     */
    where: tblocaisWhereUniqueInput
  }


  /**
   * tblocais updateMany
   */
  export type tblocaisUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tblocais.
     */
    data: XOR<tblocaisUpdateManyMutationInput, tblocaisUncheckedUpdateManyInput>
    /**
     * Filter which tblocais to update
     */
    where?: tblocaisWhereInput
  }


  /**
   * tblocais upsert
   */
  export type tblocaisUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tblocais
     */
    select?: tblocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tblocaisInclude<ExtArgs> | null
    /**
     * The filter to search for the tblocais to update in case it exists.
     */
    where: tblocaisWhereUniqueInput
    /**
     * In case the tblocais found by the `where` argument doesn't exist, create a new tblocais with this data.
     */
    create: XOR<tblocaisCreateInput, tblocaisUncheckedCreateInput>
    /**
     * In case the tblocais was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tblocaisUpdateInput, tblocaisUncheckedUpdateInput>
  }


  /**
   * tblocais delete
   */
  export type tblocaisDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tblocais
     */
    select?: tblocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tblocaisInclude<ExtArgs> | null
    /**
     * Filter which tblocais to delete.
     */
    where: tblocaisWhereUniqueInput
  }


  /**
   * tblocais deleteMany
   */
  export type tblocaisDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tblocais to delete
     */
    where?: tblocaisWhereInput
  }


  /**
   * tblocais.tbestoque
   */
  export type tblocais$tbestoqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbestoque
     */
    select?: tbestoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbestoqueInclude<ExtArgs> | null
    where?: tbestoqueWhereInput
    orderBy?: tbestoqueOrderByWithRelationInput | tbestoqueOrderByWithRelationInput[]
    cursor?: tbestoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbestoqueScalarFieldEnum | TbestoqueScalarFieldEnum[]
  }


  /**
   * tblocais.tbmovitens
   */
  export type tblocais$tbmovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    where?: tbmovitensWhereInput
    orderBy?: tbmovitensOrderByWithRelationInput | tbmovitensOrderByWithRelationInput[]
    cursor?: tbmovitensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbmovitensScalarFieldEnum | TbmovitensScalarFieldEnum[]
  }


  /**
   * tblocais without action
   */
  export type tblocaisDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tblocais
     */
    select?: tblocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tblocaisInclude<ExtArgs> | null
  }



  /**
   * Model tbmovimentos
   */

  export type AggregateTbmovimentos = {
    _count: TbmovimentosCountAggregateOutputType | null
    _avg: TbmovimentosAvgAggregateOutputType | null
    _sum: TbmovimentosSumAggregateOutputType | null
    _min: TbmovimentosMinAggregateOutputType | null
    _max: TbmovimentosMaxAggregateOutputType | null
  }

  export type TbmovimentosAvgAggregateOutputType = {
    idmovimento: number | null
    idfor: number | null
    idusuario_alteracao: number | null
  }

  export type TbmovimentosSumAggregateOutputType = {
    idmovimento: number | null
    idfor: number | null
    idusuario_alteracao: number | null
  }

  export type TbmovimentosMinAggregateOutputType = {
    idmovimento: number | null
    tipmov: string | null
    idfor: number | null
    idusuario_alteracao: number | null
    dtinc: Date | null
  }

  export type TbmovimentosMaxAggregateOutputType = {
    idmovimento: number | null
    tipmov: string | null
    idfor: number | null
    idusuario_alteracao: number | null
    dtinc: Date | null
  }

  export type TbmovimentosCountAggregateOutputType = {
    idmovimento: number
    tipmov: number
    idfor: number
    idusuario_alteracao: number
    dtinc: number
    _all: number
  }


  export type TbmovimentosAvgAggregateInputType = {
    idmovimento?: true
    idfor?: true
    idusuario_alteracao?: true
  }

  export type TbmovimentosSumAggregateInputType = {
    idmovimento?: true
    idfor?: true
    idusuario_alteracao?: true
  }

  export type TbmovimentosMinAggregateInputType = {
    idmovimento?: true
    tipmov?: true
    idfor?: true
    idusuario_alteracao?: true
    dtinc?: true
  }

  export type TbmovimentosMaxAggregateInputType = {
    idmovimento?: true
    tipmov?: true
    idfor?: true
    idusuario_alteracao?: true
    dtinc?: true
  }

  export type TbmovimentosCountAggregateInputType = {
    idmovimento?: true
    tipmov?: true
    idfor?: true
    idusuario_alteracao?: true
    dtinc?: true
    _all?: true
  }

  export type TbmovimentosAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbmovimentos to aggregate.
     */
    where?: tbmovimentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbmovimentos to fetch.
     */
    orderBy?: tbmovimentosOrderByWithRelationInput | tbmovimentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbmovimentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbmovimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbmovimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbmovimentos
    **/
    _count?: true | TbmovimentosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbmovimentosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbmovimentosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbmovimentosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbmovimentosMaxAggregateInputType
  }

  export type GetTbmovimentosAggregateType<T extends TbmovimentosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbmovimentos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbmovimentos[P]>
      : GetScalarType<T[P], AggregateTbmovimentos[P]>
  }




  export type tbmovimentosGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbmovimentosWhereInput
    orderBy?: tbmovimentosOrderByWithAggregationInput | tbmovimentosOrderByWithAggregationInput[]
    by: TbmovimentosScalarFieldEnum[] | TbmovimentosScalarFieldEnum
    having?: tbmovimentosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbmovimentosCountAggregateInputType | true
    _avg?: TbmovimentosAvgAggregateInputType
    _sum?: TbmovimentosSumAggregateInputType
    _min?: TbmovimentosMinAggregateInputType
    _max?: TbmovimentosMaxAggregateInputType
  }

  export type TbmovimentosGroupByOutputType = {
    idmovimento: number
    tipmov: string | null
    idfor: number | null
    idusuario_alteracao: number | null
    dtinc: Date | null
    _count: TbmovimentosCountAggregateOutputType | null
    _avg: TbmovimentosAvgAggregateOutputType | null
    _sum: TbmovimentosSumAggregateOutputType | null
    _min: TbmovimentosMinAggregateOutputType | null
    _max: TbmovimentosMaxAggregateOutputType | null
  }

  type GetTbmovimentosGroupByPayload<T extends tbmovimentosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbmovimentosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbmovimentosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbmovimentosGroupByOutputType[P]>
            : GetScalarType<T[P], TbmovimentosGroupByOutputType[P]>
        }
      >
    >


  export type tbmovimentosSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idmovimento?: boolean
    tipmov?: boolean
    idfor?: boolean
    idusuario_alteracao?: boolean
    dtinc?: boolean
    tbfornecedores?: boolean | tbmovimentos$tbfornecedoresArgs<ExtArgs>
    tbusuarios?: boolean | tbmovimentos$tbusuariosArgs<ExtArgs>
    tbmovitens?: boolean | tbmovimentos$tbmovitensArgs<ExtArgs>
    tbnf?: boolean | tbmovimentos$tbnfArgs<ExtArgs>
    _count?: boolean | TbmovimentosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbmovimentos"]>

  export type tbmovimentosSelectScalar = {
    idmovimento?: boolean
    tipmov?: boolean
    idfor?: boolean
    idusuario_alteracao?: boolean
    dtinc?: boolean
  }

  export type tbmovimentosInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbfornecedores?: boolean | tbmovimentos$tbfornecedoresArgs<ExtArgs>
    tbusuarios?: boolean | tbmovimentos$tbusuariosArgs<ExtArgs>
    tbmovitens?: boolean | tbmovimentos$tbmovitensArgs<ExtArgs>
    tbnf?: boolean | tbmovimentos$tbnfArgs<ExtArgs>
    _count?: boolean | TbmovimentosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbmovimentosPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbmovimentos"
    objects: {
      tbfornecedores: Prisma.$tbfornecedoresPayload<ExtArgs> | null
      tbusuarios: Prisma.$tbusuariosPayload<ExtArgs> | null
      tbmovitens: Prisma.$tbmovitensPayload<ExtArgs>[]
      tbnf: Prisma.$tbnfPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      idmovimento: number
      tipmov: string | null
      idfor: number | null
      idusuario_alteracao: number | null
      dtinc: Date | null
    }, ExtArgs["result"]["tbmovimentos"]>
    composites: {}
  }


  type tbmovimentosGetPayload<S extends boolean | null | undefined | tbmovimentosDefaultArgs> = $Result.GetResult<Prisma.$tbmovimentosPayload, S>

  type tbmovimentosCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbmovimentosFindManyArgs, 'select' | 'include'> & {
      select?: TbmovimentosCountAggregateInputType | true
    }

  export interface tbmovimentosDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbmovimentos'], meta: { name: 'tbmovimentos' } }
    /**
     * Find zero or one Tbmovimentos that matches the filter.
     * @param {tbmovimentosFindUniqueArgs} args - Arguments to find a Tbmovimentos
     * @example
     * // Get one Tbmovimentos
     * const tbmovimentos = await prisma.tbmovimentos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbmovimentosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbmovimentosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbmovimentosClient<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbmovimentos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbmovimentosFindUniqueOrThrowArgs} args - Arguments to find a Tbmovimentos
     * @example
     * // Get one Tbmovimentos
     * const tbmovimentos = await prisma.tbmovimentos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbmovimentosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbmovimentosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbmovimentosClient<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbmovimentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbmovimentosFindFirstArgs} args - Arguments to find a Tbmovimentos
     * @example
     * // Get one Tbmovimentos
     * const tbmovimentos = await prisma.tbmovimentos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbmovimentosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbmovimentosFindFirstArgs<ExtArgs>>
    ): Prisma__tbmovimentosClient<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbmovimentos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbmovimentosFindFirstOrThrowArgs} args - Arguments to find a Tbmovimentos
     * @example
     * // Get one Tbmovimentos
     * const tbmovimentos = await prisma.tbmovimentos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbmovimentosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbmovimentosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbmovimentosClient<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbmovimentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbmovimentosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbmovimentos
     * const tbmovimentos = await prisma.tbmovimentos.findMany()
     * 
     * // Get first 10 Tbmovimentos
     * const tbmovimentos = await prisma.tbmovimentos.findMany({ take: 10 })
     * 
     * // Only select the `idmovimento`
     * const tbmovimentosWithIdmovimentoOnly = await prisma.tbmovimentos.findMany({ select: { idmovimento: true } })
     * 
    **/
    findMany<T extends tbmovimentosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbmovimentosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbmovimentos.
     * @param {tbmovimentosCreateArgs} args - Arguments to create a Tbmovimentos.
     * @example
     * // Create one Tbmovimentos
     * const Tbmovimentos = await prisma.tbmovimentos.create({
     *   data: {
     *     // ... data to create a Tbmovimentos
     *   }
     * })
     * 
    **/
    create<T extends tbmovimentosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbmovimentosCreateArgs<ExtArgs>>
    ): Prisma__tbmovimentosClient<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbmovimentos.
     *     @param {tbmovimentosCreateManyArgs} args - Arguments to create many Tbmovimentos.
     *     @example
     *     // Create many Tbmovimentos
     *     const tbmovimentos = await prisma.tbmovimentos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbmovimentosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbmovimentosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbmovimentos.
     * @param {tbmovimentosDeleteArgs} args - Arguments to delete one Tbmovimentos.
     * @example
     * // Delete one Tbmovimentos
     * const Tbmovimentos = await prisma.tbmovimentos.delete({
     *   where: {
     *     // ... filter to delete one Tbmovimentos
     *   }
     * })
     * 
    **/
    delete<T extends tbmovimentosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbmovimentosDeleteArgs<ExtArgs>>
    ): Prisma__tbmovimentosClient<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbmovimentos.
     * @param {tbmovimentosUpdateArgs} args - Arguments to update one Tbmovimentos.
     * @example
     * // Update one Tbmovimentos
     * const tbmovimentos = await prisma.tbmovimentos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbmovimentosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbmovimentosUpdateArgs<ExtArgs>>
    ): Prisma__tbmovimentosClient<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbmovimentos.
     * @param {tbmovimentosDeleteManyArgs} args - Arguments to filter Tbmovimentos to delete.
     * @example
     * // Delete a few Tbmovimentos
     * const { count } = await prisma.tbmovimentos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbmovimentosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbmovimentosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbmovimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbmovimentosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbmovimentos
     * const tbmovimentos = await prisma.tbmovimentos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbmovimentosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbmovimentosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbmovimentos.
     * @param {tbmovimentosUpsertArgs} args - Arguments to update or create a Tbmovimentos.
     * @example
     * // Update or create a Tbmovimentos
     * const tbmovimentos = await prisma.tbmovimentos.upsert({
     *   create: {
     *     // ... data to create a Tbmovimentos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbmovimentos we want to update
     *   }
     * })
    **/
    upsert<T extends tbmovimentosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbmovimentosUpsertArgs<ExtArgs>>
    ): Prisma__tbmovimentosClient<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbmovimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbmovimentosCountArgs} args - Arguments to filter Tbmovimentos to count.
     * @example
     * // Count the number of Tbmovimentos
     * const count = await prisma.tbmovimentos.count({
     *   where: {
     *     // ... the filter for the Tbmovimentos we want to count
     *   }
     * })
    **/
    count<T extends tbmovimentosCountArgs>(
      args?: Subset<T, tbmovimentosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbmovimentosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbmovimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbmovimentosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbmovimentosAggregateArgs>(args: Subset<T, TbmovimentosAggregateArgs>): Prisma.PrismaPromise<GetTbmovimentosAggregateType<T>>

    /**
     * Group by Tbmovimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbmovimentosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbmovimentosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbmovimentosGroupByArgs['orderBy'] }
        : { orderBy?: tbmovimentosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbmovimentosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbmovimentosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbmovimentos model
   */
  readonly fields: tbmovimentosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbmovimentos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbmovimentosClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbfornecedores<T extends tbmovimentos$tbfornecedoresArgs<ExtArgs> = {}>(args?: Subset<T, tbmovimentos$tbfornecedoresArgs<ExtArgs>>): Prisma__tbfornecedoresClient<$Result.GetResult<Prisma.$tbfornecedoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbusuarios<T extends tbmovimentos$tbusuariosArgs<ExtArgs> = {}>(args?: Subset<T, tbmovimentos$tbusuariosArgs<ExtArgs>>): Prisma__tbusuariosClient<$Result.GetResult<Prisma.$tbusuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbmovitens<T extends tbmovimentos$tbmovitensArgs<ExtArgs> = {}>(args?: Subset<T, tbmovimentos$tbmovitensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbnf<T extends tbmovimentos$tbnfArgs<ExtArgs> = {}>(args?: Subset<T, tbmovimentos$tbnfArgs<ExtArgs>>): Prisma__tbnfClient<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbmovimentos model
   */ 
  interface tbmovimentosFieldRefs {
    readonly idmovimento: FieldRef<"tbmovimentos", 'Int'>
    readonly tipmov: FieldRef<"tbmovimentos", 'String'>
    readonly idfor: FieldRef<"tbmovimentos", 'Int'>
    readonly idusuario_alteracao: FieldRef<"tbmovimentos", 'Int'>
    readonly dtinc: FieldRef<"tbmovimentos", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * tbmovimentos findUnique
   */
  export type tbmovimentosFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
    /**
     * Filter, which tbmovimentos to fetch.
     */
    where: tbmovimentosWhereUniqueInput
  }


  /**
   * tbmovimentos findUniqueOrThrow
   */
  export type tbmovimentosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
    /**
     * Filter, which tbmovimentos to fetch.
     */
    where: tbmovimentosWhereUniqueInput
  }


  /**
   * tbmovimentos findFirst
   */
  export type tbmovimentosFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
    /**
     * Filter, which tbmovimentos to fetch.
     */
    where?: tbmovimentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbmovimentos to fetch.
     */
    orderBy?: tbmovimentosOrderByWithRelationInput | tbmovimentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbmovimentos.
     */
    cursor?: tbmovimentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbmovimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbmovimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbmovimentos.
     */
    distinct?: TbmovimentosScalarFieldEnum | TbmovimentosScalarFieldEnum[]
  }


  /**
   * tbmovimentos findFirstOrThrow
   */
  export type tbmovimentosFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
    /**
     * Filter, which tbmovimentos to fetch.
     */
    where?: tbmovimentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbmovimentos to fetch.
     */
    orderBy?: tbmovimentosOrderByWithRelationInput | tbmovimentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbmovimentos.
     */
    cursor?: tbmovimentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbmovimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbmovimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbmovimentos.
     */
    distinct?: TbmovimentosScalarFieldEnum | TbmovimentosScalarFieldEnum[]
  }


  /**
   * tbmovimentos findMany
   */
  export type tbmovimentosFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
    /**
     * Filter, which tbmovimentos to fetch.
     */
    where?: tbmovimentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbmovimentos to fetch.
     */
    orderBy?: tbmovimentosOrderByWithRelationInput | tbmovimentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbmovimentos.
     */
    cursor?: tbmovimentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbmovimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbmovimentos.
     */
    skip?: number
    distinct?: TbmovimentosScalarFieldEnum | TbmovimentosScalarFieldEnum[]
  }


  /**
   * tbmovimentos create
   */
  export type tbmovimentosCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbmovimentos.
     */
    data?: XOR<tbmovimentosCreateInput, tbmovimentosUncheckedCreateInput>
  }


  /**
   * tbmovimentos createMany
   */
  export type tbmovimentosCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbmovimentos.
     */
    data: tbmovimentosCreateManyInput | tbmovimentosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbmovimentos update
   */
  export type tbmovimentosUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbmovimentos.
     */
    data: XOR<tbmovimentosUpdateInput, tbmovimentosUncheckedUpdateInput>
    /**
     * Choose, which tbmovimentos to update.
     */
    where: tbmovimentosWhereUniqueInput
  }


  /**
   * tbmovimentos updateMany
   */
  export type tbmovimentosUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbmovimentos.
     */
    data: XOR<tbmovimentosUpdateManyMutationInput, tbmovimentosUncheckedUpdateManyInput>
    /**
     * Filter which tbmovimentos to update
     */
    where?: tbmovimentosWhereInput
  }


  /**
   * tbmovimentos upsert
   */
  export type tbmovimentosUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbmovimentos to update in case it exists.
     */
    where: tbmovimentosWhereUniqueInput
    /**
     * In case the tbmovimentos found by the `where` argument doesn't exist, create a new tbmovimentos with this data.
     */
    create: XOR<tbmovimentosCreateInput, tbmovimentosUncheckedCreateInput>
    /**
     * In case the tbmovimentos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbmovimentosUpdateInput, tbmovimentosUncheckedUpdateInput>
  }


  /**
   * tbmovimentos delete
   */
  export type tbmovimentosDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
    /**
     * Filter which tbmovimentos to delete.
     */
    where: tbmovimentosWhereUniqueInput
  }


  /**
   * tbmovimentos deleteMany
   */
  export type tbmovimentosDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbmovimentos to delete
     */
    where?: tbmovimentosWhereInput
  }


  /**
   * tbmovimentos.tbfornecedores
   */
  export type tbmovimentos$tbfornecedoresArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbfornecedores
     */
    select?: tbfornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbfornecedoresInclude<ExtArgs> | null
    where?: tbfornecedoresWhereInput
  }


  /**
   * tbmovimentos.tbusuarios
   */
  export type tbmovimentos$tbusuariosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbusuarios
     */
    select?: tbusuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbusuariosInclude<ExtArgs> | null
    where?: tbusuariosWhereInput
  }


  /**
   * tbmovimentos.tbmovitens
   */
  export type tbmovimentos$tbmovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    where?: tbmovitensWhereInput
    orderBy?: tbmovitensOrderByWithRelationInput | tbmovitensOrderByWithRelationInput[]
    cursor?: tbmovitensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbmovitensScalarFieldEnum | TbmovitensScalarFieldEnum[]
  }


  /**
   * tbmovimentos.tbnf
   */
  export type tbmovimentos$tbnfArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
    where?: tbnfWhereInput
  }


  /**
   * tbmovimentos without action
   */
  export type tbmovimentosDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
  }



  /**
   * Model tbmovitens
   */

  export type AggregateTbmovitens = {
    _count: TbmovitensCountAggregateOutputType | null
    _avg: TbmovitensAvgAggregateOutputType | null
    _sum: TbmovitensSumAggregateOutputType | null
    _min: TbmovitensMinAggregateOutputType | null
    _max: TbmovitensMaxAggregateOutputType | null
  }

  export type TbmovitensAvgAggregateOutputType = {
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    idlocal: number | null
    quantidade: Decimal | null
  }

  export type TbmovitensSumAggregateOutputType = {
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    idlocal: number | null
    quantidade: Decimal | null
  }

  export type TbmovitensMinAggregateOutputType = {
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    idlocal: number | null
    dtinc: Date | null
    quantidade: Decimal | null
  }

  export type TbmovitensMaxAggregateOutputType = {
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    idlocal: number | null
    dtinc: Date | null
    quantidade: Decimal | null
  }

  export type TbmovitensCountAggregateOutputType = {
    idmovimento: number
    seqitem: number
    idproduto: number
    idlocal: number
    dtinc: number
    quantidade: number
    _all: number
  }


  export type TbmovitensAvgAggregateInputType = {
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
  }

  export type TbmovitensSumAggregateInputType = {
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    idlocal?: true
    quantidade?: true
  }

  export type TbmovitensMinAggregateInputType = {
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    idlocal?: true
    dtinc?: true
    quantidade?: true
  }

  export type TbmovitensMaxAggregateInputType = {
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    idlocal?: true
    dtinc?: true
    quantidade?: true
  }

  export type TbmovitensCountAggregateInputType = {
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    idlocal?: true
    dtinc?: true
    quantidade?: true
    _all?: true
  }

  export type TbmovitensAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbmovitens to aggregate.
     */
    where?: tbmovitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbmovitens to fetch.
     */
    orderBy?: tbmovitensOrderByWithRelationInput | tbmovitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbmovitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbmovitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbmovitens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbmovitens
    **/
    _count?: true | TbmovitensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbmovitensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbmovitensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbmovitensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbmovitensMaxAggregateInputType
  }

  export type GetTbmovitensAggregateType<T extends TbmovitensAggregateArgs> = {
        [P in keyof T & keyof AggregateTbmovitens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbmovitens[P]>
      : GetScalarType<T[P], AggregateTbmovitens[P]>
  }




  export type tbmovitensGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbmovitensWhereInput
    orderBy?: tbmovitensOrderByWithAggregationInput | tbmovitensOrderByWithAggregationInput[]
    by: TbmovitensScalarFieldEnum[] | TbmovitensScalarFieldEnum
    having?: tbmovitensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbmovitensCountAggregateInputType | true
    _avg?: TbmovitensAvgAggregateInputType
    _sum?: TbmovitensSumAggregateInputType
    _min?: TbmovitensMinAggregateInputType
    _max?: TbmovitensMaxAggregateInputType
  }

  export type TbmovitensGroupByOutputType = {
    idmovimento: number
    seqitem: number
    idproduto: number
    idlocal: number | null
    dtinc: Date | null
    quantidade: Decimal | null
    _count: TbmovitensCountAggregateOutputType | null
    _avg: TbmovitensAvgAggregateOutputType | null
    _sum: TbmovitensSumAggregateOutputType | null
    _min: TbmovitensMinAggregateOutputType | null
    _max: TbmovitensMaxAggregateOutputType | null
  }

  type GetTbmovitensGroupByPayload<T extends tbmovitensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbmovitensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbmovitensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbmovitensGroupByOutputType[P]>
            : GetScalarType<T[P], TbmovitensGroupByOutputType[P]>
        }
      >
    >


  export type tbmovitensSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idmovimento?: boolean
    seqitem?: boolean
    idproduto?: boolean
    idlocal?: boolean
    dtinc?: boolean
    quantidade?: boolean
    tblocais?: boolean | tbmovitens$tblocaisArgs<ExtArgs>
    tbmovimentos?: boolean | tbmovimentosDefaultArgs<ExtArgs>
    tbprodutos?: boolean | tbprodutosDefaultArgs<ExtArgs>
    tbnfitens?: boolean | tbmovitens$tbnfitensArgs<ExtArgs>
    _count?: boolean | TbmovitensCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbmovitens"]>

  export type tbmovitensSelectScalar = {
    idmovimento?: boolean
    seqitem?: boolean
    idproduto?: boolean
    idlocal?: boolean
    dtinc?: boolean
    quantidade?: boolean
  }

  export type tbmovitensInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tblocais?: boolean | tbmovitens$tblocaisArgs<ExtArgs>
    tbmovimentos?: boolean | tbmovimentosDefaultArgs<ExtArgs>
    tbprodutos?: boolean | tbprodutosDefaultArgs<ExtArgs>
    tbnfitens?: boolean | tbmovitens$tbnfitensArgs<ExtArgs>
    _count?: boolean | TbmovitensCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbmovitensPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbmovitens"
    objects: {
      tblocais: Prisma.$tblocaisPayload<ExtArgs> | null
      tbmovimentos: Prisma.$tbmovimentosPayload<ExtArgs>
      tbprodutos: Prisma.$tbprodutosPayload<ExtArgs>
      tbnfitens: Prisma.$tbnfitensPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idmovimento: number
      seqitem: number
      idproduto: number
      idlocal: number | null
      dtinc: Date | null
      quantidade: Prisma.Decimal | null
    }, ExtArgs["result"]["tbmovitens"]>
    composites: {}
  }


  type tbmovitensGetPayload<S extends boolean | null | undefined | tbmovitensDefaultArgs> = $Result.GetResult<Prisma.$tbmovitensPayload, S>

  type tbmovitensCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbmovitensFindManyArgs, 'select' | 'include'> & {
      select?: TbmovitensCountAggregateInputType | true
    }

  export interface tbmovitensDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbmovitens'], meta: { name: 'tbmovitens' } }
    /**
     * Find zero or one Tbmovitens that matches the filter.
     * @param {tbmovitensFindUniqueArgs} args - Arguments to find a Tbmovitens
     * @example
     * // Get one Tbmovitens
     * const tbmovitens = await prisma.tbmovitens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbmovitensFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbmovitensFindUniqueArgs<ExtArgs>>
    ): Prisma__tbmovitensClient<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbmovitens that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbmovitensFindUniqueOrThrowArgs} args - Arguments to find a Tbmovitens
     * @example
     * // Get one Tbmovitens
     * const tbmovitens = await prisma.tbmovitens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbmovitensFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbmovitensFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbmovitensClient<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbmovitens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbmovitensFindFirstArgs} args - Arguments to find a Tbmovitens
     * @example
     * // Get one Tbmovitens
     * const tbmovitens = await prisma.tbmovitens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbmovitensFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbmovitensFindFirstArgs<ExtArgs>>
    ): Prisma__tbmovitensClient<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbmovitens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbmovitensFindFirstOrThrowArgs} args - Arguments to find a Tbmovitens
     * @example
     * // Get one Tbmovitens
     * const tbmovitens = await prisma.tbmovitens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbmovitensFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbmovitensFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbmovitensClient<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbmovitens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbmovitensFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbmovitens
     * const tbmovitens = await prisma.tbmovitens.findMany()
     * 
     * // Get first 10 Tbmovitens
     * const tbmovitens = await prisma.tbmovitens.findMany({ take: 10 })
     * 
     * // Only select the `idmovimento`
     * const tbmovitensWithIdmovimentoOnly = await prisma.tbmovitens.findMany({ select: { idmovimento: true } })
     * 
    **/
    findMany<T extends tbmovitensFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbmovitensFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbmovitens.
     * @param {tbmovitensCreateArgs} args - Arguments to create a Tbmovitens.
     * @example
     * // Create one Tbmovitens
     * const Tbmovitens = await prisma.tbmovitens.create({
     *   data: {
     *     // ... data to create a Tbmovitens
     *   }
     * })
     * 
    **/
    create<T extends tbmovitensCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbmovitensCreateArgs<ExtArgs>>
    ): Prisma__tbmovitensClient<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbmovitens.
     *     @param {tbmovitensCreateManyArgs} args - Arguments to create many Tbmovitens.
     *     @example
     *     // Create many Tbmovitens
     *     const tbmovitens = await prisma.tbmovitens.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbmovitensCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbmovitensCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbmovitens.
     * @param {tbmovitensDeleteArgs} args - Arguments to delete one Tbmovitens.
     * @example
     * // Delete one Tbmovitens
     * const Tbmovitens = await prisma.tbmovitens.delete({
     *   where: {
     *     // ... filter to delete one Tbmovitens
     *   }
     * })
     * 
    **/
    delete<T extends tbmovitensDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbmovitensDeleteArgs<ExtArgs>>
    ): Prisma__tbmovitensClient<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbmovitens.
     * @param {tbmovitensUpdateArgs} args - Arguments to update one Tbmovitens.
     * @example
     * // Update one Tbmovitens
     * const tbmovitens = await prisma.tbmovitens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbmovitensUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbmovitensUpdateArgs<ExtArgs>>
    ): Prisma__tbmovitensClient<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbmovitens.
     * @param {tbmovitensDeleteManyArgs} args - Arguments to filter Tbmovitens to delete.
     * @example
     * // Delete a few Tbmovitens
     * const { count } = await prisma.tbmovitens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbmovitensDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbmovitensDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbmovitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbmovitensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbmovitens
     * const tbmovitens = await prisma.tbmovitens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbmovitensUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbmovitensUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbmovitens.
     * @param {tbmovitensUpsertArgs} args - Arguments to update or create a Tbmovitens.
     * @example
     * // Update or create a Tbmovitens
     * const tbmovitens = await prisma.tbmovitens.upsert({
     *   create: {
     *     // ... data to create a Tbmovitens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbmovitens we want to update
     *   }
     * })
    **/
    upsert<T extends tbmovitensUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbmovitensUpsertArgs<ExtArgs>>
    ): Prisma__tbmovitensClient<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbmovitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbmovitensCountArgs} args - Arguments to filter Tbmovitens to count.
     * @example
     * // Count the number of Tbmovitens
     * const count = await prisma.tbmovitens.count({
     *   where: {
     *     // ... the filter for the Tbmovitens we want to count
     *   }
     * })
    **/
    count<T extends tbmovitensCountArgs>(
      args?: Subset<T, tbmovitensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbmovitensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbmovitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbmovitensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbmovitensAggregateArgs>(args: Subset<T, TbmovitensAggregateArgs>): Prisma.PrismaPromise<GetTbmovitensAggregateType<T>>

    /**
     * Group by Tbmovitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbmovitensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbmovitensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbmovitensGroupByArgs['orderBy'] }
        : { orderBy?: tbmovitensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbmovitensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbmovitensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbmovitens model
   */
  readonly fields: tbmovitensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbmovitens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbmovitensClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tblocais<T extends tbmovitens$tblocaisArgs<ExtArgs> = {}>(args?: Subset<T, tbmovitens$tblocaisArgs<ExtArgs>>): Prisma__tblocaisClient<$Result.GetResult<Prisma.$tblocaisPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbmovimentos<T extends tbmovimentosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbmovimentosDefaultArgs<ExtArgs>>): Prisma__tbmovimentosClient<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbprodutos<T extends tbprodutosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbprodutosDefaultArgs<ExtArgs>>): Prisma__tbprodutosClient<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbnfitens<T extends tbmovitens$tbnfitensArgs<ExtArgs> = {}>(args?: Subset<T, tbmovitens$tbnfitensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbnfitensPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbmovitens model
   */ 
  interface tbmovitensFieldRefs {
    readonly idmovimento: FieldRef<"tbmovitens", 'Int'>
    readonly seqitem: FieldRef<"tbmovitens", 'Int'>
    readonly idproduto: FieldRef<"tbmovitens", 'Int'>
    readonly idlocal: FieldRef<"tbmovitens", 'Int'>
    readonly dtinc: FieldRef<"tbmovitens", 'DateTime'>
    readonly quantidade: FieldRef<"tbmovitens", 'Decimal'>
  }
    

  // Custom InputTypes

  /**
   * tbmovitens findUnique
   */
  export type tbmovitensFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    /**
     * Filter, which tbmovitens to fetch.
     */
    where: tbmovitensWhereUniqueInput
  }


  /**
   * tbmovitens findUniqueOrThrow
   */
  export type tbmovitensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    /**
     * Filter, which tbmovitens to fetch.
     */
    where: tbmovitensWhereUniqueInput
  }


  /**
   * tbmovitens findFirst
   */
  export type tbmovitensFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    /**
     * Filter, which tbmovitens to fetch.
     */
    where?: tbmovitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbmovitens to fetch.
     */
    orderBy?: tbmovitensOrderByWithRelationInput | tbmovitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbmovitens.
     */
    cursor?: tbmovitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbmovitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbmovitens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbmovitens.
     */
    distinct?: TbmovitensScalarFieldEnum | TbmovitensScalarFieldEnum[]
  }


  /**
   * tbmovitens findFirstOrThrow
   */
  export type tbmovitensFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    /**
     * Filter, which tbmovitens to fetch.
     */
    where?: tbmovitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbmovitens to fetch.
     */
    orderBy?: tbmovitensOrderByWithRelationInput | tbmovitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbmovitens.
     */
    cursor?: tbmovitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbmovitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbmovitens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbmovitens.
     */
    distinct?: TbmovitensScalarFieldEnum | TbmovitensScalarFieldEnum[]
  }


  /**
   * tbmovitens findMany
   */
  export type tbmovitensFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    /**
     * Filter, which tbmovitens to fetch.
     */
    where?: tbmovitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbmovitens to fetch.
     */
    orderBy?: tbmovitensOrderByWithRelationInput | tbmovitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbmovitens.
     */
    cursor?: tbmovitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbmovitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbmovitens.
     */
    skip?: number
    distinct?: TbmovitensScalarFieldEnum | TbmovitensScalarFieldEnum[]
  }


  /**
   * tbmovitens create
   */
  export type tbmovitensCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    /**
     * The data needed to create a tbmovitens.
     */
    data: XOR<tbmovitensCreateInput, tbmovitensUncheckedCreateInput>
  }


  /**
   * tbmovitens createMany
   */
  export type tbmovitensCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbmovitens.
     */
    data: tbmovitensCreateManyInput | tbmovitensCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbmovitens update
   */
  export type tbmovitensUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    /**
     * The data needed to update a tbmovitens.
     */
    data: XOR<tbmovitensUpdateInput, tbmovitensUncheckedUpdateInput>
    /**
     * Choose, which tbmovitens to update.
     */
    where: tbmovitensWhereUniqueInput
  }


  /**
   * tbmovitens updateMany
   */
  export type tbmovitensUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbmovitens.
     */
    data: XOR<tbmovitensUpdateManyMutationInput, tbmovitensUncheckedUpdateManyInput>
    /**
     * Filter which tbmovitens to update
     */
    where?: tbmovitensWhereInput
  }


  /**
   * tbmovitens upsert
   */
  export type tbmovitensUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    /**
     * The filter to search for the tbmovitens to update in case it exists.
     */
    where: tbmovitensWhereUniqueInput
    /**
     * In case the tbmovitens found by the `where` argument doesn't exist, create a new tbmovitens with this data.
     */
    create: XOR<tbmovitensCreateInput, tbmovitensUncheckedCreateInput>
    /**
     * In case the tbmovitens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbmovitensUpdateInput, tbmovitensUncheckedUpdateInput>
  }


  /**
   * tbmovitens delete
   */
  export type tbmovitensDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    /**
     * Filter which tbmovitens to delete.
     */
    where: tbmovitensWhereUniqueInput
  }


  /**
   * tbmovitens deleteMany
   */
  export type tbmovitensDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbmovitens to delete
     */
    where?: tbmovitensWhereInput
  }


  /**
   * tbmovitens.tblocais
   */
  export type tbmovitens$tblocaisArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tblocais
     */
    select?: tblocaisSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tblocaisInclude<ExtArgs> | null
    where?: tblocaisWhereInput
  }


  /**
   * tbmovitens.tbnfitens
   */
  export type tbmovitens$tbnfitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnfitens
     */
    select?: tbnfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfitensInclude<ExtArgs> | null
    where?: tbnfitensWhereInput
    orderBy?: tbnfitensOrderByWithRelationInput | tbnfitensOrderByWithRelationInput[]
    cursor?: tbnfitensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbnfitensScalarFieldEnum | TbnfitensScalarFieldEnum[]
  }


  /**
   * tbmovitens without action
   */
  export type tbmovitensDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
  }



  /**
   * Model tbnf
   */

  export type AggregateTbnf = {
    _count: TbnfCountAggregateOutputType | null
    _avg: TbnfAvgAggregateOutputType | null
    _sum: TbnfSumAggregateOutputType | null
    _min: TbnfMinAggregateOutputType | null
    _max: TbnfMaxAggregateOutputType | null
  }

  export type TbnfAvgAggregateOutputType = {
    idnf: number | null
    numnf: number | null
    idmovimento: number | null
    serienf: number | null
    idfor: number | null
    idusuario_inclusao: number | null
    vlrtotal: Decimal | null
  }

  export type TbnfSumAggregateOutputType = {
    idnf: number | null
    numnf: number | null
    idmovimento: number | null
    serienf: number | null
    idfor: number | null
    idusuario_inclusao: number | null
    vlrtotal: Decimal | null
  }

  export type TbnfMinAggregateOutputType = {
    idnf: number | null
    numnf: number | null
    idmovimento: number | null
    serienf: number | null
    idfor: number | null
    idusuario_inclusao: number | null
    dtemissao: Date | null
    vlrtotal: Decimal | null
    observacao: string | null
  }

  export type TbnfMaxAggregateOutputType = {
    idnf: number | null
    numnf: number | null
    idmovimento: number | null
    serienf: number | null
    idfor: number | null
    idusuario_inclusao: number | null
    dtemissao: Date | null
    vlrtotal: Decimal | null
    observacao: string | null
  }

  export type TbnfCountAggregateOutputType = {
    idnf: number
    numnf: number
    idmovimento: number
    serienf: number
    idfor: number
    idusuario_inclusao: number
    dtemissao: number
    vlrtotal: number
    observacao: number
    _all: number
  }


  export type TbnfAvgAggregateInputType = {
    idnf?: true
    numnf?: true
    idmovimento?: true
    serienf?: true
    idfor?: true
    idusuario_inclusao?: true
    vlrtotal?: true
  }

  export type TbnfSumAggregateInputType = {
    idnf?: true
    numnf?: true
    idmovimento?: true
    serienf?: true
    idfor?: true
    idusuario_inclusao?: true
    vlrtotal?: true
  }

  export type TbnfMinAggregateInputType = {
    idnf?: true
    numnf?: true
    idmovimento?: true
    serienf?: true
    idfor?: true
    idusuario_inclusao?: true
    dtemissao?: true
    vlrtotal?: true
    observacao?: true
  }

  export type TbnfMaxAggregateInputType = {
    idnf?: true
    numnf?: true
    idmovimento?: true
    serienf?: true
    idfor?: true
    idusuario_inclusao?: true
    dtemissao?: true
    vlrtotal?: true
    observacao?: true
  }

  export type TbnfCountAggregateInputType = {
    idnf?: true
    numnf?: true
    idmovimento?: true
    serienf?: true
    idfor?: true
    idusuario_inclusao?: true
    dtemissao?: true
    vlrtotal?: true
    observacao?: true
    _all?: true
  }

  export type TbnfAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbnf to aggregate.
     */
    where?: tbnfWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbnfs to fetch.
     */
    orderBy?: tbnfOrderByWithRelationInput | tbnfOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbnfWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbnfs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbnfs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbnfs
    **/
    _count?: true | TbnfCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbnfAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbnfSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbnfMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbnfMaxAggregateInputType
  }

  export type GetTbnfAggregateType<T extends TbnfAggregateArgs> = {
        [P in keyof T & keyof AggregateTbnf]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbnf[P]>
      : GetScalarType<T[P], AggregateTbnf[P]>
  }




  export type tbnfGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbnfWhereInput
    orderBy?: tbnfOrderByWithAggregationInput | tbnfOrderByWithAggregationInput[]
    by: TbnfScalarFieldEnum[] | TbnfScalarFieldEnum
    having?: tbnfScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbnfCountAggregateInputType | true
    _avg?: TbnfAvgAggregateInputType
    _sum?: TbnfSumAggregateInputType
    _min?: TbnfMinAggregateInputType
    _max?: TbnfMaxAggregateInputType
  }

  export type TbnfGroupByOutputType = {
    idnf: number
    numnf: number | null
    idmovimento: number | null
    serienf: number | null
    idfor: number | null
    idusuario_inclusao: number | null
    dtemissao: Date | null
    vlrtotal: Decimal | null
    observacao: string | null
    _count: TbnfCountAggregateOutputType | null
    _avg: TbnfAvgAggregateOutputType | null
    _sum: TbnfSumAggregateOutputType | null
    _min: TbnfMinAggregateOutputType | null
    _max: TbnfMaxAggregateOutputType | null
  }

  type GetTbnfGroupByPayload<T extends tbnfGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbnfGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbnfGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbnfGroupByOutputType[P]>
            : GetScalarType<T[P], TbnfGroupByOutputType[P]>
        }
      >
    >


  export type tbnfSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idnf?: boolean
    numnf?: boolean
    idmovimento?: boolean
    serienf?: boolean
    idfor?: boolean
    idusuario_inclusao?: boolean
    dtemissao?: boolean
    vlrtotal?: boolean
    observacao?: boolean
    tbmovimentos?: boolean | tbnf$tbmovimentosArgs<ExtArgs>
    tbfornecedores?: boolean | tbnf$tbfornecedoresArgs<ExtArgs>
    tbusuarios?: boolean | tbnf$tbusuariosArgs<ExtArgs>
    tbnfitens?: boolean | tbnf$tbnfitensArgs<ExtArgs>
    _count?: boolean | TbnfCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbnf"]>

  export type tbnfSelectScalar = {
    idnf?: boolean
    numnf?: boolean
    idmovimento?: boolean
    serienf?: boolean
    idfor?: boolean
    idusuario_inclusao?: boolean
    dtemissao?: boolean
    vlrtotal?: boolean
    observacao?: boolean
  }

  export type tbnfInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbmovimentos?: boolean | tbnf$tbmovimentosArgs<ExtArgs>
    tbfornecedores?: boolean | tbnf$tbfornecedoresArgs<ExtArgs>
    tbusuarios?: boolean | tbnf$tbusuariosArgs<ExtArgs>
    tbnfitens?: boolean | tbnf$tbnfitensArgs<ExtArgs>
    _count?: boolean | TbnfCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbnfPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbnf"
    objects: {
      tbmovimentos: Prisma.$tbmovimentosPayload<ExtArgs> | null
      tbfornecedores: Prisma.$tbfornecedoresPayload<ExtArgs> | null
      tbusuarios: Prisma.$tbusuariosPayload<ExtArgs> | null
      tbnfitens: Prisma.$tbnfitensPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idnf: number
      numnf: number | null
      idmovimento: number | null
      serienf: number | null
      idfor: number | null
      idusuario_inclusao: number | null
      dtemissao: Date | null
      vlrtotal: Prisma.Decimal | null
      observacao: string | null
    }, ExtArgs["result"]["tbnf"]>
    composites: {}
  }


  type tbnfGetPayload<S extends boolean | null | undefined | tbnfDefaultArgs> = $Result.GetResult<Prisma.$tbnfPayload, S>

  type tbnfCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbnfFindManyArgs, 'select' | 'include'> & {
      select?: TbnfCountAggregateInputType | true
    }

  export interface tbnfDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbnf'], meta: { name: 'tbnf' } }
    /**
     * Find zero or one Tbnf that matches the filter.
     * @param {tbnfFindUniqueArgs} args - Arguments to find a Tbnf
     * @example
     * // Get one Tbnf
     * const tbnf = await prisma.tbnf.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbnfFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbnfFindUniqueArgs<ExtArgs>>
    ): Prisma__tbnfClient<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbnf that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbnfFindUniqueOrThrowArgs} args - Arguments to find a Tbnf
     * @example
     * // Get one Tbnf
     * const tbnf = await prisma.tbnf.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbnfFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbnfFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbnfClient<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbnf that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbnfFindFirstArgs} args - Arguments to find a Tbnf
     * @example
     * // Get one Tbnf
     * const tbnf = await prisma.tbnf.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbnfFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbnfFindFirstArgs<ExtArgs>>
    ): Prisma__tbnfClient<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbnf that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbnfFindFirstOrThrowArgs} args - Arguments to find a Tbnf
     * @example
     * // Get one Tbnf
     * const tbnf = await prisma.tbnf.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbnfFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbnfFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbnfClient<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbnfs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbnfFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbnfs
     * const tbnfs = await prisma.tbnf.findMany()
     * 
     * // Get first 10 Tbnfs
     * const tbnfs = await prisma.tbnf.findMany({ take: 10 })
     * 
     * // Only select the `idnf`
     * const tbnfWithIdnfOnly = await prisma.tbnf.findMany({ select: { idnf: true } })
     * 
    **/
    findMany<T extends tbnfFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbnfFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbnf.
     * @param {tbnfCreateArgs} args - Arguments to create a Tbnf.
     * @example
     * // Create one Tbnf
     * const Tbnf = await prisma.tbnf.create({
     *   data: {
     *     // ... data to create a Tbnf
     *   }
     * })
     * 
    **/
    create<T extends tbnfCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbnfCreateArgs<ExtArgs>>
    ): Prisma__tbnfClient<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbnfs.
     *     @param {tbnfCreateManyArgs} args - Arguments to create many Tbnfs.
     *     @example
     *     // Create many Tbnfs
     *     const tbnf = await prisma.tbnf.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbnfCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbnfCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbnf.
     * @param {tbnfDeleteArgs} args - Arguments to delete one Tbnf.
     * @example
     * // Delete one Tbnf
     * const Tbnf = await prisma.tbnf.delete({
     *   where: {
     *     // ... filter to delete one Tbnf
     *   }
     * })
     * 
    **/
    delete<T extends tbnfDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbnfDeleteArgs<ExtArgs>>
    ): Prisma__tbnfClient<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbnf.
     * @param {tbnfUpdateArgs} args - Arguments to update one Tbnf.
     * @example
     * // Update one Tbnf
     * const tbnf = await prisma.tbnf.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbnfUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbnfUpdateArgs<ExtArgs>>
    ): Prisma__tbnfClient<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbnfs.
     * @param {tbnfDeleteManyArgs} args - Arguments to filter Tbnfs to delete.
     * @example
     * // Delete a few Tbnfs
     * const { count } = await prisma.tbnf.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbnfDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbnfDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbnfs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbnfUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbnfs
     * const tbnf = await prisma.tbnf.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbnfUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbnfUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbnf.
     * @param {tbnfUpsertArgs} args - Arguments to update or create a Tbnf.
     * @example
     * // Update or create a Tbnf
     * const tbnf = await prisma.tbnf.upsert({
     *   create: {
     *     // ... data to create a Tbnf
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbnf we want to update
     *   }
     * })
    **/
    upsert<T extends tbnfUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbnfUpsertArgs<ExtArgs>>
    ): Prisma__tbnfClient<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbnfs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbnfCountArgs} args - Arguments to filter Tbnfs to count.
     * @example
     * // Count the number of Tbnfs
     * const count = await prisma.tbnf.count({
     *   where: {
     *     // ... the filter for the Tbnfs we want to count
     *   }
     * })
    **/
    count<T extends tbnfCountArgs>(
      args?: Subset<T, tbnfCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbnfCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbnf.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbnfAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbnfAggregateArgs>(args: Subset<T, TbnfAggregateArgs>): Prisma.PrismaPromise<GetTbnfAggregateType<T>>

    /**
     * Group by Tbnf.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbnfGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbnfGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbnfGroupByArgs['orderBy'] }
        : { orderBy?: tbnfGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbnfGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbnfGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbnf model
   */
  readonly fields: tbnfFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbnf.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbnfClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbmovimentos<T extends tbnf$tbmovimentosArgs<ExtArgs> = {}>(args?: Subset<T, tbnf$tbmovimentosArgs<ExtArgs>>): Prisma__tbmovimentosClient<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbfornecedores<T extends tbnf$tbfornecedoresArgs<ExtArgs> = {}>(args?: Subset<T, tbnf$tbfornecedoresArgs<ExtArgs>>): Prisma__tbfornecedoresClient<$Result.GetResult<Prisma.$tbfornecedoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbusuarios<T extends tbnf$tbusuariosArgs<ExtArgs> = {}>(args?: Subset<T, tbnf$tbusuariosArgs<ExtArgs>>): Prisma__tbusuariosClient<$Result.GetResult<Prisma.$tbusuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbnfitens<T extends tbnf$tbnfitensArgs<ExtArgs> = {}>(args?: Subset<T, tbnf$tbnfitensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbnfitensPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbnf model
   */ 
  interface tbnfFieldRefs {
    readonly idnf: FieldRef<"tbnf", 'Int'>
    readonly numnf: FieldRef<"tbnf", 'Int'>
    readonly idmovimento: FieldRef<"tbnf", 'Int'>
    readonly serienf: FieldRef<"tbnf", 'Int'>
    readonly idfor: FieldRef<"tbnf", 'Int'>
    readonly idusuario_inclusao: FieldRef<"tbnf", 'Int'>
    readonly dtemissao: FieldRef<"tbnf", 'DateTime'>
    readonly vlrtotal: FieldRef<"tbnf", 'Decimal'>
    readonly observacao: FieldRef<"tbnf", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tbnf findUnique
   */
  export type tbnfFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
    /**
     * Filter, which tbnf to fetch.
     */
    where: tbnfWhereUniqueInput
  }


  /**
   * tbnf findUniqueOrThrow
   */
  export type tbnfFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
    /**
     * Filter, which tbnf to fetch.
     */
    where: tbnfWhereUniqueInput
  }


  /**
   * tbnf findFirst
   */
  export type tbnfFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
    /**
     * Filter, which tbnf to fetch.
     */
    where?: tbnfWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbnfs to fetch.
     */
    orderBy?: tbnfOrderByWithRelationInput | tbnfOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbnfs.
     */
    cursor?: tbnfWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbnfs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbnfs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbnfs.
     */
    distinct?: TbnfScalarFieldEnum | TbnfScalarFieldEnum[]
  }


  /**
   * tbnf findFirstOrThrow
   */
  export type tbnfFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
    /**
     * Filter, which tbnf to fetch.
     */
    where?: tbnfWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbnfs to fetch.
     */
    orderBy?: tbnfOrderByWithRelationInput | tbnfOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbnfs.
     */
    cursor?: tbnfWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbnfs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbnfs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbnfs.
     */
    distinct?: TbnfScalarFieldEnum | TbnfScalarFieldEnum[]
  }


  /**
   * tbnf findMany
   */
  export type tbnfFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
    /**
     * Filter, which tbnfs to fetch.
     */
    where?: tbnfWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbnfs to fetch.
     */
    orderBy?: tbnfOrderByWithRelationInput | tbnfOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbnfs.
     */
    cursor?: tbnfWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbnfs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbnfs.
     */
    skip?: number
    distinct?: TbnfScalarFieldEnum | TbnfScalarFieldEnum[]
  }


  /**
   * tbnf create
   */
  export type tbnfCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
    /**
     * The data needed to create a tbnf.
     */
    data?: XOR<tbnfCreateInput, tbnfUncheckedCreateInput>
  }


  /**
   * tbnf createMany
   */
  export type tbnfCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbnfs.
     */
    data: tbnfCreateManyInput | tbnfCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbnf update
   */
  export type tbnfUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
    /**
     * The data needed to update a tbnf.
     */
    data: XOR<tbnfUpdateInput, tbnfUncheckedUpdateInput>
    /**
     * Choose, which tbnf to update.
     */
    where: tbnfWhereUniqueInput
  }


  /**
   * tbnf updateMany
   */
  export type tbnfUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbnfs.
     */
    data: XOR<tbnfUpdateManyMutationInput, tbnfUncheckedUpdateManyInput>
    /**
     * Filter which tbnfs to update
     */
    where?: tbnfWhereInput
  }


  /**
   * tbnf upsert
   */
  export type tbnfUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
    /**
     * The filter to search for the tbnf to update in case it exists.
     */
    where: tbnfWhereUniqueInput
    /**
     * In case the tbnf found by the `where` argument doesn't exist, create a new tbnf with this data.
     */
    create: XOR<tbnfCreateInput, tbnfUncheckedCreateInput>
    /**
     * In case the tbnf was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbnfUpdateInput, tbnfUncheckedUpdateInput>
  }


  /**
   * tbnf delete
   */
  export type tbnfDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
    /**
     * Filter which tbnf to delete.
     */
    where: tbnfWhereUniqueInput
  }


  /**
   * tbnf deleteMany
   */
  export type tbnfDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbnfs to delete
     */
    where?: tbnfWhereInput
  }


  /**
   * tbnf.tbmovimentos
   */
  export type tbnf$tbmovimentosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
    where?: tbmovimentosWhereInput
  }


  /**
   * tbnf.tbfornecedores
   */
  export type tbnf$tbfornecedoresArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbfornecedores
     */
    select?: tbfornecedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbfornecedoresInclude<ExtArgs> | null
    where?: tbfornecedoresWhereInput
  }


  /**
   * tbnf.tbusuarios
   */
  export type tbnf$tbusuariosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbusuarios
     */
    select?: tbusuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbusuariosInclude<ExtArgs> | null
    where?: tbusuariosWhereInput
  }


  /**
   * tbnf.tbnfitens
   */
  export type tbnf$tbnfitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnfitens
     */
    select?: tbnfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfitensInclude<ExtArgs> | null
    where?: tbnfitensWhereInput
    orderBy?: tbnfitensOrderByWithRelationInput | tbnfitensOrderByWithRelationInput[]
    cursor?: tbnfitensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbnfitensScalarFieldEnum | TbnfitensScalarFieldEnum[]
  }


  /**
   * tbnf without action
   */
  export type tbnfDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
  }



  /**
   * Model tbnfitens
   */

  export type AggregateTbnfitens = {
    _count: TbnfitensCountAggregateOutputType | null
    _avg: TbnfitensAvgAggregateOutputType | null
    _sum: TbnfitensSumAggregateOutputType | null
    _min: TbnfitensMinAggregateOutputType | null
    _max: TbnfitensMaxAggregateOutputType | null
  }

  export type TbnfitensAvgAggregateOutputType = {
    idnf: number | null
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    vlrunitario: Decimal | null
    quantidade: Decimal | null
    vlrtotitem: Decimal | null
  }

  export type TbnfitensSumAggregateOutputType = {
    idnf: number | null
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    vlrunitario: Decimal | null
    quantidade: Decimal | null
    vlrtotitem: Decimal | null
  }

  export type TbnfitensMinAggregateOutputType = {
    idnf: number | null
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    vlrunitario: Decimal | null
    quantidade: Decimal | null
    vlrtotitem: Decimal | null
  }

  export type TbnfitensMaxAggregateOutputType = {
    idnf: number | null
    idmovimento: number | null
    seqitem: number | null
    idproduto: number | null
    vlrunitario: Decimal | null
    quantidade: Decimal | null
    vlrtotitem: Decimal | null
  }

  export type TbnfitensCountAggregateOutputType = {
    idnf: number
    idmovimento: number
    seqitem: number
    idproduto: number
    vlrunitario: number
    quantidade: number
    vlrtotitem: number
    _all: number
  }


  export type TbnfitensAvgAggregateInputType = {
    idnf?: true
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    vlrunitario?: true
    quantidade?: true
    vlrtotitem?: true
  }

  export type TbnfitensSumAggregateInputType = {
    idnf?: true
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    vlrunitario?: true
    quantidade?: true
    vlrtotitem?: true
  }

  export type TbnfitensMinAggregateInputType = {
    idnf?: true
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    vlrunitario?: true
    quantidade?: true
    vlrtotitem?: true
  }

  export type TbnfitensMaxAggregateInputType = {
    idnf?: true
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    vlrunitario?: true
    quantidade?: true
    vlrtotitem?: true
  }

  export type TbnfitensCountAggregateInputType = {
    idnf?: true
    idmovimento?: true
    seqitem?: true
    idproduto?: true
    vlrunitario?: true
    quantidade?: true
    vlrtotitem?: true
    _all?: true
  }

  export type TbnfitensAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbnfitens to aggregate.
     */
    where?: tbnfitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbnfitens to fetch.
     */
    orderBy?: tbnfitensOrderByWithRelationInput | tbnfitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbnfitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbnfitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbnfitens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbnfitens
    **/
    _count?: true | TbnfitensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbnfitensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbnfitensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbnfitensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbnfitensMaxAggregateInputType
  }

  export type GetTbnfitensAggregateType<T extends TbnfitensAggregateArgs> = {
        [P in keyof T & keyof AggregateTbnfitens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbnfitens[P]>
      : GetScalarType<T[P], AggregateTbnfitens[P]>
  }




  export type tbnfitensGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbnfitensWhereInput
    orderBy?: tbnfitensOrderByWithAggregationInput | tbnfitensOrderByWithAggregationInput[]
    by: TbnfitensScalarFieldEnum[] | TbnfitensScalarFieldEnum
    having?: tbnfitensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbnfitensCountAggregateInputType | true
    _avg?: TbnfitensAvgAggregateInputType
    _sum?: TbnfitensSumAggregateInputType
    _min?: TbnfitensMinAggregateInputType
    _max?: TbnfitensMaxAggregateInputType
  }

  export type TbnfitensGroupByOutputType = {
    idnf: number
    idmovimento: number | null
    seqitem: number
    idproduto: number
    vlrunitario: Decimal | null
    quantidade: Decimal | null
    vlrtotitem: Decimal | null
    _count: TbnfitensCountAggregateOutputType | null
    _avg: TbnfitensAvgAggregateOutputType | null
    _sum: TbnfitensSumAggregateOutputType | null
    _min: TbnfitensMinAggregateOutputType | null
    _max: TbnfitensMaxAggregateOutputType | null
  }

  type GetTbnfitensGroupByPayload<T extends tbnfitensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbnfitensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbnfitensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbnfitensGroupByOutputType[P]>
            : GetScalarType<T[P], TbnfitensGroupByOutputType[P]>
        }
      >
    >


  export type tbnfitensSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idnf?: boolean
    idmovimento?: boolean
    seqitem?: boolean
    idproduto?: boolean
    vlrunitario?: boolean
    quantidade?: boolean
    vlrtotitem?: boolean
    tbmovitens?: boolean | tbnfitens$tbmovitensArgs<ExtArgs>
    tbnf?: boolean | tbnfDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbnfitens"]>

  export type tbnfitensSelectScalar = {
    idnf?: boolean
    idmovimento?: boolean
    seqitem?: boolean
    idproduto?: boolean
    vlrunitario?: boolean
    quantidade?: boolean
    vlrtotitem?: boolean
  }

  export type tbnfitensInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbmovitens?: boolean | tbnfitens$tbmovitensArgs<ExtArgs>
    tbnf?: boolean | tbnfDefaultArgs<ExtArgs>
  }


  export type $tbnfitensPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbnfitens"
    objects: {
      tbmovitens: Prisma.$tbmovitensPayload<ExtArgs> | null
      tbnf: Prisma.$tbnfPayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      idnf: number
      idmovimento: number | null
      seqitem: number
      idproduto: number
      vlrunitario: Prisma.Decimal | null
      quantidade: Prisma.Decimal | null
      vlrtotitem: Prisma.Decimal | null
    }, ExtArgs["result"]["tbnfitens"]>
    composites: {}
  }


  type tbnfitensGetPayload<S extends boolean | null | undefined | tbnfitensDefaultArgs> = $Result.GetResult<Prisma.$tbnfitensPayload, S>

  type tbnfitensCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbnfitensFindManyArgs, 'select' | 'include'> & {
      select?: TbnfitensCountAggregateInputType | true
    }

  export interface tbnfitensDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbnfitens'], meta: { name: 'tbnfitens' } }
    /**
     * Find zero or one Tbnfitens that matches the filter.
     * @param {tbnfitensFindUniqueArgs} args - Arguments to find a Tbnfitens
     * @example
     * // Get one Tbnfitens
     * const tbnfitens = await prisma.tbnfitens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbnfitensFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbnfitensFindUniqueArgs<ExtArgs>>
    ): Prisma__tbnfitensClient<$Result.GetResult<Prisma.$tbnfitensPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbnfitens that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbnfitensFindUniqueOrThrowArgs} args - Arguments to find a Tbnfitens
     * @example
     * // Get one Tbnfitens
     * const tbnfitens = await prisma.tbnfitens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbnfitensFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbnfitensFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbnfitensClient<$Result.GetResult<Prisma.$tbnfitensPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbnfitens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbnfitensFindFirstArgs} args - Arguments to find a Tbnfitens
     * @example
     * // Get one Tbnfitens
     * const tbnfitens = await prisma.tbnfitens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbnfitensFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbnfitensFindFirstArgs<ExtArgs>>
    ): Prisma__tbnfitensClient<$Result.GetResult<Prisma.$tbnfitensPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbnfitens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbnfitensFindFirstOrThrowArgs} args - Arguments to find a Tbnfitens
     * @example
     * // Get one Tbnfitens
     * const tbnfitens = await prisma.tbnfitens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbnfitensFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbnfitensFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbnfitensClient<$Result.GetResult<Prisma.$tbnfitensPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbnfitens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbnfitensFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbnfitens
     * const tbnfitens = await prisma.tbnfitens.findMany()
     * 
     * // Get first 10 Tbnfitens
     * const tbnfitens = await prisma.tbnfitens.findMany({ take: 10 })
     * 
     * // Only select the `idnf`
     * const tbnfitensWithIdnfOnly = await prisma.tbnfitens.findMany({ select: { idnf: true } })
     * 
    **/
    findMany<T extends tbnfitensFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbnfitensFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbnfitensPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbnfitens.
     * @param {tbnfitensCreateArgs} args - Arguments to create a Tbnfitens.
     * @example
     * // Create one Tbnfitens
     * const Tbnfitens = await prisma.tbnfitens.create({
     *   data: {
     *     // ... data to create a Tbnfitens
     *   }
     * })
     * 
    **/
    create<T extends tbnfitensCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbnfitensCreateArgs<ExtArgs>>
    ): Prisma__tbnfitensClient<$Result.GetResult<Prisma.$tbnfitensPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbnfitens.
     *     @param {tbnfitensCreateManyArgs} args - Arguments to create many Tbnfitens.
     *     @example
     *     // Create many Tbnfitens
     *     const tbnfitens = await prisma.tbnfitens.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbnfitensCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbnfitensCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbnfitens.
     * @param {tbnfitensDeleteArgs} args - Arguments to delete one Tbnfitens.
     * @example
     * // Delete one Tbnfitens
     * const Tbnfitens = await prisma.tbnfitens.delete({
     *   where: {
     *     // ... filter to delete one Tbnfitens
     *   }
     * })
     * 
    **/
    delete<T extends tbnfitensDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbnfitensDeleteArgs<ExtArgs>>
    ): Prisma__tbnfitensClient<$Result.GetResult<Prisma.$tbnfitensPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbnfitens.
     * @param {tbnfitensUpdateArgs} args - Arguments to update one Tbnfitens.
     * @example
     * // Update one Tbnfitens
     * const tbnfitens = await prisma.tbnfitens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbnfitensUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbnfitensUpdateArgs<ExtArgs>>
    ): Prisma__tbnfitensClient<$Result.GetResult<Prisma.$tbnfitensPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbnfitens.
     * @param {tbnfitensDeleteManyArgs} args - Arguments to filter Tbnfitens to delete.
     * @example
     * // Delete a few Tbnfitens
     * const { count } = await prisma.tbnfitens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbnfitensDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbnfitensDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbnfitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbnfitensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbnfitens
     * const tbnfitens = await prisma.tbnfitens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbnfitensUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbnfitensUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbnfitens.
     * @param {tbnfitensUpsertArgs} args - Arguments to update or create a Tbnfitens.
     * @example
     * // Update or create a Tbnfitens
     * const tbnfitens = await prisma.tbnfitens.upsert({
     *   create: {
     *     // ... data to create a Tbnfitens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbnfitens we want to update
     *   }
     * })
    **/
    upsert<T extends tbnfitensUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbnfitensUpsertArgs<ExtArgs>>
    ): Prisma__tbnfitensClient<$Result.GetResult<Prisma.$tbnfitensPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbnfitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbnfitensCountArgs} args - Arguments to filter Tbnfitens to count.
     * @example
     * // Count the number of Tbnfitens
     * const count = await prisma.tbnfitens.count({
     *   where: {
     *     // ... the filter for the Tbnfitens we want to count
     *   }
     * })
    **/
    count<T extends tbnfitensCountArgs>(
      args?: Subset<T, tbnfitensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbnfitensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbnfitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbnfitensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbnfitensAggregateArgs>(args: Subset<T, TbnfitensAggregateArgs>): Prisma.PrismaPromise<GetTbnfitensAggregateType<T>>

    /**
     * Group by Tbnfitens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbnfitensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbnfitensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbnfitensGroupByArgs['orderBy'] }
        : { orderBy?: tbnfitensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbnfitensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbnfitensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbnfitens model
   */
  readonly fields: tbnfitensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbnfitens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbnfitensClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbmovitens<T extends tbnfitens$tbmovitensArgs<ExtArgs> = {}>(args?: Subset<T, tbnfitens$tbmovitensArgs<ExtArgs>>): Prisma__tbmovitensClient<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbnf<T extends tbnfDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbnfDefaultArgs<ExtArgs>>): Prisma__tbnfClient<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbnfitens model
   */ 
  interface tbnfitensFieldRefs {
    readonly idnf: FieldRef<"tbnfitens", 'Int'>
    readonly idmovimento: FieldRef<"tbnfitens", 'Int'>
    readonly seqitem: FieldRef<"tbnfitens", 'Int'>
    readonly idproduto: FieldRef<"tbnfitens", 'Int'>
    readonly vlrunitario: FieldRef<"tbnfitens", 'Decimal'>
    readonly quantidade: FieldRef<"tbnfitens", 'Decimal'>
    readonly vlrtotitem: FieldRef<"tbnfitens", 'Decimal'>
  }
    

  // Custom InputTypes

  /**
   * tbnfitens findUnique
   */
  export type tbnfitensFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnfitens
     */
    select?: tbnfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfitensInclude<ExtArgs> | null
    /**
     * Filter, which tbnfitens to fetch.
     */
    where: tbnfitensWhereUniqueInput
  }


  /**
   * tbnfitens findUniqueOrThrow
   */
  export type tbnfitensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnfitens
     */
    select?: tbnfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfitensInclude<ExtArgs> | null
    /**
     * Filter, which tbnfitens to fetch.
     */
    where: tbnfitensWhereUniqueInput
  }


  /**
   * tbnfitens findFirst
   */
  export type tbnfitensFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnfitens
     */
    select?: tbnfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfitensInclude<ExtArgs> | null
    /**
     * Filter, which tbnfitens to fetch.
     */
    where?: tbnfitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbnfitens to fetch.
     */
    orderBy?: tbnfitensOrderByWithRelationInput | tbnfitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbnfitens.
     */
    cursor?: tbnfitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbnfitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbnfitens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbnfitens.
     */
    distinct?: TbnfitensScalarFieldEnum | TbnfitensScalarFieldEnum[]
  }


  /**
   * tbnfitens findFirstOrThrow
   */
  export type tbnfitensFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnfitens
     */
    select?: tbnfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfitensInclude<ExtArgs> | null
    /**
     * Filter, which tbnfitens to fetch.
     */
    where?: tbnfitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbnfitens to fetch.
     */
    orderBy?: tbnfitensOrderByWithRelationInput | tbnfitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbnfitens.
     */
    cursor?: tbnfitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbnfitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbnfitens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbnfitens.
     */
    distinct?: TbnfitensScalarFieldEnum | TbnfitensScalarFieldEnum[]
  }


  /**
   * tbnfitens findMany
   */
  export type tbnfitensFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnfitens
     */
    select?: tbnfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfitensInclude<ExtArgs> | null
    /**
     * Filter, which tbnfitens to fetch.
     */
    where?: tbnfitensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbnfitens to fetch.
     */
    orderBy?: tbnfitensOrderByWithRelationInput | tbnfitensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbnfitens.
     */
    cursor?: tbnfitensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbnfitens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbnfitens.
     */
    skip?: number
    distinct?: TbnfitensScalarFieldEnum | TbnfitensScalarFieldEnum[]
  }


  /**
   * tbnfitens create
   */
  export type tbnfitensCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnfitens
     */
    select?: tbnfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfitensInclude<ExtArgs> | null
    /**
     * The data needed to create a tbnfitens.
     */
    data: XOR<tbnfitensCreateInput, tbnfitensUncheckedCreateInput>
  }


  /**
   * tbnfitens createMany
   */
  export type tbnfitensCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbnfitens.
     */
    data: tbnfitensCreateManyInput | tbnfitensCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbnfitens update
   */
  export type tbnfitensUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnfitens
     */
    select?: tbnfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfitensInclude<ExtArgs> | null
    /**
     * The data needed to update a tbnfitens.
     */
    data: XOR<tbnfitensUpdateInput, tbnfitensUncheckedUpdateInput>
    /**
     * Choose, which tbnfitens to update.
     */
    where: tbnfitensWhereUniqueInput
  }


  /**
   * tbnfitens updateMany
   */
  export type tbnfitensUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbnfitens.
     */
    data: XOR<tbnfitensUpdateManyMutationInput, tbnfitensUncheckedUpdateManyInput>
    /**
     * Filter which tbnfitens to update
     */
    where?: tbnfitensWhereInput
  }


  /**
   * tbnfitens upsert
   */
  export type tbnfitensUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnfitens
     */
    select?: tbnfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfitensInclude<ExtArgs> | null
    /**
     * The filter to search for the tbnfitens to update in case it exists.
     */
    where: tbnfitensWhereUniqueInput
    /**
     * In case the tbnfitens found by the `where` argument doesn't exist, create a new tbnfitens with this data.
     */
    create: XOR<tbnfitensCreateInput, tbnfitensUncheckedCreateInput>
    /**
     * In case the tbnfitens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbnfitensUpdateInput, tbnfitensUncheckedUpdateInput>
  }


  /**
   * tbnfitens delete
   */
  export type tbnfitensDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnfitens
     */
    select?: tbnfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfitensInclude<ExtArgs> | null
    /**
     * Filter which tbnfitens to delete.
     */
    where: tbnfitensWhereUniqueInput
  }


  /**
   * tbnfitens deleteMany
   */
  export type tbnfitensDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbnfitens to delete
     */
    where?: tbnfitensWhereInput
  }


  /**
   * tbnfitens.tbmovitens
   */
  export type tbnfitens$tbmovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    where?: tbmovitensWhereInput
  }


  /**
   * tbnfitens without action
   */
  export type tbnfitensDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnfitens
     */
    select?: tbnfitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfitensInclude<ExtArgs> | null
  }



  /**
   * Model tbprodcomposicao
   */

  export type AggregateTbprodcomposicao = {
    _count: TbprodcomposicaoCountAggregateOutputType | null
    _avg: TbprodcomposicaoAvgAggregateOutputType | null
    _sum: TbprodcomposicaoSumAggregateOutputType | null
    _min: TbprodcomposicaoMinAggregateOutputType | null
    _max: TbprodcomposicaoMaxAggregateOutputType | null
  }

  export type TbprodcomposicaoAvgAggregateOutputType = {
    idcomp: number | null
    idproduto: number | null
    idprodutocomp: number | null
    quantidade: Decimal | null
  }

  export type TbprodcomposicaoSumAggregateOutputType = {
    idcomp: number | null
    idproduto: number | null
    idprodutocomp: number | null
    quantidade: Decimal | null
  }

  export type TbprodcomposicaoMinAggregateOutputType = {
    idcomp: number | null
    idproduto: number | null
    idprodutocomp: number | null
    quantidade: Decimal | null
  }

  export type TbprodcomposicaoMaxAggregateOutputType = {
    idcomp: number | null
    idproduto: number | null
    idprodutocomp: number | null
    quantidade: Decimal | null
  }

  export type TbprodcomposicaoCountAggregateOutputType = {
    idcomp: number
    idproduto: number
    idprodutocomp: number
    quantidade: number
    _all: number
  }


  export type TbprodcomposicaoAvgAggregateInputType = {
    idcomp?: true
    idproduto?: true
    idprodutocomp?: true
    quantidade?: true
  }

  export type TbprodcomposicaoSumAggregateInputType = {
    idcomp?: true
    idproduto?: true
    idprodutocomp?: true
    quantidade?: true
  }

  export type TbprodcomposicaoMinAggregateInputType = {
    idcomp?: true
    idproduto?: true
    idprodutocomp?: true
    quantidade?: true
  }

  export type TbprodcomposicaoMaxAggregateInputType = {
    idcomp?: true
    idproduto?: true
    idprodutocomp?: true
    quantidade?: true
  }

  export type TbprodcomposicaoCountAggregateInputType = {
    idcomp?: true
    idproduto?: true
    idprodutocomp?: true
    quantidade?: true
    _all?: true
  }

  export type TbprodcomposicaoAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbprodcomposicao to aggregate.
     */
    where?: tbprodcomposicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbprodcomposicaos to fetch.
     */
    orderBy?: tbprodcomposicaoOrderByWithRelationInput | tbprodcomposicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbprodcomposicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbprodcomposicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbprodcomposicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbprodcomposicaos
    **/
    _count?: true | TbprodcomposicaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbprodcomposicaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbprodcomposicaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbprodcomposicaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbprodcomposicaoMaxAggregateInputType
  }

  export type GetTbprodcomposicaoAggregateType<T extends TbprodcomposicaoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbprodcomposicao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbprodcomposicao[P]>
      : GetScalarType<T[P], AggregateTbprodcomposicao[P]>
  }




  export type tbprodcomposicaoGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbprodcomposicaoWhereInput
    orderBy?: tbprodcomposicaoOrderByWithAggregationInput | tbprodcomposicaoOrderByWithAggregationInput[]
    by: TbprodcomposicaoScalarFieldEnum[] | TbprodcomposicaoScalarFieldEnum
    having?: tbprodcomposicaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbprodcomposicaoCountAggregateInputType | true
    _avg?: TbprodcomposicaoAvgAggregateInputType
    _sum?: TbprodcomposicaoSumAggregateInputType
    _min?: TbprodcomposicaoMinAggregateInputType
    _max?: TbprodcomposicaoMaxAggregateInputType
  }

  export type TbprodcomposicaoGroupByOutputType = {
    idcomp: number
    idproduto: number
    idprodutocomp: number
    quantidade: Decimal | null
    _count: TbprodcomposicaoCountAggregateOutputType | null
    _avg: TbprodcomposicaoAvgAggregateOutputType | null
    _sum: TbprodcomposicaoSumAggregateOutputType | null
    _min: TbprodcomposicaoMinAggregateOutputType | null
    _max: TbprodcomposicaoMaxAggregateOutputType | null
  }

  type GetTbprodcomposicaoGroupByPayload<T extends tbprodcomposicaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbprodcomposicaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbprodcomposicaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbprodcomposicaoGroupByOutputType[P]>
            : GetScalarType<T[P], TbprodcomposicaoGroupByOutputType[P]>
        }
      >
    >


  export type tbprodcomposicaoSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idcomp?: boolean
    idproduto?: boolean
    idprodutocomp?: boolean
    quantidade?: boolean
    tbprodutos_tbprodcomposicao_idprodutoTotbprodutos?: boolean | tbprodutosDefaultArgs<ExtArgs>
    tbprodutos_tbprodcomposicao_idprodutocompTotbprodutos?: boolean | tbprodutosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbprodcomposicao"]>

  export type tbprodcomposicaoSelectScalar = {
    idcomp?: boolean
    idproduto?: boolean
    idprodutocomp?: boolean
    quantidade?: boolean
  }

  export type tbprodcomposicaoInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbprodutos_tbprodcomposicao_idprodutoTotbprodutos?: boolean | tbprodutosDefaultArgs<ExtArgs>
    tbprodutos_tbprodcomposicao_idprodutocompTotbprodutos?: boolean | tbprodutosDefaultArgs<ExtArgs>
  }


  export type $tbprodcomposicaoPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbprodcomposicao"
    objects: {
      tbprodutos_tbprodcomposicao_idprodutoTotbprodutos: Prisma.$tbprodutosPayload<ExtArgs>
      tbprodutos_tbprodcomposicao_idprodutocompTotbprodutos: Prisma.$tbprodutosPayload<ExtArgs>
    }
    scalars: $Extensions.GetResult<{
      idcomp: number
      idproduto: number
      idprodutocomp: number
      quantidade: Prisma.Decimal | null
    }, ExtArgs["result"]["tbprodcomposicao"]>
    composites: {}
  }


  type tbprodcomposicaoGetPayload<S extends boolean | null | undefined | tbprodcomposicaoDefaultArgs> = $Result.GetResult<Prisma.$tbprodcomposicaoPayload, S>

  type tbprodcomposicaoCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbprodcomposicaoFindManyArgs, 'select' | 'include'> & {
      select?: TbprodcomposicaoCountAggregateInputType | true
    }

  export interface tbprodcomposicaoDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbprodcomposicao'], meta: { name: 'tbprodcomposicao' } }
    /**
     * Find zero or one Tbprodcomposicao that matches the filter.
     * @param {tbprodcomposicaoFindUniqueArgs} args - Arguments to find a Tbprodcomposicao
     * @example
     * // Get one Tbprodcomposicao
     * const tbprodcomposicao = await prisma.tbprodcomposicao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbprodcomposicaoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbprodcomposicaoFindUniqueArgs<ExtArgs>>
    ): Prisma__tbprodcomposicaoClient<$Result.GetResult<Prisma.$tbprodcomposicaoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbprodcomposicao that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbprodcomposicaoFindUniqueOrThrowArgs} args - Arguments to find a Tbprodcomposicao
     * @example
     * // Get one Tbprodcomposicao
     * const tbprodcomposicao = await prisma.tbprodcomposicao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbprodcomposicaoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbprodcomposicaoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbprodcomposicaoClient<$Result.GetResult<Prisma.$tbprodcomposicaoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbprodcomposicao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbprodcomposicaoFindFirstArgs} args - Arguments to find a Tbprodcomposicao
     * @example
     * // Get one Tbprodcomposicao
     * const tbprodcomposicao = await prisma.tbprodcomposicao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbprodcomposicaoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbprodcomposicaoFindFirstArgs<ExtArgs>>
    ): Prisma__tbprodcomposicaoClient<$Result.GetResult<Prisma.$tbprodcomposicaoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbprodcomposicao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbprodcomposicaoFindFirstOrThrowArgs} args - Arguments to find a Tbprodcomposicao
     * @example
     * // Get one Tbprodcomposicao
     * const tbprodcomposicao = await prisma.tbprodcomposicao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbprodcomposicaoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbprodcomposicaoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbprodcomposicaoClient<$Result.GetResult<Prisma.$tbprodcomposicaoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbprodcomposicaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbprodcomposicaoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbprodcomposicaos
     * const tbprodcomposicaos = await prisma.tbprodcomposicao.findMany()
     * 
     * // Get first 10 Tbprodcomposicaos
     * const tbprodcomposicaos = await prisma.tbprodcomposicao.findMany({ take: 10 })
     * 
     * // Only select the `idcomp`
     * const tbprodcomposicaoWithIdcompOnly = await prisma.tbprodcomposicao.findMany({ select: { idcomp: true } })
     * 
    **/
    findMany<T extends tbprodcomposicaoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbprodcomposicaoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbprodcomposicaoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbprodcomposicao.
     * @param {tbprodcomposicaoCreateArgs} args - Arguments to create a Tbprodcomposicao.
     * @example
     * // Create one Tbprodcomposicao
     * const Tbprodcomposicao = await prisma.tbprodcomposicao.create({
     *   data: {
     *     // ... data to create a Tbprodcomposicao
     *   }
     * })
     * 
    **/
    create<T extends tbprodcomposicaoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbprodcomposicaoCreateArgs<ExtArgs>>
    ): Prisma__tbprodcomposicaoClient<$Result.GetResult<Prisma.$tbprodcomposicaoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbprodcomposicaos.
     *     @param {tbprodcomposicaoCreateManyArgs} args - Arguments to create many Tbprodcomposicaos.
     *     @example
     *     // Create many Tbprodcomposicaos
     *     const tbprodcomposicao = await prisma.tbprodcomposicao.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbprodcomposicaoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbprodcomposicaoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbprodcomposicao.
     * @param {tbprodcomposicaoDeleteArgs} args - Arguments to delete one Tbprodcomposicao.
     * @example
     * // Delete one Tbprodcomposicao
     * const Tbprodcomposicao = await prisma.tbprodcomposicao.delete({
     *   where: {
     *     // ... filter to delete one Tbprodcomposicao
     *   }
     * })
     * 
    **/
    delete<T extends tbprodcomposicaoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbprodcomposicaoDeleteArgs<ExtArgs>>
    ): Prisma__tbprodcomposicaoClient<$Result.GetResult<Prisma.$tbprodcomposicaoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbprodcomposicao.
     * @param {tbprodcomposicaoUpdateArgs} args - Arguments to update one Tbprodcomposicao.
     * @example
     * // Update one Tbprodcomposicao
     * const tbprodcomposicao = await prisma.tbprodcomposicao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbprodcomposicaoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbprodcomposicaoUpdateArgs<ExtArgs>>
    ): Prisma__tbprodcomposicaoClient<$Result.GetResult<Prisma.$tbprodcomposicaoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbprodcomposicaos.
     * @param {tbprodcomposicaoDeleteManyArgs} args - Arguments to filter Tbprodcomposicaos to delete.
     * @example
     * // Delete a few Tbprodcomposicaos
     * const { count } = await prisma.tbprodcomposicao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbprodcomposicaoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbprodcomposicaoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbprodcomposicaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbprodcomposicaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbprodcomposicaos
     * const tbprodcomposicao = await prisma.tbprodcomposicao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbprodcomposicaoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbprodcomposicaoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbprodcomposicao.
     * @param {tbprodcomposicaoUpsertArgs} args - Arguments to update or create a Tbprodcomposicao.
     * @example
     * // Update or create a Tbprodcomposicao
     * const tbprodcomposicao = await prisma.tbprodcomposicao.upsert({
     *   create: {
     *     // ... data to create a Tbprodcomposicao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbprodcomposicao we want to update
     *   }
     * })
    **/
    upsert<T extends tbprodcomposicaoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbprodcomposicaoUpsertArgs<ExtArgs>>
    ): Prisma__tbprodcomposicaoClient<$Result.GetResult<Prisma.$tbprodcomposicaoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbprodcomposicaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbprodcomposicaoCountArgs} args - Arguments to filter Tbprodcomposicaos to count.
     * @example
     * // Count the number of Tbprodcomposicaos
     * const count = await prisma.tbprodcomposicao.count({
     *   where: {
     *     // ... the filter for the Tbprodcomposicaos we want to count
     *   }
     * })
    **/
    count<T extends tbprodcomposicaoCountArgs>(
      args?: Subset<T, tbprodcomposicaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbprodcomposicaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbprodcomposicao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbprodcomposicaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbprodcomposicaoAggregateArgs>(args: Subset<T, TbprodcomposicaoAggregateArgs>): Prisma.PrismaPromise<GetTbprodcomposicaoAggregateType<T>>

    /**
     * Group by Tbprodcomposicao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbprodcomposicaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbprodcomposicaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbprodcomposicaoGroupByArgs['orderBy'] }
        : { orderBy?: tbprodcomposicaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbprodcomposicaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbprodcomposicaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbprodcomposicao model
   */
  readonly fields: tbprodcomposicaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbprodcomposicao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbprodcomposicaoClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbprodutos_tbprodcomposicao_idprodutoTotbprodutos<T extends tbprodutosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbprodutosDefaultArgs<ExtArgs>>): Prisma__tbprodutosClient<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbprodutos_tbprodcomposicao_idprodutocompTotbprodutos<T extends tbprodutosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbprodutosDefaultArgs<ExtArgs>>): Prisma__tbprodutosClient<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbprodcomposicao model
   */ 
  interface tbprodcomposicaoFieldRefs {
    readonly idcomp: FieldRef<"tbprodcomposicao", 'Int'>
    readonly idproduto: FieldRef<"tbprodcomposicao", 'Int'>
    readonly idprodutocomp: FieldRef<"tbprodcomposicao", 'Int'>
    readonly quantidade: FieldRef<"tbprodcomposicao", 'Decimal'>
  }
    

  // Custom InputTypes

  /**
   * tbprodcomposicao findUnique
   */
  export type tbprodcomposicaoFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodcomposicao
     */
    select?: tbprodcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodcomposicaoInclude<ExtArgs> | null
    /**
     * Filter, which tbprodcomposicao to fetch.
     */
    where: tbprodcomposicaoWhereUniqueInput
  }


  /**
   * tbprodcomposicao findUniqueOrThrow
   */
  export type tbprodcomposicaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodcomposicao
     */
    select?: tbprodcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodcomposicaoInclude<ExtArgs> | null
    /**
     * Filter, which tbprodcomposicao to fetch.
     */
    where: tbprodcomposicaoWhereUniqueInput
  }


  /**
   * tbprodcomposicao findFirst
   */
  export type tbprodcomposicaoFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodcomposicao
     */
    select?: tbprodcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodcomposicaoInclude<ExtArgs> | null
    /**
     * Filter, which tbprodcomposicao to fetch.
     */
    where?: tbprodcomposicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbprodcomposicaos to fetch.
     */
    orderBy?: tbprodcomposicaoOrderByWithRelationInput | tbprodcomposicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbprodcomposicaos.
     */
    cursor?: tbprodcomposicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbprodcomposicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbprodcomposicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbprodcomposicaos.
     */
    distinct?: TbprodcomposicaoScalarFieldEnum | TbprodcomposicaoScalarFieldEnum[]
  }


  /**
   * tbprodcomposicao findFirstOrThrow
   */
  export type tbprodcomposicaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodcomposicao
     */
    select?: tbprodcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodcomposicaoInclude<ExtArgs> | null
    /**
     * Filter, which tbprodcomposicao to fetch.
     */
    where?: tbprodcomposicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbprodcomposicaos to fetch.
     */
    orderBy?: tbprodcomposicaoOrderByWithRelationInput | tbprodcomposicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbprodcomposicaos.
     */
    cursor?: tbprodcomposicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbprodcomposicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbprodcomposicaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbprodcomposicaos.
     */
    distinct?: TbprodcomposicaoScalarFieldEnum | TbprodcomposicaoScalarFieldEnum[]
  }


  /**
   * tbprodcomposicao findMany
   */
  export type tbprodcomposicaoFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodcomposicao
     */
    select?: tbprodcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodcomposicaoInclude<ExtArgs> | null
    /**
     * Filter, which tbprodcomposicaos to fetch.
     */
    where?: tbprodcomposicaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbprodcomposicaos to fetch.
     */
    orderBy?: tbprodcomposicaoOrderByWithRelationInput | tbprodcomposicaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbprodcomposicaos.
     */
    cursor?: tbprodcomposicaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbprodcomposicaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbprodcomposicaos.
     */
    skip?: number
    distinct?: TbprodcomposicaoScalarFieldEnum | TbprodcomposicaoScalarFieldEnum[]
  }


  /**
   * tbprodcomposicao create
   */
  export type tbprodcomposicaoCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodcomposicao
     */
    select?: tbprodcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodcomposicaoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbprodcomposicao.
     */
    data: XOR<tbprodcomposicaoCreateInput, tbprodcomposicaoUncheckedCreateInput>
  }


  /**
   * tbprodcomposicao createMany
   */
  export type tbprodcomposicaoCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbprodcomposicaos.
     */
    data: tbprodcomposicaoCreateManyInput | tbprodcomposicaoCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbprodcomposicao update
   */
  export type tbprodcomposicaoUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodcomposicao
     */
    select?: tbprodcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodcomposicaoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbprodcomposicao.
     */
    data: XOR<tbprodcomposicaoUpdateInput, tbprodcomposicaoUncheckedUpdateInput>
    /**
     * Choose, which tbprodcomposicao to update.
     */
    where: tbprodcomposicaoWhereUniqueInput
  }


  /**
   * tbprodcomposicao updateMany
   */
  export type tbprodcomposicaoUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbprodcomposicaos.
     */
    data: XOR<tbprodcomposicaoUpdateManyMutationInput, tbprodcomposicaoUncheckedUpdateManyInput>
    /**
     * Filter which tbprodcomposicaos to update
     */
    where?: tbprodcomposicaoWhereInput
  }


  /**
   * tbprodcomposicao upsert
   */
  export type tbprodcomposicaoUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodcomposicao
     */
    select?: tbprodcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodcomposicaoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbprodcomposicao to update in case it exists.
     */
    where: tbprodcomposicaoWhereUniqueInput
    /**
     * In case the tbprodcomposicao found by the `where` argument doesn't exist, create a new tbprodcomposicao with this data.
     */
    create: XOR<tbprodcomposicaoCreateInput, tbprodcomposicaoUncheckedCreateInput>
    /**
     * In case the tbprodcomposicao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbprodcomposicaoUpdateInput, tbprodcomposicaoUncheckedUpdateInput>
  }


  /**
   * tbprodcomposicao delete
   */
  export type tbprodcomposicaoDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodcomposicao
     */
    select?: tbprodcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodcomposicaoInclude<ExtArgs> | null
    /**
     * Filter which tbprodcomposicao to delete.
     */
    where: tbprodcomposicaoWhereUniqueInput
  }


  /**
   * tbprodcomposicao deleteMany
   */
  export type tbprodcomposicaoDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbprodcomposicaos to delete
     */
    where?: tbprodcomposicaoWhereInput
  }


  /**
   * tbprodcomposicao without action
   */
  export type tbprodcomposicaoDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodcomposicao
     */
    select?: tbprodcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodcomposicaoInclude<ExtArgs> | null
  }



  /**
   * Model tbprodutos
   */

  export type AggregateTbprodutos = {
    _count: TbprodutosCountAggregateOutputType | null
    _avg: TbprodutosAvgAggregateOutputType | null
    _sum: TbprodutosSumAggregateOutputType | null
    _min: TbprodutosMinAggregateOutputType | null
    _max: TbprodutosMaxAggregateOutputType | null
  }

  export type TbprodutosAvgAggregateOutputType = {
    idproduto: number | null
    idtipprod: number | null
    idunidade: number | null
    quantminima: number | null
  }

  export type TbprodutosSumAggregateOutputType = {
    idproduto: number | null
    idtipprod: number | null
    idunidade: number | null
    quantminima: number | null
  }

  export type TbprodutosMinAggregateOutputType = {
    idproduto: number | null
    nomeprod: string | null
    idtipprod: number | null
    idunidade: number | null
    quantminima: number | null
  }

  export type TbprodutosMaxAggregateOutputType = {
    idproduto: number | null
    nomeprod: string | null
    idtipprod: number | null
    idunidade: number | null
    quantminima: number | null
  }

  export type TbprodutosCountAggregateOutputType = {
    idproduto: number
    nomeprod: number
    idtipprod: number
    idunidade: number
    quantminima: number
    _all: number
  }


  export type TbprodutosAvgAggregateInputType = {
    idproduto?: true
    idtipprod?: true
    idunidade?: true
    quantminima?: true
  }

  export type TbprodutosSumAggregateInputType = {
    idproduto?: true
    idtipprod?: true
    idunidade?: true
    quantminima?: true
  }

  export type TbprodutosMinAggregateInputType = {
    idproduto?: true
    nomeprod?: true
    idtipprod?: true
    idunidade?: true
    quantminima?: true
  }

  export type TbprodutosMaxAggregateInputType = {
    idproduto?: true
    nomeprod?: true
    idtipprod?: true
    idunidade?: true
    quantminima?: true
  }

  export type TbprodutosCountAggregateInputType = {
    idproduto?: true
    nomeprod?: true
    idtipprod?: true
    idunidade?: true
    quantminima?: true
    _all?: true
  }

  export type TbprodutosAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbprodutos to aggregate.
     */
    where?: tbprodutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbprodutos to fetch.
     */
    orderBy?: tbprodutosOrderByWithRelationInput | tbprodutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbprodutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbprodutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbprodutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbprodutos
    **/
    _count?: true | TbprodutosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbprodutosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbprodutosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbprodutosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbprodutosMaxAggregateInputType
  }

  export type GetTbprodutosAggregateType<T extends TbprodutosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbprodutos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbprodutos[P]>
      : GetScalarType<T[P], AggregateTbprodutos[P]>
  }




  export type tbprodutosGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbprodutosWhereInput
    orderBy?: tbprodutosOrderByWithAggregationInput | tbprodutosOrderByWithAggregationInput[]
    by: TbprodutosScalarFieldEnum[] | TbprodutosScalarFieldEnum
    having?: tbprodutosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbprodutosCountAggregateInputType | true
    _avg?: TbprodutosAvgAggregateInputType
    _sum?: TbprodutosSumAggregateInputType
    _min?: TbprodutosMinAggregateInputType
    _max?: TbprodutosMaxAggregateInputType
  }

  export type TbprodutosGroupByOutputType = {
    idproduto: number
    nomeprod: string | null
    idtipprod: number | null
    idunidade: number | null
    quantminima: number | null
    _count: TbprodutosCountAggregateOutputType | null
    _avg: TbprodutosAvgAggregateOutputType | null
    _sum: TbprodutosSumAggregateOutputType | null
    _min: TbprodutosMinAggregateOutputType | null
    _max: TbprodutosMaxAggregateOutputType | null
  }

  type GetTbprodutosGroupByPayload<T extends tbprodutosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbprodutosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbprodutosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbprodutosGroupByOutputType[P]>
            : GetScalarType<T[P], TbprodutosGroupByOutputType[P]>
        }
      >
    >


  export type tbprodutosSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idproduto?: boolean
    nomeprod?: boolean
    idtipprod?: boolean
    idunidade?: boolean
    quantminima?: boolean
    tbestoque?: boolean | tbprodutos$tbestoqueArgs<ExtArgs>
    tbmovitens?: boolean | tbprodutos$tbmovitensArgs<ExtArgs>
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: boolean | tbprodutos$tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosArgs<ExtArgs>
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: boolean | tbprodutos$tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosArgs<ExtArgs>
    tbtiposprodutos?: boolean | tbprodutos$tbtiposprodutosArgs<ExtArgs>
    tbunidademedida?: boolean | tbprodutos$tbunidademedidaArgs<ExtArgs>
    _count?: boolean | TbprodutosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbprodutos"]>

  export type tbprodutosSelectScalar = {
    idproduto?: boolean
    nomeprod?: boolean
    idtipprod?: boolean
    idunidade?: boolean
    quantminima?: boolean
  }

  export type tbprodutosInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbestoque?: boolean | tbprodutos$tbestoqueArgs<ExtArgs>
    tbmovitens?: boolean | tbprodutos$tbmovitensArgs<ExtArgs>
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: boolean | tbprodutos$tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosArgs<ExtArgs>
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: boolean | tbprodutos$tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosArgs<ExtArgs>
    tbtiposprodutos?: boolean | tbprodutos$tbtiposprodutosArgs<ExtArgs>
    tbunidademedida?: boolean | tbprodutos$tbunidademedidaArgs<ExtArgs>
    _count?: boolean | TbprodutosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbprodutosPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbprodutos"
    objects: {
      tbestoque: Prisma.$tbestoquePayload<ExtArgs>[]
      tbmovitens: Prisma.$tbmovitensPayload<ExtArgs>[]
      tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos: Prisma.$tbprodcomposicaoPayload<ExtArgs>[]
      tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos: Prisma.$tbprodcomposicaoPayload<ExtArgs>[]
      tbtiposprodutos: Prisma.$tbtiposprodutosPayload<ExtArgs> | null
      tbunidademedida: Prisma.$tbunidademedidaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetResult<{
      idproduto: number
      nomeprod: string | null
      idtipprod: number | null
      idunidade: number | null
      quantminima: number | null
    }, ExtArgs["result"]["tbprodutos"]>
    composites: {}
  }


  type tbprodutosGetPayload<S extends boolean | null | undefined | tbprodutosDefaultArgs> = $Result.GetResult<Prisma.$tbprodutosPayload, S>

  type tbprodutosCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbprodutosFindManyArgs, 'select' | 'include'> & {
      select?: TbprodutosCountAggregateInputType | true
    }

  export interface tbprodutosDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbprodutos'], meta: { name: 'tbprodutos' } }
    /**
     * Find zero or one Tbprodutos that matches the filter.
     * @param {tbprodutosFindUniqueArgs} args - Arguments to find a Tbprodutos
     * @example
     * // Get one Tbprodutos
     * const tbprodutos = await prisma.tbprodutos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbprodutosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbprodutosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbprodutosClient<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbprodutos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbprodutosFindUniqueOrThrowArgs} args - Arguments to find a Tbprodutos
     * @example
     * // Get one Tbprodutos
     * const tbprodutos = await prisma.tbprodutos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbprodutosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbprodutosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbprodutosClient<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbprodutos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbprodutosFindFirstArgs} args - Arguments to find a Tbprodutos
     * @example
     * // Get one Tbprodutos
     * const tbprodutos = await prisma.tbprodutos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbprodutosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbprodutosFindFirstArgs<ExtArgs>>
    ): Prisma__tbprodutosClient<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbprodutos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbprodutosFindFirstOrThrowArgs} args - Arguments to find a Tbprodutos
     * @example
     * // Get one Tbprodutos
     * const tbprodutos = await prisma.tbprodutos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbprodutosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbprodutosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbprodutosClient<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbprodutos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbprodutosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbprodutos
     * const tbprodutos = await prisma.tbprodutos.findMany()
     * 
     * // Get first 10 Tbprodutos
     * const tbprodutos = await prisma.tbprodutos.findMany({ take: 10 })
     * 
     * // Only select the `idproduto`
     * const tbprodutosWithIdprodutoOnly = await prisma.tbprodutos.findMany({ select: { idproduto: true } })
     * 
    **/
    findMany<T extends tbprodutosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbprodutosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbprodutos.
     * @param {tbprodutosCreateArgs} args - Arguments to create a Tbprodutos.
     * @example
     * // Create one Tbprodutos
     * const Tbprodutos = await prisma.tbprodutos.create({
     *   data: {
     *     // ... data to create a Tbprodutos
     *   }
     * })
     * 
    **/
    create<T extends tbprodutosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbprodutosCreateArgs<ExtArgs>>
    ): Prisma__tbprodutosClient<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbprodutos.
     *     @param {tbprodutosCreateManyArgs} args - Arguments to create many Tbprodutos.
     *     @example
     *     // Create many Tbprodutos
     *     const tbprodutos = await prisma.tbprodutos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbprodutosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbprodutosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbprodutos.
     * @param {tbprodutosDeleteArgs} args - Arguments to delete one Tbprodutos.
     * @example
     * // Delete one Tbprodutos
     * const Tbprodutos = await prisma.tbprodutos.delete({
     *   where: {
     *     // ... filter to delete one Tbprodutos
     *   }
     * })
     * 
    **/
    delete<T extends tbprodutosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbprodutosDeleteArgs<ExtArgs>>
    ): Prisma__tbprodutosClient<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbprodutos.
     * @param {tbprodutosUpdateArgs} args - Arguments to update one Tbprodutos.
     * @example
     * // Update one Tbprodutos
     * const tbprodutos = await prisma.tbprodutos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbprodutosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbprodutosUpdateArgs<ExtArgs>>
    ): Prisma__tbprodutosClient<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbprodutos.
     * @param {tbprodutosDeleteManyArgs} args - Arguments to filter Tbprodutos to delete.
     * @example
     * // Delete a few Tbprodutos
     * const { count } = await prisma.tbprodutos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbprodutosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbprodutosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbprodutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbprodutosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbprodutos
     * const tbprodutos = await prisma.tbprodutos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbprodutosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbprodutosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbprodutos.
     * @param {tbprodutosUpsertArgs} args - Arguments to update or create a Tbprodutos.
     * @example
     * // Update or create a Tbprodutos
     * const tbprodutos = await prisma.tbprodutos.upsert({
     *   create: {
     *     // ... data to create a Tbprodutos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbprodutos we want to update
     *   }
     * })
    **/
    upsert<T extends tbprodutosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbprodutosUpsertArgs<ExtArgs>>
    ): Prisma__tbprodutosClient<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbprodutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbprodutosCountArgs} args - Arguments to filter Tbprodutos to count.
     * @example
     * // Count the number of Tbprodutos
     * const count = await prisma.tbprodutos.count({
     *   where: {
     *     // ... the filter for the Tbprodutos we want to count
     *   }
     * })
    **/
    count<T extends tbprodutosCountArgs>(
      args?: Subset<T, tbprodutosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbprodutosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbprodutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbprodutosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbprodutosAggregateArgs>(args: Subset<T, TbprodutosAggregateArgs>): Prisma.PrismaPromise<GetTbprodutosAggregateType<T>>

    /**
     * Group by Tbprodutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbprodutosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbprodutosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbprodutosGroupByArgs['orderBy'] }
        : { orderBy?: tbprodutosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbprodutosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbprodutosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbprodutos model
   */
  readonly fields: tbprodutosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbprodutos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbprodutosClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbestoque<T extends tbprodutos$tbestoqueArgs<ExtArgs> = {}>(args?: Subset<T, tbprodutos$tbestoqueArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbestoquePayload<ExtArgs>, T, 'findMany'> | Null>;

    tbmovitens<T extends tbprodutos$tbmovitensArgs<ExtArgs> = {}>(args?: Subset<T, tbprodutos$tbmovitensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbmovitensPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos<T extends tbprodutos$tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosArgs<ExtArgs> = {}>(args?: Subset<T, tbprodutos$tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbprodcomposicaoPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos<T extends tbprodutos$tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosArgs<ExtArgs> = {}>(args?: Subset<T, tbprodutos$tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbprodcomposicaoPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbtiposprodutos<T extends tbprodutos$tbtiposprodutosArgs<ExtArgs> = {}>(args?: Subset<T, tbprodutos$tbtiposprodutosArgs<ExtArgs>>): Prisma__tbtiposprodutosClient<$Result.GetResult<Prisma.$tbtiposprodutosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tbunidademedida<T extends tbprodutos$tbunidademedidaArgs<ExtArgs> = {}>(args?: Subset<T, tbprodutos$tbunidademedidaArgs<ExtArgs>>): Prisma__tbunidademedidaClient<$Result.GetResult<Prisma.$tbunidademedidaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbprodutos model
   */ 
  interface tbprodutosFieldRefs {
    readonly idproduto: FieldRef<"tbprodutos", 'Int'>
    readonly nomeprod: FieldRef<"tbprodutos", 'String'>
    readonly idtipprod: FieldRef<"tbprodutos", 'Int'>
    readonly idunidade: FieldRef<"tbprodutos", 'Int'>
    readonly quantminima: FieldRef<"tbprodutos", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * tbprodutos findUnique
   */
  export type tbprodutosFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodutos
     */
    select?: tbprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbprodutos to fetch.
     */
    where: tbprodutosWhereUniqueInput
  }


  /**
   * tbprodutos findUniqueOrThrow
   */
  export type tbprodutosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodutos
     */
    select?: tbprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbprodutos to fetch.
     */
    where: tbprodutosWhereUniqueInput
  }


  /**
   * tbprodutos findFirst
   */
  export type tbprodutosFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodutos
     */
    select?: tbprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbprodutos to fetch.
     */
    where?: tbprodutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbprodutos to fetch.
     */
    orderBy?: tbprodutosOrderByWithRelationInput | tbprodutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbprodutos.
     */
    cursor?: tbprodutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbprodutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbprodutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbprodutos.
     */
    distinct?: TbprodutosScalarFieldEnum | TbprodutosScalarFieldEnum[]
  }


  /**
   * tbprodutos findFirstOrThrow
   */
  export type tbprodutosFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodutos
     */
    select?: tbprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbprodutos to fetch.
     */
    where?: tbprodutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbprodutos to fetch.
     */
    orderBy?: tbprodutosOrderByWithRelationInput | tbprodutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbprodutos.
     */
    cursor?: tbprodutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbprodutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbprodutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbprodutos.
     */
    distinct?: TbprodutosScalarFieldEnum | TbprodutosScalarFieldEnum[]
  }


  /**
   * tbprodutos findMany
   */
  export type tbprodutosFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodutos
     */
    select?: tbprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbprodutos to fetch.
     */
    where?: tbprodutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbprodutos to fetch.
     */
    orderBy?: tbprodutosOrderByWithRelationInput | tbprodutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbprodutos.
     */
    cursor?: tbprodutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbprodutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbprodutos.
     */
    skip?: number
    distinct?: TbprodutosScalarFieldEnum | TbprodutosScalarFieldEnum[]
  }


  /**
   * tbprodutos create
   */
  export type tbprodutosCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodutos
     */
    select?: tbprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodutosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbprodutos.
     */
    data?: XOR<tbprodutosCreateInput, tbprodutosUncheckedCreateInput>
  }


  /**
   * tbprodutos createMany
   */
  export type tbprodutosCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbprodutos.
     */
    data: tbprodutosCreateManyInput | tbprodutosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbprodutos update
   */
  export type tbprodutosUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodutos
     */
    select?: tbprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodutosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbprodutos.
     */
    data: XOR<tbprodutosUpdateInput, tbprodutosUncheckedUpdateInput>
    /**
     * Choose, which tbprodutos to update.
     */
    where: tbprodutosWhereUniqueInput
  }


  /**
   * tbprodutos updateMany
   */
  export type tbprodutosUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbprodutos.
     */
    data: XOR<tbprodutosUpdateManyMutationInput, tbprodutosUncheckedUpdateManyInput>
    /**
     * Filter which tbprodutos to update
     */
    where?: tbprodutosWhereInput
  }


  /**
   * tbprodutos upsert
   */
  export type tbprodutosUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodutos
     */
    select?: tbprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodutosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbprodutos to update in case it exists.
     */
    where: tbprodutosWhereUniqueInput
    /**
     * In case the tbprodutos found by the `where` argument doesn't exist, create a new tbprodutos with this data.
     */
    create: XOR<tbprodutosCreateInput, tbprodutosUncheckedCreateInput>
    /**
     * In case the tbprodutos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbprodutosUpdateInput, tbprodutosUncheckedUpdateInput>
  }


  /**
   * tbprodutos delete
   */
  export type tbprodutosDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodutos
     */
    select?: tbprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodutosInclude<ExtArgs> | null
    /**
     * Filter which tbprodutos to delete.
     */
    where: tbprodutosWhereUniqueInput
  }


  /**
   * tbprodutos deleteMany
   */
  export type tbprodutosDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbprodutos to delete
     */
    where?: tbprodutosWhereInput
  }


  /**
   * tbprodutos.tbestoque
   */
  export type tbprodutos$tbestoqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbestoque
     */
    select?: tbestoqueSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbestoqueInclude<ExtArgs> | null
    where?: tbestoqueWhereInput
    orderBy?: tbestoqueOrderByWithRelationInput | tbestoqueOrderByWithRelationInput[]
    cursor?: tbestoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbestoqueScalarFieldEnum | TbestoqueScalarFieldEnum[]
  }


  /**
   * tbprodutos.tbmovitens
   */
  export type tbprodutos$tbmovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovitens
     */
    select?: tbmovitensSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovitensInclude<ExtArgs> | null
    where?: tbmovitensWhereInput
    orderBy?: tbmovitensOrderByWithRelationInput | tbmovitensOrderByWithRelationInput[]
    cursor?: tbmovitensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbmovitensScalarFieldEnum | TbmovitensScalarFieldEnum[]
  }


  /**
   * tbprodutos.tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos
   */
  export type tbprodutos$tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodcomposicao
     */
    select?: tbprodcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodcomposicaoInclude<ExtArgs> | null
    where?: tbprodcomposicaoWhereInput
    orderBy?: tbprodcomposicaoOrderByWithRelationInput | tbprodcomposicaoOrderByWithRelationInput[]
    cursor?: tbprodcomposicaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbprodcomposicaoScalarFieldEnum | TbprodcomposicaoScalarFieldEnum[]
  }


  /**
   * tbprodutos.tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos
   */
  export type tbprodutos$tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodcomposicao
     */
    select?: tbprodcomposicaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodcomposicaoInclude<ExtArgs> | null
    where?: tbprodcomposicaoWhereInput
    orderBy?: tbprodcomposicaoOrderByWithRelationInput | tbprodcomposicaoOrderByWithRelationInput[]
    cursor?: tbprodcomposicaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbprodcomposicaoScalarFieldEnum | TbprodcomposicaoScalarFieldEnum[]
  }


  /**
   * tbprodutos.tbtiposprodutos
   */
  export type tbprodutos$tbtiposprodutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbtiposprodutos
     */
    select?: tbtiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbtiposprodutosInclude<ExtArgs> | null
    where?: tbtiposprodutosWhereInput
  }


  /**
   * tbprodutos.tbunidademedida
   */
  export type tbprodutos$tbunidademedidaArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbunidademedida
     */
    select?: tbunidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbunidademedidaInclude<ExtArgs> | null
    where?: tbunidademedidaWhereInput
  }


  /**
   * tbprodutos without action
   */
  export type tbprodutosDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodutos
     */
    select?: tbprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodutosInclude<ExtArgs> | null
  }



  /**
   * Model tbtiposprodutos
   */

  export type AggregateTbtiposprodutos = {
    _count: TbtiposprodutosCountAggregateOutputType | null
    _avg: TbtiposprodutosAvgAggregateOutputType | null
    _sum: TbtiposprodutosSumAggregateOutputType | null
    _min: TbtiposprodutosMinAggregateOutputType | null
    _max: TbtiposprodutosMaxAggregateOutputType | null
  }

  export type TbtiposprodutosAvgAggregateOutputType = {
    idtipprod: number | null
  }

  export type TbtiposprodutosSumAggregateOutputType = {
    idtipprod: number | null
  }

  export type TbtiposprodutosMinAggregateOutputType = {
    idtipprod: number | null
    nometipprod: string | null
  }

  export type TbtiposprodutosMaxAggregateOutputType = {
    idtipprod: number | null
    nometipprod: string | null
  }

  export type TbtiposprodutosCountAggregateOutputType = {
    idtipprod: number
    nometipprod: number
    _all: number
  }


  export type TbtiposprodutosAvgAggregateInputType = {
    idtipprod?: true
  }

  export type TbtiposprodutosSumAggregateInputType = {
    idtipprod?: true
  }

  export type TbtiposprodutosMinAggregateInputType = {
    idtipprod?: true
    nometipprod?: true
  }

  export type TbtiposprodutosMaxAggregateInputType = {
    idtipprod?: true
    nometipprod?: true
  }

  export type TbtiposprodutosCountAggregateInputType = {
    idtipprod?: true
    nometipprod?: true
    _all?: true
  }

  export type TbtiposprodutosAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbtiposprodutos to aggregate.
     */
    where?: tbtiposprodutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbtiposprodutos to fetch.
     */
    orderBy?: tbtiposprodutosOrderByWithRelationInput | tbtiposprodutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbtiposprodutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbtiposprodutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbtiposprodutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbtiposprodutos
    **/
    _count?: true | TbtiposprodutosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbtiposprodutosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbtiposprodutosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbtiposprodutosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbtiposprodutosMaxAggregateInputType
  }

  export type GetTbtiposprodutosAggregateType<T extends TbtiposprodutosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbtiposprodutos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbtiposprodutos[P]>
      : GetScalarType<T[P], AggregateTbtiposprodutos[P]>
  }




  export type tbtiposprodutosGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbtiposprodutosWhereInput
    orderBy?: tbtiposprodutosOrderByWithAggregationInput | tbtiposprodutosOrderByWithAggregationInput[]
    by: TbtiposprodutosScalarFieldEnum[] | TbtiposprodutosScalarFieldEnum
    having?: tbtiposprodutosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbtiposprodutosCountAggregateInputType | true
    _avg?: TbtiposprodutosAvgAggregateInputType
    _sum?: TbtiposprodutosSumAggregateInputType
    _min?: TbtiposprodutosMinAggregateInputType
    _max?: TbtiposprodutosMaxAggregateInputType
  }

  export type TbtiposprodutosGroupByOutputType = {
    idtipprod: number
    nometipprod: string | null
    _count: TbtiposprodutosCountAggregateOutputType | null
    _avg: TbtiposprodutosAvgAggregateOutputType | null
    _sum: TbtiposprodutosSumAggregateOutputType | null
    _min: TbtiposprodutosMinAggregateOutputType | null
    _max: TbtiposprodutosMaxAggregateOutputType | null
  }

  type GetTbtiposprodutosGroupByPayload<T extends tbtiposprodutosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbtiposprodutosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbtiposprodutosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbtiposprodutosGroupByOutputType[P]>
            : GetScalarType<T[P], TbtiposprodutosGroupByOutputType[P]>
        }
      >
    >


  export type tbtiposprodutosSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idtipprod?: boolean
    nometipprod?: boolean
    tbprodutos?: boolean | tbtiposprodutos$tbprodutosArgs<ExtArgs>
    _count?: boolean | TbtiposprodutosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbtiposprodutos"]>

  export type tbtiposprodutosSelectScalar = {
    idtipprod?: boolean
    nometipprod?: boolean
  }

  export type tbtiposprodutosInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbprodutos?: boolean | tbtiposprodutos$tbprodutosArgs<ExtArgs>
    _count?: boolean | TbtiposprodutosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbtiposprodutosPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbtiposprodutos"
    objects: {
      tbprodutos: Prisma.$tbprodutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idtipprod: number
      nometipprod: string | null
    }, ExtArgs["result"]["tbtiposprodutos"]>
    composites: {}
  }


  type tbtiposprodutosGetPayload<S extends boolean | null | undefined | tbtiposprodutosDefaultArgs> = $Result.GetResult<Prisma.$tbtiposprodutosPayload, S>

  type tbtiposprodutosCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbtiposprodutosFindManyArgs, 'select' | 'include'> & {
      select?: TbtiposprodutosCountAggregateInputType | true
    }

  export interface tbtiposprodutosDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbtiposprodutos'], meta: { name: 'tbtiposprodutos' } }
    /**
     * Find zero or one Tbtiposprodutos that matches the filter.
     * @param {tbtiposprodutosFindUniqueArgs} args - Arguments to find a Tbtiposprodutos
     * @example
     * // Get one Tbtiposprodutos
     * const tbtiposprodutos = await prisma.tbtiposprodutos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbtiposprodutosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbtiposprodutosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbtiposprodutosClient<$Result.GetResult<Prisma.$tbtiposprodutosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbtiposprodutos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbtiposprodutosFindUniqueOrThrowArgs} args - Arguments to find a Tbtiposprodutos
     * @example
     * // Get one Tbtiposprodutos
     * const tbtiposprodutos = await prisma.tbtiposprodutos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbtiposprodutosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbtiposprodutosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbtiposprodutosClient<$Result.GetResult<Prisma.$tbtiposprodutosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbtiposprodutos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbtiposprodutosFindFirstArgs} args - Arguments to find a Tbtiposprodutos
     * @example
     * // Get one Tbtiposprodutos
     * const tbtiposprodutos = await prisma.tbtiposprodutos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbtiposprodutosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbtiposprodutosFindFirstArgs<ExtArgs>>
    ): Prisma__tbtiposprodutosClient<$Result.GetResult<Prisma.$tbtiposprodutosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbtiposprodutos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbtiposprodutosFindFirstOrThrowArgs} args - Arguments to find a Tbtiposprodutos
     * @example
     * // Get one Tbtiposprodutos
     * const tbtiposprodutos = await prisma.tbtiposprodutos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbtiposprodutosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbtiposprodutosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbtiposprodutosClient<$Result.GetResult<Prisma.$tbtiposprodutosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbtiposprodutos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbtiposprodutosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbtiposprodutos
     * const tbtiposprodutos = await prisma.tbtiposprodutos.findMany()
     * 
     * // Get first 10 Tbtiposprodutos
     * const tbtiposprodutos = await prisma.tbtiposprodutos.findMany({ take: 10 })
     * 
     * // Only select the `idtipprod`
     * const tbtiposprodutosWithIdtipprodOnly = await prisma.tbtiposprodutos.findMany({ select: { idtipprod: true } })
     * 
    **/
    findMany<T extends tbtiposprodutosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbtiposprodutosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbtiposprodutosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbtiposprodutos.
     * @param {tbtiposprodutosCreateArgs} args - Arguments to create a Tbtiposprodutos.
     * @example
     * // Create one Tbtiposprodutos
     * const Tbtiposprodutos = await prisma.tbtiposprodutos.create({
     *   data: {
     *     // ... data to create a Tbtiposprodutos
     *   }
     * })
     * 
    **/
    create<T extends tbtiposprodutosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbtiposprodutosCreateArgs<ExtArgs>>
    ): Prisma__tbtiposprodutosClient<$Result.GetResult<Prisma.$tbtiposprodutosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbtiposprodutos.
     *     @param {tbtiposprodutosCreateManyArgs} args - Arguments to create many Tbtiposprodutos.
     *     @example
     *     // Create many Tbtiposprodutos
     *     const tbtiposprodutos = await prisma.tbtiposprodutos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbtiposprodutosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbtiposprodutosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbtiposprodutos.
     * @param {tbtiposprodutosDeleteArgs} args - Arguments to delete one Tbtiposprodutos.
     * @example
     * // Delete one Tbtiposprodutos
     * const Tbtiposprodutos = await prisma.tbtiposprodutos.delete({
     *   where: {
     *     // ... filter to delete one Tbtiposprodutos
     *   }
     * })
     * 
    **/
    delete<T extends tbtiposprodutosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbtiposprodutosDeleteArgs<ExtArgs>>
    ): Prisma__tbtiposprodutosClient<$Result.GetResult<Prisma.$tbtiposprodutosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbtiposprodutos.
     * @param {tbtiposprodutosUpdateArgs} args - Arguments to update one Tbtiposprodutos.
     * @example
     * // Update one Tbtiposprodutos
     * const tbtiposprodutos = await prisma.tbtiposprodutos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbtiposprodutosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbtiposprodutosUpdateArgs<ExtArgs>>
    ): Prisma__tbtiposprodutosClient<$Result.GetResult<Prisma.$tbtiposprodutosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbtiposprodutos.
     * @param {tbtiposprodutosDeleteManyArgs} args - Arguments to filter Tbtiposprodutos to delete.
     * @example
     * // Delete a few Tbtiposprodutos
     * const { count } = await prisma.tbtiposprodutos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbtiposprodutosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbtiposprodutosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbtiposprodutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbtiposprodutosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbtiposprodutos
     * const tbtiposprodutos = await prisma.tbtiposprodutos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbtiposprodutosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbtiposprodutosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbtiposprodutos.
     * @param {tbtiposprodutosUpsertArgs} args - Arguments to update or create a Tbtiposprodutos.
     * @example
     * // Update or create a Tbtiposprodutos
     * const tbtiposprodutos = await prisma.tbtiposprodutos.upsert({
     *   create: {
     *     // ... data to create a Tbtiposprodutos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbtiposprodutos we want to update
     *   }
     * })
    **/
    upsert<T extends tbtiposprodutosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbtiposprodutosUpsertArgs<ExtArgs>>
    ): Prisma__tbtiposprodutosClient<$Result.GetResult<Prisma.$tbtiposprodutosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbtiposprodutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbtiposprodutosCountArgs} args - Arguments to filter Tbtiposprodutos to count.
     * @example
     * // Count the number of Tbtiposprodutos
     * const count = await prisma.tbtiposprodutos.count({
     *   where: {
     *     // ... the filter for the Tbtiposprodutos we want to count
     *   }
     * })
    **/
    count<T extends tbtiposprodutosCountArgs>(
      args?: Subset<T, tbtiposprodutosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbtiposprodutosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbtiposprodutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbtiposprodutosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbtiposprodutosAggregateArgs>(args: Subset<T, TbtiposprodutosAggregateArgs>): Prisma.PrismaPromise<GetTbtiposprodutosAggregateType<T>>

    /**
     * Group by Tbtiposprodutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbtiposprodutosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbtiposprodutosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbtiposprodutosGroupByArgs['orderBy'] }
        : { orderBy?: tbtiposprodutosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbtiposprodutosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbtiposprodutosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbtiposprodutos model
   */
  readonly fields: tbtiposprodutosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbtiposprodutos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbtiposprodutosClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbprodutos<T extends tbtiposprodutos$tbprodutosArgs<ExtArgs> = {}>(args?: Subset<T, tbtiposprodutos$tbprodutosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbtiposprodutos model
   */ 
  interface tbtiposprodutosFieldRefs {
    readonly idtipprod: FieldRef<"tbtiposprodutos", 'Int'>
    readonly nometipprod: FieldRef<"tbtiposprodutos", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tbtiposprodutos findUnique
   */
  export type tbtiposprodutosFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbtiposprodutos
     */
    select?: tbtiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbtiposprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbtiposprodutos to fetch.
     */
    where: tbtiposprodutosWhereUniqueInput
  }


  /**
   * tbtiposprodutos findUniqueOrThrow
   */
  export type tbtiposprodutosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbtiposprodutos
     */
    select?: tbtiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbtiposprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbtiposprodutos to fetch.
     */
    where: tbtiposprodutosWhereUniqueInput
  }


  /**
   * tbtiposprodutos findFirst
   */
  export type tbtiposprodutosFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbtiposprodutos
     */
    select?: tbtiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbtiposprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbtiposprodutos to fetch.
     */
    where?: tbtiposprodutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbtiposprodutos to fetch.
     */
    orderBy?: tbtiposprodutosOrderByWithRelationInput | tbtiposprodutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbtiposprodutos.
     */
    cursor?: tbtiposprodutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbtiposprodutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbtiposprodutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbtiposprodutos.
     */
    distinct?: TbtiposprodutosScalarFieldEnum | TbtiposprodutosScalarFieldEnum[]
  }


  /**
   * tbtiposprodutos findFirstOrThrow
   */
  export type tbtiposprodutosFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbtiposprodutos
     */
    select?: tbtiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbtiposprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbtiposprodutos to fetch.
     */
    where?: tbtiposprodutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbtiposprodutos to fetch.
     */
    orderBy?: tbtiposprodutosOrderByWithRelationInput | tbtiposprodutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbtiposprodutos.
     */
    cursor?: tbtiposprodutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbtiposprodutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbtiposprodutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbtiposprodutos.
     */
    distinct?: TbtiposprodutosScalarFieldEnum | TbtiposprodutosScalarFieldEnum[]
  }


  /**
   * tbtiposprodutos findMany
   */
  export type tbtiposprodutosFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbtiposprodutos
     */
    select?: tbtiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbtiposprodutosInclude<ExtArgs> | null
    /**
     * Filter, which tbtiposprodutos to fetch.
     */
    where?: tbtiposprodutosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbtiposprodutos to fetch.
     */
    orderBy?: tbtiposprodutosOrderByWithRelationInput | tbtiposprodutosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbtiposprodutos.
     */
    cursor?: tbtiposprodutosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbtiposprodutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbtiposprodutos.
     */
    skip?: number
    distinct?: TbtiposprodutosScalarFieldEnum | TbtiposprodutosScalarFieldEnum[]
  }


  /**
   * tbtiposprodutos create
   */
  export type tbtiposprodutosCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbtiposprodutos
     */
    select?: tbtiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbtiposprodutosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbtiposprodutos.
     */
    data?: XOR<tbtiposprodutosCreateInput, tbtiposprodutosUncheckedCreateInput>
  }


  /**
   * tbtiposprodutos createMany
   */
  export type tbtiposprodutosCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbtiposprodutos.
     */
    data: tbtiposprodutosCreateManyInput | tbtiposprodutosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbtiposprodutos update
   */
  export type tbtiposprodutosUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbtiposprodutos
     */
    select?: tbtiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbtiposprodutosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbtiposprodutos.
     */
    data: XOR<tbtiposprodutosUpdateInput, tbtiposprodutosUncheckedUpdateInput>
    /**
     * Choose, which tbtiposprodutos to update.
     */
    where: tbtiposprodutosWhereUniqueInput
  }


  /**
   * tbtiposprodutos updateMany
   */
  export type tbtiposprodutosUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbtiposprodutos.
     */
    data: XOR<tbtiposprodutosUpdateManyMutationInput, tbtiposprodutosUncheckedUpdateManyInput>
    /**
     * Filter which tbtiposprodutos to update
     */
    where?: tbtiposprodutosWhereInput
  }


  /**
   * tbtiposprodutos upsert
   */
  export type tbtiposprodutosUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbtiposprodutos
     */
    select?: tbtiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbtiposprodutosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbtiposprodutos to update in case it exists.
     */
    where: tbtiposprodutosWhereUniqueInput
    /**
     * In case the tbtiposprodutos found by the `where` argument doesn't exist, create a new tbtiposprodutos with this data.
     */
    create: XOR<tbtiposprodutosCreateInput, tbtiposprodutosUncheckedCreateInput>
    /**
     * In case the tbtiposprodutos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbtiposprodutosUpdateInput, tbtiposprodutosUncheckedUpdateInput>
  }


  /**
   * tbtiposprodutos delete
   */
  export type tbtiposprodutosDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbtiposprodutos
     */
    select?: tbtiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbtiposprodutosInclude<ExtArgs> | null
    /**
     * Filter which tbtiposprodutos to delete.
     */
    where: tbtiposprodutosWhereUniqueInput
  }


  /**
   * tbtiposprodutos deleteMany
   */
  export type tbtiposprodutosDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbtiposprodutos to delete
     */
    where?: tbtiposprodutosWhereInput
  }


  /**
   * tbtiposprodutos.tbprodutos
   */
  export type tbtiposprodutos$tbprodutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodutos
     */
    select?: tbprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodutosInclude<ExtArgs> | null
    where?: tbprodutosWhereInput
    orderBy?: tbprodutosOrderByWithRelationInput | tbprodutosOrderByWithRelationInput[]
    cursor?: tbprodutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbprodutosScalarFieldEnum | TbprodutosScalarFieldEnum[]
  }


  /**
   * tbtiposprodutos without action
   */
  export type tbtiposprodutosDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbtiposprodutos
     */
    select?: tbtiposprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbtiposprodutosInclude<ExtArgs> | null
  }



  /**
   * Model tbunidademedida
   */

  export type AggregateTbunidademedida = {
    _count: TbunidademedidaCountAggregateOutputType | null
    _avg: TbunidademedidaAvgAggregateOutputType | null
    _sum: TbunidademedidaSumAggregateOutputType | null
    _min: TbunidademedidaMinAggregateOutputType | null
    _max: TbunidademedidaMaxAggregateOutputType | null
  }

  export type TbunidademedidaAvgAggregateOutputType = {
    idunidade: number | null
  }

  export type TbunidademedidaSumAggregateOutputType = {
    idunidade: number | null
  }

  export type TbunidademedidaMinAggregateOutputType = {
    idunidade: number | null
    siglaun: string | null
    nomeunidade: string | null
  }

  export type TbunidademedidaMaxAggregateOutputType = {
    idunidade: number | null
    siglaun: string | null
    nomeunidade: string | null
  }

  export type TbunidademedidaCountAggregateOutputType = {
    idunidade: number
    siglaun: number
    nomeunidade: number
    _all: number
  }


  export type TbunidademedidaAvgAggregateInputType = {
    idunidade?: true
  }

  export type TbunidademedidaSumAggregateInputType = {
    idunidade?: true
  }

  export type TbunidademedidaMinAggregateInputType = {
    idunidade?: true
    siglaun?: true
    nomeunidade?: true
  }

  export type TbunidademedidaMaxAggregateInputType = {
    idunidade?: true
    siglaun?: true
    nomeunidade?: true
  }

  export type TbunidademedidaCountAggregateInputType = {
    idunidade?: true
    siglaun?: true
    nomeunidade?: true
    _all?: true
  }

  export type TbunidademedidaAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbunidademedida to aggregate.
     */
    where?: tbunidademedidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbunidademedidas to fetch.
     */
    orderBy?: tbunidademedidaOrderByWithRelationInput | tbunidademedidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbunidademedidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbunidademedidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbunidademedidas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbunidademedidas
    **/
    _count?: true | TbunidademedidaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbunidademedidaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbunidademedidaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbunidademedidaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbunidademedidaMaxAggregateInputType
  }

  export type GetTbunidademedidaAggregateType<T extends TbunidademedidaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbunidademedida]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbunidademedida[P]>
      : GetScalarType<T[P], AggregateTbunidademedida[P]>
  }




  export type tbunidademedidaGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbunidademedidaWhereInput
    orderBy?: tbunidademedidaOrderByWithAggregationInput | tbunidademedidaOrderByWithAggregationInput[]
    by: TbunidademedidaScalarFieldEnum[] | TbunidademedidaScalarFieldEnum
    having?: tbunidademedidaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbunidademedidaCountAggregateInputType | true
    _avg?: TbunidademedidaAvgAggregateInputType
    _sum?: TbunidademedidaSumAggregateInputType
    _min?: TbunidademedidaMinAggregateInputType
    _max?: TbunidademedidaMaxAggregateInputType
  }

  export type TbunidademedidaGroupByOutputType = {
    idunidade: number
    siglaun: string | null
    nomeunidade: string | null
    _count: TbunidademedidaCountAggregateOutputType | null
    _avg: TbunidademedidaAvgAggregateOutputType | null
    _sum: TbunidademedidaSumAggregateOutputType | null
    _min: TbunidademedidaMinAggregateOutputType | null
    _max: TbunidademedidaMaxAggregateOutputType | null
  }

  type GetTbunidademedidaGroupByPayload<T extends tbunidademedidaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbunidademedidaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbunidademedidaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbunidademedidaGroupByOutputType[P]>
            : GetScalarType<T[P], TbunidademedidaGroupByOutputType[P]>
        }
      >
    >


  export type tbunidademedidaSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idunidade?: boolean
    siglaun?: boolean
    nomeunidade?: boolean
    tbprodutos?: boolean | tbunidademedida$tbprodutosArgs<ExtArgs>
    _count?: boolean | TbunidademedidaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbunidademedida"]>

  export type tbunidademedidaSelectScalar = {
    idunidade?: boolean
    siglaun?: boolean
    nomeunidade?: boolean
  }

  export type tbunidademedidaInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbprodutos?: boolean | tbunidademedida$tbprodutosArgs<ExtArgs>
    _count?: boolean | TbunidademedidaCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbunidademedidaPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbunidademedida"
    objects: {
      tbprodutos: Prisma.$tbprodutosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idunidade: number
      siglaun: string | null
      nomeunidade: string | null
    }, ExtArgs["result"]["tbunidademedida"]>
    composites: {}
  }


  type tbunidademedidaGetPayload<S extends boolean | null | undefined | tbunidademedidaDefaultArgs> = $Result.GetResult<Prisma.$tbunidademedidaPayload, S>

  type tbunidademedidaCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbunidademedidaFindManyArgs, 'select' | 'include'> & {
      select?: TbunidademedidaCountAggregateInputType | true
    }

  export interface tbunidademedidaDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbunidademedida'], meta: { name: 'tbunidademedida' } }
    /**
     * Find zero or one Tbunidademedida that matches the filter.
     * @param {tbunidademedidaFindUniqueArgs} args - Arguments to find a Tbunidademedida
     * @example
     * // Get one Tbunidademedida
     * const tbunidademedida = await prisma.tbunidademedida.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbunidademedidaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbunidademedidaFindUniqueArgs<ExtArgs>>
    ): Prisma__tbunidademedidaClient<$Result.GetResult<Prisma.$tbunidademedidaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbunidademedida that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbunidademedidaFindUniqueOrThrowArgs} args - Arguments to find a Tbunidademedida
     * @example
     * // Get one Tbunidademedida
     * const tbunidademedida = await prisma.tbunidademedida.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbunidademedidaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbunidademedidaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbunidademedidaClient<$Result.GetResult<Prisma.$tbunidademedidaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbunidademedida that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbunidademedidaFindFirstArgs} args - Arguments to find a Tbunidademedida
     * @example
     * // Get one Tbunidademedida
     * const tbunidademedida = await prisma.tbunidademedida.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbunidademedidaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbunidademedidaFindFirstArgs<ExtArgs>>
    ): Prisma__tbunidademedidaClient<$Result.GetResult<Prisma.$tbunidademedidaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbunidademedida that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbunidademedidaFindFirstOrThrowArgs} args - Arguments to find a Tbunidademedida
     * @example
     * // Get one Tbunidademedida
     * const tbunidademedida = await prisma.tbunidademedida.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbunidademedidaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbunidademedidaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbunidademedidaClient<$Result.GetResult<Prisma.$tbunidademedidaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbunidademedidas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbunidademedidaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbunidademedidas
     * const tbunidademedidas = await prisma.tbunidademedida.findMany()
     * 
     * // Get first 10 Tbunidademedidas
     * const tbunidademedidas = await prisma.tbunidademedida.findMany({ take: 10 })
     * 
     * // Only select the `idunidade`
     * const tbunidademedidaWithIdunidadeOnly = await prisma.tbunidademedida.findMany({ select: { idunidade: true } })
     * 
    **/
    findMany<T extends tbunidademedidaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbunidademedidaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbunidademedidaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbunidademedida.
     * @param {tbunidademedidaCreateArgs} args - Arguments to create a Tbunidademedida.
     * @example
     * // Create one Tbunidademedida
     * const Tbunidademedida = await prisma.tbunidademedida.create({
     *   data: {
     *     // ... data to create a Tbunidademedida
     *   }
     * })
     * 
    **/
    create<T extends tbunidademedidaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbunidademedidaCreateArgs<ExtArgs>>
    ): Prisma__tbunidademedidaClient<$Result.GetResult<Prisma.$tbunidademedidaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbunidademedidas.
     *     @param {tbunidademedidaCreateManyArgs} args - Arguments to create many Tbunidademedidas.
     *     @example
     *     // Create many Tbunidademedidas
     *     const tbunidademedida = await prisma.tbunidademedida.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbunidademedidaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbunidademedidaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbunidademedida.
     * @param {tbunidademedidaDeleteArgs} args - Arguments to delete one Tbunidademedida.
     * @example
     * // Delete one Tbunidademedida
     * const Tbunidademedida = await prisma.tbunidademedida.delete({
     *   where: {
     *     // ... filter to delete one Tbunidademedida
     *   }
     * })
     * 
    **/
    delete<T extends tbunidademedidaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbunidademedidaDeleteArgs<ExtArgs>>
    ): Prisma__tbunidademedidaClient<$Result.GetResult<Prisma.$tbunidademedidaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbunidademedida.
     * @param {tbunidademedidaUpdateArgs} args - Arguments to update one Tbunidademedida.
     * @example
     * // Update one Tbunidademedida
     * const tbunidademedida = await prisma.tbunidademedida.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbunidademedidaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbunidademedidaUpdateArgs<ExtArgs>>
    ): Prisma__tbunidademedidaClient<$Result.GetResult<Prisma.$tbunidademedidaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbunidademedidas.
     * @param {tbunidademedidaDeleteManyArgs} args - Arguments to filter Tbunidademedidas to delete.
     * @example
     * // Delete a few Tbunidademedidas
     * const { count } = await prisma.tbunidademedida.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbunidademedidaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbunidademedidaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbunidademedidas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbunidademedidaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbunidademedidas
     * const tbunidademedida = await prisma.tbunidademedida.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbunidademedidaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbunidademedidaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbunidademedida.
     * @param {tbunidademedidaUpsertArgs} args - Arguments to update or create a Tbunidademedida.
     * @example
     * // Update or create a Tbunidademedida
     * const tbunidademedida = await prisma.tbunidademedida.upsert({
     *   create: {
     *     // ... data to create a Tbunidademedida
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbunidademedida we want to update
     *   }
     * })
    **/
    upsert<T extends tbunidademedidaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbunidademedidaUpsertArgs<ExtArgs>>
    ): Prisma__tbunidademedidaClient<$Result.GetResult<Prisma.$tbunidademedidaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbunidademedidas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbunidademedidaCountArgs} args - Arguments to filter Tbunidademedidas to count.
     * @example
     * // Count the number of Tbunidademedidas
     * const count = await prisma.tbunidademedida.count({
     *   where: {
     *     // ... the filter for the Tbunidademedidas we want to count
     *   }
     * })
    **/
    count<T extends tbunidademedidaCountArgs>(
      args?: Subset<T, tbunidademedidaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbunidademedidaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbunidademedida.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbunidademedidaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbunidademedidaAggregateArgs>(args: Subset<T, TbunidademedidaAggregateArgs>): Prisma.PrismaPromise<GetTbunidademedidaAggregateType<T>>

    /**
     * Group by Tbunidademedida.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbunidademedidaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbunidademedidaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbunidademedidaGroupByArgs['orderBy'] }
        : { orderBy?: tbunidademedidaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbunidademedidaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbunidademedidaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbunidademedida model
   */
  readonly fields: tbunidademedidaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbunidademedida.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbunidademedidaClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbprodutos<T extends tbunidademedida$tbprodutosArgs<ExtArgs> = {}>(args?: Subset<T, tbunidademedida$tbprodutosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbprodutosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbunidademedida model
   */ 
  interface tbunidademedidaFieldRefs {
    readonly idunidade: FieldRef<"tbunidademedida", 'Int'>
    readonly siglaun: FieldRef<"tbunidademedida", 'String'>
    readonly nomeunidade: FieldRef<"tbunidademedida", 'String'>
  }
    

  // Custom InputTypes

  /**
   * tbunidademedida findUnique
   */
  export type tbunidademedidaFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbunidademedida
     */
    select?: tbunidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbunidademedidaInclude<ExtArgs> | null
    /**
     * Filter, which tbunidademedida to fetch.
     */
    where: tbunidademedidaWhereUniqueInput
  }


  /**
   * tbunidademedida findUniqueOrThrow
   */
  export type tbunidademedidaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbunidademedida
     */
    select?: tbunidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbunidademedidaInclude<ExtArgs> | null
    /**
     * Filter, which tbunidademedida to fetch.
     */
    where: tbunidademedidaWhereUniqueInput
  }


  /**
   * tbunidademedida findFirst
   */
  export type tbunidademedidaFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbunidademedida
     */
    select?: tbunidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbunidademedidaInclude<ExtArgs> | null
    /**
     * Filter, which tbunidademedida to fetch.
     */
    where?: tbunidademedidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbunidademedidas to fetch.
     */
    orderBy?: tbunidademedidaOrderByWithRelationInput | tbunidademedidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbunidademedidas.
     */
    cursor?: tbunidademedidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbunidademedidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbunidademedidas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbunidademedidas.
     */
    distinct?: TbunidademedidaScalarFieldEnum | TbunidademedidaScalarFieldEnum[]
  }


  /**
   * tbunidademedida findFirstOrThrow
   */
  export type tbunidademedidaFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbunidademedida
     */
    select?: tbunidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbunidademedidaInclude<ExtArgs> | null
    /**
     * Filter, which tbunidademedida to fetch.
     */
    where?: tbunidademedidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbunidademedidas to fetch.
     */
    orderBy?: tbunidademedidaOrderByWithRelationInput | tbunidademedidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbunidademedidas.
     */
    cursor?: tbunidademedidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbunidademedidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbunidademedidas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbunidademedidas.
     */
    distinct?: TbunidademedidaScalarFieldEnum | TbunidademedidaScalarFieldEnum[]
  }


  /**
   * tbunidademedida findMany
   */
  export type tbunidademedidaFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbunidademedida
     */
    select?: tbunidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbunidademedidaInclude<ExtArgs> | null
    /**
     * Filter, which tbunidademedidas to fetch.
     */
    where?: tbunidademedidaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbunidademedidas to fetch.
     */
    orderBy?: tbunidademedidaOrderByWithRelationInput | tbunidademedidaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbunidademedidas.
     */
    cursor?: tbunidademedidaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbunidademedidas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbunidademedidas.
     */
    skip?: number
    distinct?: TbunidademedidaScalarFieldEnum | TbunidademedidaScalarFieldEnum[]
  }


  /**
   * tbunidademedida create
   */
  export type tbunidademedidaCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbunidademedida
     */
    select?: tbunidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbunidademedidaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbunidademedida.
     */
    data?: XOR<tbunidademedidaCreateInput, tbunidademedidaUncheckedCreateInput>
  }


  /**
   * tbunidademedida createMany
   */
  export type tbunidademedidaCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbunidademedidas.
     */
    data: tbunidademedidaCreateManyInput | tbunidademedidaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbunidademedida update
   */
  export type tbunidademedidaUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbunidademedida
     */
    select?: tbunidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbunidademedidaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbunidademedida.
     */
    data: XOR<tbunidademedidaUpdateInput, tbunidademedidaUncheckedUpdateInput>
    /**
     * Choose, which tbunidademedida to update.
     */
    where: tbunidademedidaWhereUniqueInput
  }


  /**
   * tbunidademedida updateMany
   */
  export type tbunidademedidaUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbunidademedidas.
     */
    data: XOR<tbunidademedidaUpdateManyMutationInput, tbunidademedidaUncheckedUpdateManyInput>
    /**
     * Filter which tbunidademedidas to update
     */
    where?: tbunidademedidaWhereInput
  }


  /**
   * tbunidademedida upsert
   */
  export type tbunidademedidaUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbunidademedida
     */
    select?: tbunidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbunidademedidaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbunidademedida to update in case it exists.
     */
    where: tbunidademedidaWhereUniqueInput
    /**
     * In case the tbunidademedida found by the `where` argument doesn't exist, create a new tbunidademedida with this data.
     */
    create: XOR<tbunidademedidaCreateInput, tbunidademedidaUncheckedCreateInput>
    /**
     * In case the tbunidademedida was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbunidademedidaUpdateInput, tbunidademedidaUncheckedUpdateInput>
  }


  /**
   * tbunidademedida delete
   */
  export type tbunidademedidaDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbunidademedida
     */
    select?: tbunidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbunidademedidaInclude<ExtArgs> | null
    /**
     * Filter which tbunidademedida to delete.
     */
    where: tbunidademedidaWhereUniqueInput
  }


  /**
   * tbunidademedida deleteMany
   */
  export type tbunidademedidaDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbunidademedidas to delete
     */
    where?: tbunidademedidaWhereInput
  }


  /**
   * tbunidademedida.tbprodutos
   */
  export type tbunidademedida$tbprodutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbprodutos
     */
    select?: tbprodutosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbprodutosInclude<ExtArgs> | null
    where?: tbprodutosWhereInput
    orderBy?: tbprodutosOrderByWithRelationInput | tbprodutosOrderByWithRelationInput[]
    cursor?: tbprodutosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbprodutosScalarFieldEnum | TbprodutosScalarFieldEnum[]
  }


  /**
   * tbunidademedida without action
   */
  export type tbunidademedidaDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbunidademedida
     */
    select?: tbunidademedidaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbunidademedidaInclude<ExtArgs> | null
  }



  /**
   * Model tbusuarios
   */

  export type AggregateTbusuarios = {
    _count: TbusuariosCountAggregateOutputType | null
    _avg: TbusuariosAvgAggregateOutputType | null
    _sum: TbusuariosSumAggregateOutputType | null
    _min: TbusuariosMinAggregateOutputType | null
    _max: TbusuariosMaxAggregateOutputType | null
  }

  export type TbusuariosAvgAggregateOutputType = {
    idusuario: number | null
  }

  export type TbusuariosSumAggregateOutputType = {
    idusuario: number | null
  }

  export type TbusuariosMinAggregateOutputType = {
    idusuario: number | null
    usu_login: string | null
    nome: string | null
    senha: string | null
    dtcriacao: Date | null
    usu_admin: boolean | null
  }

  export type TbusuariosMaxAggregateOutputType = {
    idusuario: number | null
    usu_login: string | null
    nome: string | null
    senha: string | null
    dtcriacao: Date | null
    usu_admin: boolean | null
  }

  export type TbusuariosCountAggregateOutputType = {
    idusuario: number
    usu_login: number
    nome: number
    senha: number
    dtcriacao: number
    usu_admin: number
    _all: number
  }


  export type TbusuariosAvgAggregateInputType = {
    idusuario?: true
  }

  export type TbusuariosSumAggregateInputType = {
    idusuario?: true
  }

  export type TbusuariosMinAggregateInputType = {
    idusuario?: true
    usu_login?: true
    nome?: true
    senha?: true
    dtcriacao?: true
    usu_admin?: true
  }

  export type TbusuariosMaxAggregateInputType = {
    idusuario?: true
    usu_login?: true
    nome?: true
    senha?: true
    dtcriacao?: true
    usu_admin?: true
  }

  export type TbusuariosCountAggregateInputType = {
    idusuario?: true
    usu_login?: true
    nome?: true
    senha?: true
    dtcriacao?: true
    usu_admin?: true
    _all?: true
  }

  export type TbusuariosAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbusuarios to aggregate.
     */
    where?: tbusuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbusuarios to fetch.
     */
    orderBy?: tbusuariosOrderByWithRelationInput | tbusuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbusuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbusuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbusuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbusuarios
    **/
    _count?: true | TbusuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TbusuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TbusuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TbusuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TbusuariosMaxAggregateInputType
  }

  export type GetTbusuariosAggregateType<T extends TbusuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbusuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbusuarios[P]>
      : GetScalarType<T[P], AggregateTbusuarios[P]>
  }




  export type tbusuariosGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: tbusuariosWhereInput
    orderBy?: tbusuariosOrderByWithAggregationInput | tbusuariosOrderByWithAggregationInput[]
    by: TbusuariosScalarFieldEnum[] | TbusuariosScalarFieldEnum
    having?: tbusuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TbusuariosCountAggregateInputType | true
    _avg?: TbusuariosAvgAggregateInputType
    _sum?: TbusuariosSumAggregateInputType
    _min?: TbusuariosMinAggregateInputType
    _max?: TbusuariosMaxAggregateInputType
  }

  export type TbusuariosGroupByOutputType = {
    idusuario: number
    usu_login: string | null
    nome: string | null
    senha: string | null
    dtcriacao: Date | null
    usu_admin: boolean | null
    _count: TbusuariosCountAggregateOutputType | null
    _avg: TbusuariosAvgAggregateOutputType | null
    _sum: TbusuariosSumAggregateOutputType | null
    _min: TbusuariosMinAggregateOutputType | null
    _max: TbusuariosMaxAggregateOutputType | null
  }

  type GetTbusuariosGroupByPayload<T extends tbusuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TbusuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TbusuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TbusuariosGroupByOutputType[P]>
            : GetScalarType<T[P], TbusuariosGroupByOutputType[P]>
        }
      >
    >


  export type tbusuariosSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idusuario?: boolean
    usu_login?: boolean
    nome?: boolean
    senha?: boolean
    dtcriacao?: boolean
    usu_admin?: boolean
    tbmovimentos?: boolean | tbusuarios$tbmovimentosArgs<ExtArgs>
    tbnf?: boolean | tbusuarios$tbnfArgs<ExtArgs>
    _count?: boolean | TbusuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbusuarios"]>

  export type tbusuariosSelectScalar = {
    idusuario?: boolean
    usu_login?: boolean
    nome?: boolean
    senha?: boolean
    dtcriacao?: boolean
    usu_admin?: boolean
  }

  export type tbusuariosInclude<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    tbmovimentos?: boolean | tbusuarios$tbmovimentosArgs<ExtArgs>
    tbnf?: boolean | tbusuarios$tbnfArgs<ExtArgs>
    _count?: boolean | TbusuariosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbusuariosPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    name: "tbusuarios"
    objects: {
      tbmovimentos: Prisma.$tbmovimentosPayload<ExtArgs>[]
      tbnf: Prisma.$tbnfPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetResult<{
      idusuario: number
      usu_login: string | null
      nome: string | null
      senha: string | null
      dtcriacao: Date | null
      usu_admin: boolean | null
    }, ExtArgs["result"]["tbusuarios"]>
    composites: {}
  }


  type tbusuariosGetPayload<S extends boolean | null | undefined | tbusuariosDefaultArgs> = $Result.GetResult<Prisma.$tbusuariosPayload, S>

  type tbusuariosCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<tbusuariosFindManyArgs, 'select' | 'include'> & {
      select?: TbusuariosCountAggregateInputType | true
    }

  export interface tbusuariosDelegate<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbusuarios'], meta: { name: 'tbusuarios' } }
    /**
     * Find zero or one Tbusuarios that matches the filter.
     * @param {tbusuariosFindUniqueArgs} args - Arguments to find a Tbusuarios
     * @example
     * // Get one Tbusuarios
     * const tbusuarios = await prisma.tbusuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbusuariosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbusuariosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbusuariosClient<$Result.GetResult<Prisma.$tbusuariosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbusuarios that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tbusuariosFindUniqueOrThrowArgs} args - Arguments to find a Tbusuarios
     * @example
     * // Get one Tbusuarios
     * const tbusuarios = await prisma.tbusuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbusuariosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbusuariosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbusuariosClient<$Result.GetResult<Prisma.$tbusuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbusuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbusuariosFindFirstArgs} args - Arguments to find a Tbusuarios
     * @example
     * // Get one Tbusuarios
     * const tbusuarios = await prisma.tbusuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbusuariosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbusuariosFindFirstArgs<ExtArgs>>
    ): Prisma__tbusuariosClient<$Result.GetResult<Prisma.$tbusuariosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbusuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbusuariosFindFirstOrThrowArgs} args - Arguments to find a Tbusuarios
     * @example
     * // Get one Tbusuarios
     * const tbusuarios = await prisma.tbusuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbusuariosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbusuariosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbusuariosClient<$Result.GetResult<Prisma.$tbusuariosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbusuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbusuariosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbusuarios
     * const tbusuarios = await prisma.tbusuarios.findMany()
     * 
     * // Get first 10 Tbusuarios
     * const tbusuarios = await prisma.tbusuarios.findMany({ take: 10 })
     * 
     * // Only select the `idusuario`
     * const tbusuariosWithIdusuarioOnly = await prisma.tbusuarios.findMany({ select: { idusuario: true } })
     * 
    **/
    findMany<T extends tbusuariosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbusuariosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbusuariosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbusuarios.
     * @param {tbusuariosCreateArgs} args - Arguments to create a Tbusuarios.
     * @example
     * // Create one Tbusuarios
     * const Tbusuarios = await prisma.tbusuarios.create({
     *   data: {
     *     // ... data to create a Tbusuarios
     *   }
     * })
     * 
    **/
    create<T extends tbusuariosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbusuariosCreateArgs<ExtArgs>>
    ): Prisma__tbusuariosClient<$Result.GetResult<Prisma.$tbusuariosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbusuarios.
     *     @param {tbusuariosCreateManyArgs} args - Arguments to create many Tbusuarios.
     *     @example
     *     // Create many Tbusuarios
     *     const tbusuarios = await prisma.tbusuarios.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tbusuariosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbusuariosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbusuarios.
     * @param {tbusuariosDeleteArgs} args - Arguments to delete one Tbusuarios.
     * @example
     * // Delete one Tbusuarios
     * const Tbusuarios = await prisma.tbusuarios.delete({
     *   where: {
     *     // ... filter to delete one Tbusuarios
     *   }
     * })
     * 
    **/
    delete<T extends tbusuariosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbusuariosDeleteArgs<ExtArgs>>
    ): Prisma__tbusuariosClient<$Result.GetResult<Prisma.$tbusuariosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbusuarios.
     * @param {tbusuariosUpdateArgs} args - Arguments to update one Tbusuarios.
     * @example
     * // Update one Tbusuarios
     * const tbusuarios = await prisma.tbusuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbusuariosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbusuariosUpdateArgs<ExtArgs>>
    ): Prisma__tbusuariosClient<$Result.GetResult<Prisma.$tbusuariosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbusuarios.
     * @param {tbusuariosDeleteManyArgs} args - Arguments to filter Tbusuarios to delete.
     * @example
     * // Delete a few Tbusuarios
     * const { count } = await prisma.tbusuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbusuariosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbusuariosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbusuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbusuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbusuarios
     * const tbusuarios = await prisma.tbusuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbusuariosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbusuariosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbusuarios.
     * @param {tbusuariosUpsertArgs} args - Arguments to update or create a Tbusuarios.
     * @example
     * // Update or create a Tbusuarios
     * const tbusuarios = await prisma.tbusuarios.upsert({
     *   create: {
     *     // ... data to create a Tbusuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbusuarios we want to update
     *   }
     * })
    **/
    upsert<T extends tbusuariosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbusuariosUpsertArgs<ExtArgs>>
    ): Prisma__tbusuariosClient<$Result.GetResult<Prisma.$tbusuariosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbusuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbusuariosCountArgs} args - Arguments to filter Tbusuarios to count.
     * @example
     * // Count the number of Tbusuarios
     * const count = await prisma.tbusuarios.count({
     *   where: {
     *     // ... the filter for the Tbusuarios we want to count
     *   }
     * })
    **/
    count<T extends tbusuariosCountArgs>(
      args?: Subset<T, tbusuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TbusuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbusuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TbusuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TbusuariosAggregateArgs>(args: Subset<T, TbusuariosAggregateArgs>): Prisma.PrismaPromise<GetTbusuariosAggregateType<T>>

    /**
     * Group by Tbusuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbusuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbusuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbusuariosGroupByArgs['orderBy'] }
        : { orderBy?: tbusuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbusuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbusuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbusuarios model
   */
  readonly fields: tbusuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbusuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbusuariosClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbmovimentos<T extends tbusuarios$tbmovimentosArgs<ExtArgs> = {}>(args?: Subset<T, tbusuarios$tbmovimentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbmovimentosPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbnf<T extends tbusuarios$tbnfArgs<ExtArgs> = {}>(args?: Subset<T, tbusuarios$tbnfArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbnfPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbusuarios model
   */ 
  interface tbusuariosFieldRefs {
    readonly idusuario: FieldRef<"tbusuarios", 'Int'>
    readonly usu_login: FieldRef<"tbusuarios", 'String'>
    readonly nome: FieldRef<"tbusuarios", 'String'>
    readonly senha: FieldRef<"tbusuarios", 'String'>
    readonly dtcriacao: FieldRef<"tbusuarios", 'DateTime'>
    readonly usu_admin: FieldRef<"tbusuarios", 'Boolean'>
  }
    

  // Custom InputTypes

  /**
   * tbusuarios findUnique
   */
  export type tbusuariosFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbusuarios
     */
    select?: tbusuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbusuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbusuarios to fetch.
     */
    where: tbusuariosWhereUniqueInput
  }


  /**
   * tbusuarios findUniqueOrThrow
   */
  export type tbusuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbusuarios
     */
    select?: tbusuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbusuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbusuarios to fetch.
     */
    where: tbusuariosWhereUniqueInput
  }


  /**
   * tbusuarios findFirst
   */
  export type tbusuariosFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbusuarios
     */
    select?: tbusuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbusuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbusuarios to fetch.
     */
    where?: tbusuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbusuarios to fetch.
     */
    orderBy?: tbusuariosOrderByWithRelationInput | tbusuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbusuarios.
     */
    cursor?: tbusuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbusuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbusuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbusuarios.
     */
    distinct?: TbusuariosScalarFieldEnum | TbusuariosScalarFieldEnum[]
  }


  /**
   * tbusuarios findFirstOrThrow
   */
  export type tbusuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbusuarios
     */
    select?: tbusuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbusuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbusuarios to fetch.
     */
    where?: tbusuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbusuarios to fetch.
     */
    orderBy?: tbusuariosOrderByWithRelationInput | tbusuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbusuarios.
     */
    cursor?: tbusuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbusuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbusuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbusuarios.
     */
    distinct?: TbusuariosScalarFieldEnum | TbusuariosScalarFieldEnum[]
  }


  /**
   * tbusuarios findMany
   */
  export type tbusuariosFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbusuarios
     */
    select?: tbusuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbusuariosInclude<ExtArgs> | null
    /**
     * Filter, which tbusuarios to fetch.
     */
    where?: tbusuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbusuarios to fetch.
     */
    orderBy?: tbusuariosOrderByWithRelationInput | tbusuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbusuarios.
     */
    cursor?: tbusuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbusuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbusuarios.
     */
    skip?: number
    distinct?: TbusuariosScalarFieldEnum | TbusuariosScalarFieldEnum[]
  }


  /**
   * tbusuarios create
   */
  export type tbusuariosCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbusuarios
     */
    select?: tbusuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbusuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbusuarios.
     */
    data?: XOR<tbusuariosCreateInput, tbusuariosUncheckedCreateInput>
  }


  /**
   * tbusuarios createMany
   */
  export type tbusuariosCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbusuarios.
     */
    data: tbusuariosCreateManyInput | tbusuariosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tbusuarios update
   */
  export type tbusuariosUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbusuarios
     */
    select?: tbusuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbusuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbusuarios.
     */
    data: XOR<tbusuariosUpdateInput, tbusuariosUncheckedUpdateInput>
    /**
     * Choose, which tbusuarios to update.
     */
    where: tbusuariosWhereUniqueInput
  }


  /**
   * tbusuarios updateMany
   */
  export type tbusuariosUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbusuarios.
     */
    data: XOR<tbusuariosUpdateManyMutationInput, tbusuariosUncheckedUpdateManyInput>
    /**
     * Filter which tbusuarios to update
     */
    where?: tbusuariosWhereInput
  }


  /**
   * tbusuarios upsert
   */
  export type tbusuariosUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbusuarios
     */
    select?: tbusuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbusuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbusuarios to update in case it exists.
     */
    where: tbusuariosWhereUniqueInput
    /**
     * In case the tbusuarios found by the `where` argument doesn't exist, create a new tbusuarios with this data.
     */
    create: XOR<tbusuariosCreateInput, tbusuariosUncheckedCreateInput>
    /**
     * In case the tbusuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbusuariosUpdateInput, tbusuariosUncheckedUpdateInput>
  }


  /**
   * tbusuarios delete
   */
  export type tbusuariosDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbusuarios
     */
    select?: tbusuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbusuariosInclude<ExtArgs> | null
    /**
     * Filter which tbusuarios to delete.
     */
    where: tbusuariosWhereUniqueInput
  }


  /**
   * tbusuarios deleteMany
   */
  export type tbusuariosDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbusuarios to delete
     */
    where?: tbusuariosWhereInput
  }


  /**
   * tbusuarios.tbmovimentos
   */
  export type tbusuarios$tbmovimentosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbmovimentos
     */
    select?: tbmovimentosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbmovimentosInclude<ExtArgs> | null
    where?: tbmovimentosWhereInput
    orderBy?: tbmovimentosOrderByWithRelationInput | tbmovimentosOrderByWithRelationInput[]
    cursor?: tbmovimentosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbmovimentosScalarFieldEnum | TbmovimentosScalarFieldEnum[]
  }


  /**
   * tbusuarios.tbnf
   */
  export type tbusuarios$tbnfArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbnf
     */
    select?: tbnfSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbnfInclude<ExtArgs> | null
    where?: tbnfWhereInput
    orderBy?: tbnfOrderByWithRelationInput | tbnfOrderByWithRelationInput[]
    cursor?: tbnfWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TbnfScalarFieldEnum | TbnfScalarFieldEnum[]
  }


  /**
   * tbusuarios without action
   */
  export type tbusuariosDefaultArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbusuarios
     */
    select?: tbusuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tbusuariosInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const TbestoqueScalarFieldEnum: {
    idestoque: 'idestoque',
    idproduto: 'idproduto',
    idlocal: 'idlocal',
    quantidade: 'quantidade',
    dtinc: 'dtinc'
  };

  export type TbestoqueScalarFieldEnum = (typeof TbestoqueScalarFieldEnum)[keyof typeof TbestoqueScalarFieldEnum]


  export const TbfornecedoresScalarFieldEnum: {
    idfor: 'idfor',
    nomefor: 'nomefor',
    fisjur: 'fisjur',
    cnpjcpf: 'cnpjcpf',
    telefone: 'telefone',
    cep: 'cep',
    cidade: 'cidade',
    rua: 'rua',
    bairro: 'bairro',
    numero: 'numero',
    complemento: 'complemento',
    email: 'email'
  };

  export type TbfornecedoresScalarFieldEnum = (typeof TbfornecedoresScalarFieldEnum)[keyof typeof TbfornecedoresScalarFieldEnum]


  export const TblocaisScalarFieldEnum: {
    idlocal: 'idlocal',
    nomelocal: 'nomelocal'
  };

  export type TblocaisScalarFieldEnum = (typeof TblocaisScalarFieldEnum)[keyof typeof TblocaisScalarFieldEnum]


  export const TbmovimentosScalarFieldEnum: {
    idmovimento: 'idmovimento',
    tipmov: 'tipmov',
    idfor: 'idfor',
    idusuario_alteracao: 'idusuario_alteracao',
    dtinc: 'dtinc'
  };

  export type TbmovimentosScalarFieldEnum = (typeof TbmovimentosScalarFieldEnum)[keyof typeof TbmovimentosScalarFieldEnum]


  export const TbmovitensScalarFieldEnum: {
    idmovimento: 'idmovimento',
    seqitem: 'seqitem',
    idproduto: 'idproduto',
    idlocal: 'idlocal',
    dtinc: 'dtinc',
    quantidade: 'quantidade'
  };

  export type TbmovitensScalarFieldEnum = (typeof TbmovitensScalarFieldEnum)[keyof typeof TbmovitensScalarFieldEnum]


  export const TbnfScalarFieldEnum: {
    idnf: 'idnf',
    numnf: 'numnf',
    idmovimento: 'idmovimento',
    serienf: 'serienf',
    idfor: 'idfor',
    idusuario_inclusao: 'idusuario_inclusao',
    dtemissao: 'dtemissao',
    vlrtotal: 'vlrtotal',
    observacao: 'observacao'
  };

  export type TbnfScalarFieldEnum = (typeof TbnfScalarFieldEnum)[keyof typeof TbnfScalarFieldEnum]


  export const TbnfitensScalarFieldEnum: {
    idnf: 'idnf',
    idmovimento: 'idmovimento',
    seqitem: 'seqitem',
    idproduto: 'idproduto',
    vlrunitario: 'vlrunitario',
    quantidade: 'quantidade',
    vlrtotitem: 'vlrtotitem'
  };

  export type TbnfitensScalarFieldEnum = (typeof TbnfitensScalarFieldEnum)[keyof typeof TbnfitensScalarFieldEnum]


  export const TbprodcomposicaoScalarFieldEnum: {
    idcomp: 'idcomp',
    idproduto: 'idproduto',
    idprodutocomp: 'idprodutocomp',
    quantidade: 'quantidade'
  };

  export type TbprodcomposicaoScalarFieldEnum = (typeof TbprodcomposicaoScalarFieldEnum)[keyof typeof TbprodcomposicaoScalarFieldEnum]


  export const TbprodutosScalarFieldEnum: {
    idproduto: 'idproduto',
    nomeprod: 'nomeprod',
    idtipprod: 'idtipprod',
    idunidade: 'idunidade',
    quantminima: 'quantminima'
  };

  export type TbprodutosScalarFieldEnum = (typeof TbprodutosScalarFieldEnum)[keyof typeof TbprodutosScalarFieldEnum]


  export const TbtiposprodutosScalarFieldEnum: {
    idtipprod: 'idtipprod',
    nometipprod: 'nometipprod'
  };

  export type TbtiposprodutosScalarFieldEnum = (typeof TbtiposprodutosScalarFieldEnum)[keyof typeof TbtiposprodutosScalarFieldEnum]


  export const TbunidademedidaScalarFieldEnum: {
    idunidade: 'idunidade',
    siglaun: 'siglaun',
    nomeunidade: 'nomeunidade'
  };

  export type TbunidademedidaScalarFieldEnum = (typeof TbunidademedidaScalarFieldEnum)[keyof typeof TbunidademedidaScalarFieldEnum]


  export const TbusuariosScalarFieldEnum: {
    idusuario: 'idusuario',
    usu_login: 'usu_login',
    nome: 'nome',
    senha: 'senha',
    dtcriacao: 'dtcriacao',
    usu_admin: 'usu_admin'
  };

  export type TbusuariosScalarFieldEnum = (typeof TbusuariosScalarFieldEnum)[keyof typeof TbusuariosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type tbestoqueWhereInput = {
    AND?: tbestoqueWhereInput | tbestoqueWhereInput[]
    OR?: tbestoqueWhereInput[]
    NOT?: tbestoqueWhereInput | tbestoqueWhereInput[]
    idestoque?: IntFilter<"tbestoque"> | number
    idproduto?: IntFilter<"tbestoque"> | number
    idlocal?: IntNullableFilter<"tbestoque"> | number | null
    quantidade?: DecimalNullableFilter<"tbestoque"> | Decimal | DecimalJsLike | number | string | null
    dtinc?: DateTimeNullableFilter<"tbestoque"> | Date | string | null
    tblocais?: XOR<TblocaisNullableRelationFilter, tblocaisWhereInput> | null
    tbprodutos?: XOR<TbprodutosRelationFilter, tbprodutosWhereInput>
  }

  export type tbestoqueOrderByWithRelationInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    dtinc?: SortOrderInput | SortOrder
    tblocais?: tblocaisOrderByWithRelationInput
    tbprodutos?: tbprodutosOrderByWithRelationInput
  }

  export type tbestoqueWhereUniqueInput = Prisma.AtLeast<{
    idestoque_idproduto?: tbestoqueIdestoqueIdprodutoCompoundUniqueInput
    AND?: tbestoqueWhereInput | tbestoqueWhereInput[]
    OR?: tbestoqueWhereInput[]
    NOT?: tbestoqueWhereInput | tbestoqueWhereInput[]
    idestoque?: IntFilter<"tbestoque"> | number
    idproduto?: IntFilter<"tbestoque"> | number
    idlocal?: IntNullableFilter<"tbestoque"> | number | null
    quantidade?: DecimalNullableFilter<"tbestoque"> | Decimal | DecimalJsLike | number | string | null
    dtinc?: DateTimeNullableFilter<"tbestoque"> | Date | string | null
    tblocais?: XOR<TblocaisNullableRelationFilter, tblocaisWhereInput> | null
    tbprodutos?: XOR<TbprodutosRelationFilter, tbprodutosWhereInput>
  }, "idestoque_idproduto">

  export type tbestoqueOrderByWithAggregationInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    dtinc?: SortOrderInput | SortOrder
    _count?: tbestoqueCountOrderByAggregateInput
    _avg?: tbestoqueAvgOrderByAggregateInput
    _max?: tbestoqueMaxOrderByAggregateInput
    _min?: tbestoqueMinOrderByAggregateInput
    _sum?: tbestoqueSumOrderByAggregateInput
  }

  export type tbestoqueScalarWhereWithAggregatesInput = {
    AND?: tbestoqueScalarWhereWithAggregatesInput | tbestoqueScalarWhereWithAggregatesInput[]
    OR?: tbestoqueScalarWhereWithAggregatesInput[]
    NOT?: tbestoqueScalarWhereWithAggregatesInput | tbestoqueScalarWhereWithAggregatesInput[]
    idestoque?: IntWithAggregatesFilter<"tbestoque"> | number
    idproduto?: IntWithAggregatesFilter<"tbestoque"> | number
    idlocal?: IntNullableWithAggregatesFilter<"tbestoque"> | number | null
    quantidade?: DecimalNullableWithAggregatesFilter<"tbestoque"> | Decimal | DecimalJsLike | number | string | null
    dtinc?: DateTimeNullableWithAggregatesFilter<"tbestoque"> | Date | string | null
  }

  export type tbfornecedoresWhereInput = {
    AND?: tbfornecedoresWhereInput | tbfornecedoresWhereInput[]
    OR?: tbfornecedoresWhereInput[]
    NOT?: tbfornecedoresWhereInput | tbfornecedoresWhereInput[]
    idfor?: IntFilter<"tbfornecedores"> | number
    nomefor?: StringNullableFilter<"tbfornecedores"> | string | null
    fisjur?: StringNullableFilter<"tbfornecedores"> | string | null
    cnpjcpf?: StringNullableFilter<"tbfornecedores"> | string | null
    telefone?: StringNullableFilter<"tbfornecedores"> | string | null
    cep?: StringNullableFilter<"tbfornecedores"> | string | null
    cidade?: StringNullableFilter<"tbfornecedores"> | string | null
    rua?: StringNullableFilter<"tbfornecedores"> | string | null
    bairro?: StringNullableFilter<"tbfornecedores"> | string | null
    numero?: IntNullableFilter<"tbfornecedores"> | number | null
    complemento?: StringNullableFilter<"tbfornecedores"> | string | null
    email?: StringNullableFilter<"tbfornecedores"> | string | null
    tbmovimentos?: TbmovimentosListRelationFilter
    tbnf?: TbnfListRelationFilter
  }

  export type tbfornecedoresOrderByWithRelationInput = {
    idfor?: SortOrder
    nomefor?: SortOrderInput | SortOrder
    fisjur?: SortOrderInput | SortOrder
    cnpjcpf?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    rua?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    tbmovimentos?: tbmovimentosOrderByRelationAggregateInput
    tbnf?: tbnfOrderByRelationAggregateInput
  }

  export type tbfornecedoresWhereUniqueInput = Prisma.AtLeast<{
    idfor?: number
    cnpjcpf?: string
    email?: string
    AND?: tbfornecedoresWhereInput | tbfornecedoresWhereInput[]
    OR?: tbfornecedoresWhereInput[]
    NOT?: tbfornecedoresWhereInput | tbfornecedoresWhereInput[]
    nomefor?: StringNullableFilter<"tbfornecedores"> | string | null
    fisjur?: StringNullableFilter<"tbfornecedores"> | string | null
    telefone?: StringNullableFilter<"tbfornecedores"> | string | null
    cep?: StringNullableFilter<"tbfornecedores"> | string | null
    cidade?: StringNullableFilter<"tbfornecedores"> | string | null
    rua?: StringNullableFilter<"tbfornecedores"> | string | null
    bairro?: StringNullableFilter<"tbfornecedores"> | string | null
    numero?: IntNullableFilter<"tbfornecedores"> | number | null
    complemento?: StringNullableFilter<"tbfornecedores"> | string | null
    tbmovimentos?: TbmovimentosListRelationFilter
    tbnf?: TbnfListRelationFilter
  }, "idfor" | "cnpjcpf" | "email">

  export type tbfornecedoresOrderByWithAggregationInput = {
    idfor?: SortOrder
    nomefor?: SortOrderInput | SortOrder
    fisjur?: SortOrderInput | SortOrder
    cnpjcpf?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    rua?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    _count?: tbfornecedoresCountOrderByAggregateInput
    _avg?: tbfornecedoresAvgOrderByAggregateInput
    _max?: tbfornecedoresMaxOrderByAggregateInput
    _min?: tbfornecedoresMinOrderByAggregateInput
    _sum?: tbfornecedoresSumOrderByAggregateInput
  }

  export type tbfornecedoresScalarWhereWithAggregatesInput = {
    AND?: tbfornecedoresScalarWhereWithAggregatesInput | tbfornecedoresScalarWhereWithAggregatesInput[]
    OR?: tbfornecedoresScalarWhereWithAggregatesInput[]
    NOT?: tbfornecedoresScalarWhereWithAggregatesInput | tbfornecedoresScalarWhereWithAggregatesInput[]
    idfor?: IntWithAggregatesFilter<"tbfornecedores"> | number
    nomefor?: StringNullableWithAggregatesFilter<"tbfornecedores"> | string | null
    fisjur?: StringNullableWithAggregatesFilter<"tbfornecedores"> | string | null
    cnpjcpf?: StringNullableWithAggregatesFilter<"tbfornecedores"> | string | null
    telefone?: StringNullableWithAggregatesFilter<"tbfornecedores"> | string | null
    cep?: StringNullableWithAggregatesFilter<"tbfornecedores"> | string | null
    cidade?: StringNullableWithAggregatesFilter<"tbfornecedores"> | string | null
    rua?: StringNullableWithAggregatesFilter<"tbfornecedores"> | string | null
    bairro?: StringNullableWithAggregatesFilter<"tbfornecedores"> | string | null
    numero?: IntNullableWithAggregatesFilter<"tbfornecedores"> | number | null
    complemento?: StringNullableWithAggregatesFilter<"tbfornecedores"> | string | null
    email?: StringNullableWithAggregatesFilter<"tbfornecedores"> | string | null
  }

  export type tblocaisWhereInput = {
    AND?: tblocaisWhereInput | tblocaisWhereInput[]
    OR?: tblocaisWhereInput[]
    NOT?: tblocaisWhereInput | tblocaisWhereInput[]
    idlocal?: IntFilter<"tblocais"> | number
    nomelocal?: StringNullableFilter<"tblocais"> | string | null
    tbestoque?: TbestoqueListRelationFilter
    tbmovitens?: TbmovitensListRelationFilter
  }

  export type tblocaisOrderByWithRelationInput = {
    idlocal?: SortOrder
    nomelocal?: SortOrderInput | SortOrder
    tbestoque?: tbestoqueOrderByRelationAggregateInput
    tbmovitens?: tbmovitensOrderByRelationAggregateInput
  }

  export type tblocaisWhereUniqueInput = Prisma.AtLeast<{
    idlocal?: number
    AND?: tblocaisWhereInput | tblocaisWhereInput[]
    OR?: tblocaisWhereInput[]
    NOT?: tblocaisWhereInput | tblocaisWhereInput[]
    nomelocal?: StringNullableFilter<"tblocais"> | string | null
    tbestoque?: TbestoqueListRelationFilter
    tbmovitens?: TbmovitensListRelationFilter
  }, "idlocal">

  export type tblocaisOrderByWithAggregationInput = {
    idlocal?: SortOrder
    nomelocal?: SortOrderInput | SortOrder
    _count?: tblocaisCountOrderByAggregateInput
    _avg?: tblocaisAvgOrderByAggregateInput
    _max?: tblocaisMaxOrderByAggregateInput
    _min?: tblocaisMinOrderByAggregateInput
    _sum?: tblocaisSumOrderByAggregateInput
  }

  export type tblocaisScalarWhereWithAggregatesInput = {
    AND?: tblocaisScalarWhereWithAggregatesInput | tblocaisScalarWhereWithAggregatesInput[]
    OR?: tblocaisScalarWhereWithAggregatesInput[]
    NOT?: tblocaisScalarWhereWithAggregatesInput | tblocaisScalarWhereWithAggregatesInput[]
    idlocal?: IntWithAggregatesFilter<"tblocais"> | number
    nomelocal?: StringNullableWithAggregatesFilter<"tblocais"> | string | null
  }

  export type tbmovimentosWhereInput = {
    AND?: tbmovimentosWhereInput | tbmovimentosWhereInput[]
    OR?: tbmovimentosWhereInput[]
    NOT?: tbmovimentosWhereInput | tbmovimentosWhereInput[]
    idmovimento?: IntFilter<"tbmovimentos"> | number
    tipmov?: StringNullableFilter<"tbmovimentos"> | string | null
    idfor?: IntNullableFilter<"tbmovimentos"> | number | null
    idusuario_alteracao?: IntNullableFilter<"tbmovimentos"> | number | null
    dtinc?: DateTimeNullableFilter<"tbmovimentos"> | Date | string | null
    tbfornecedores?: XOR<TbfornecedoresNullableRelationFilter, tbfornecedoresWhereInput> | null
    tbusuarios?: XOR<TbusuariosNullableRelationFilter, tbusuariosWhereInput> | null
    tbmovitens?: TbmovitensListRelationFilter
    tbnf?: XOR<TbnfNullableRelationFilter, tbnfWhereInput> | null
  }

  export type tbmovimentosOrderByWithRelationInput = {
    idmovimento?: SortOrder
    tipmov?: SortOrderInput | SortOrder
    idfor?: SortOrderInput | SortOrder
    idusuario_alteracao?: SortOrderInput | SortOrder
    dtinc?: SortOrderInput | SortOrder
    tbfornecedores?: tbfornecedoresOrderByWithRelationInput
    tbusuarios?: tbusuariosOrderByWithRelationInput
    tbmovitens?: tbmovitensOrderByRelationAggregateInput
    tbnf?: tbnfOrderByWithRelationInput
  }

  export type tbmovimentosWhereUniqueInput = Prisma.AtLeast<{
    idmovimento?: number
    AND?: tbmovimentosWhereInput | tbmovimentosWhereInput[]
    OR?: tbmovimentosWhereInput[]
    NOT?: tbmovimentosWhereInput | tbmovimentosWhereInput[]
    tipmov?: StringNullableFilter<"tbmovimentos"> | string | null
    idfor?: IntNullableFilter<"tbmovimentos"> | number | null
    idusuario_alteracao?: IntNullableFilter<"tbmovimentos"> | number | null
    dtinc?: DateTimeNullableFilter<"tbmovimentos"> | Date | string | null
    tbfornecedores?: XOR<TbfornecedoresNullableRelationFilter, tbfornecedoresWhereInput> | null
    tbusuarios?: XOR<TbusuariosNullableRelationFilter, tbusuariosWhereInput> | null
    tbmovitens?: TbmovitensListRelationFilter
    tbnf?: XOR<TbnfNullableRelationFilter, tbnfWhereInput> | null
  }, "idmovimento">

  export type tbmovimentosOrderByWithAggregationInput = {
    idmovimento?: SortOrder
    tipmov?: SortOrderInput | SortOrder
    idfor?: SortOrderInput | SortOrder
    idusuario_alteracao?: SortOrderInput | SortOrder
    dtinc?: SortOrderInput | SortOrder
    _count?: tbmovimentosCountOrderByAggregateInput
    _avg?: tbmovimentosAvgOrderByAggregateInput
    _max?: tbmovimentosMaxOrderByAggregateInput
    _min?: tbmovimentosMinOrderByAggregateInput
    _sum?: tbmovimentosSumOrderByAggregateInput
  }

  export type tbmovimentosScalarWhereWithAggregatesInput = {
    AND?: tbmovimentosScalarWhereWithAggregatesInput | tbmovimentosScalarWhereWithAggregatesInput[]
    OR?: tbmovimentosScalarWhereWithAggregatesInput[]
    NOT?: tbmovimentosScalarWhereWithAggregatesInput | tbmovimentosScalarWhereWithAggregatesInput[]
    idmovimento?: IntWithAggregatesFilter<"tbmovimentos"> | number
    tipmov?: StringNullableWithAggregatesFilter<"tbmovimentos"> | string | null
    idfor?: IntNullableWithAggregatesFilter<"tbmovimentos"> | number | null
    idusuario_alteracao?: IntNullableWithAggregatesFilter<"tbmovimentos"> | number | null
    dtinc?: DateTimeNullableWithAggregatesFilter<"tbmovimentos"> | Date | string | null
  }

  export type tbmovitensWhereInput = {
    AND?: tbmovitensWhereInput | tbmovitensWhereInput[]
    OR?: tbmovitensWhereInput[]
    NOT?: tbmovitensWhereInput | tbmovitensWhereInput[]
    idmovimento?: IntFilter<"tbmovitens"> | number
    seqitem?: IntFilter<"tbmovitens"> | number
    idproduto?: IntFilter<"tbmovitens"> | number
    idlocal?: IntNullableFilter<"tbmovitens"> | number | null
    dtinc?: DateTimeNullableFilter<"tbmovitens"> | Date | string | null
    quantidade?: DecimalNullableFilter<"tbmovitens"> | Decimal | DecimalJsLike | number | string | null
    tblocais?: XOR<TblocaisNullableRelationFilter, tblocaisWhereInput> | null
    tbmovimentos?: XOR<TbmovimentosRelationFilter, tbmovimentosWhereInput>
    tbprodutos?: XOR<TbprodutosRelationFilter, tbprodutosWhereInput>
    tbnfitens?: TbnfitensListRelationFilter
  }

  export type tbmovitensOrderByWithRelationInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrderInput | SortOrder
    dtinc?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    tblocais?: tblocaisOrderByWithRelationInput
    tbmovimentos?: tbmovimentosOrderByWithRelationInput
    tbprodutos?: tbprodutosOrderByWithRelationInput
    tbnfitens?: tbnfitensOrderByRelationAggregateInput
  }

  export type tbmovitensWhereUniqueInput = Prisma.AtLeast<{
    idmovimento_seqitem_idproduto?: tbmovitensIdmovimentoSeqitemIdprodutoCompoundUniqueInput
    AND?: tbmovitensWhereInput | tbmovitensWhereInput[]
    OR?: tbmovitensWhereInput[]
    NOT?: tbmovitensWhereInput | tbmovitensWhereInput[]
    idmovimento?: IntFilter<"tbmovitens"> | number
    seqitem?: IntFilter<"tbmovitens"> | number
    idproduto?: IntFilter<"tbmovitens"> | number
    idlocal?: IntNullableFilter<"tbmovitens"> | number | null
    dtinc?: DateTimeNullableFilter<"tbmovitens"> | Date | string | null
    quantidade?: DecimalNullableFilter<"tbmovitens"> | Decimal | DecimalJsLike | number | string | null
    tblocais?: XOR<TblocaisNullableRelationFilter, tblocaisWhereInput> | null
    tbmovimentos?: XOR<TbmovimentosRelationFilter, tbmovimentosWhereInput>
    tbprodutos?: XOR<TbprodutosRelationFilter, tbprodutosWhereInput>
    tbnfitens?: TbnfitensListRelationFilter
  }, "idmovimento_seqitem_idproduto">

  export type tbmovitensOrderByWithAggregationInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrderInput | SortOrder
    dtinc?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    _count?: tbmovitensCountOrderByAggregateInput
    _avg?: tbmovitensAvgOrderByAggregateInput
    _max?: tbmovitensMaxOrderByAggregateInput
    _min?: tbmovitensMinOrderByAggregateInput
    _sum?: tbmovitensSumOrderByAggregateInput
  }

  export type tbmovitensScalarWhereWithAggregatesInput = {
    AND?: tbmovitensScalarWhereWithAggregatesInput | tbmovitensScalarWhereWithAggregatesInput[]
    OR?: tbmovitensScalarWhereWithAggregatesInput[]
    NOT?: tbmovitensScalarWhereWithAggregatesInput | tbmovitensScalarWhereWithAggregatesInput[]
    idmovimento?: IntWithAggregatesFilter<"tbmovitens"> | number
    seqitem?: IntWithAggregatesFilter<"tbmovitens"> | number
    idproduto?: IntWithAggregatesFilter<"tbmovitens"> | number
    idlocal?: IntNullableWithAggregatesFilter<"tbmovitens"> | number | null
    dtinc?: DateTimeNullableWithAggregatesFilter<"tbmovitens"> | Date | string | null
    quantidade?: DecimalNullableWithAggregatesFilter<"tbmovitens"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfWhereInput = {
    AND?: tbnfWhereInput | tbnfWhereInput[]
    OR?: tbnfWhereInput[]
    NOT?: tbnfWhereInput | tbnfWhereInput[]
    idnf?: IntFilter<"tbnf"> | number
    numnf?: IntNullableFilter<"tbnf"> | number | null
    idmovimento?: IntNullableFilter<"tbnf"> | number | null
    serienf?: IntNullableFilter<"tbnf"> | number | null
    idfor?: IntNullableFilter<"tbnf"> | number | null
    idusuario_inclusao?: IntNullableFilter<"tbnf"> | number | null
    dtemissao?: DateTimeNullableFilter<"tbnf"> | Date | string | null
    vlrtotal?: DecimalNullableFilter<"tbnf"> | Decimal | DecimalJsLike | number | string | null
    observacao?: StringNullableFilter<"tbnf"> | string | null
    tbmovimentos?: XOR<TbmovimentosNullableRelationFilter, tbmovimentosWhereInput> | null
    tbfornecedores?: XOR<TbfornecedoresNullableRelationFilter, tbfornecedoresWhereInput> | null
    tbusuarios?: XOR<TbusuariosNullableRelationFilter, tbusuariosWhereInput> | null
    tbnfitens?: TbnfitensListRelationFilter
  }

  export type tbnfOrderByWithRelationInput = {
    idnf?: SortOrder
    numnf?: SortOrderInput | SortOrder
    idmovimento?: SortOrderInput | SortOrder
    serienf?: SortOrderInput | SortOrder
    idfor?: SortOrderInput | SortOrder
    idusuario_inclusao?: SortOrderInput | SortOrder
    dtemissao?: SortOrderInput | SortOrder
    vlrtotal?: SortOrderInput | SortOrder
    observacao?: SortOrderInput | SortOrder
    tbmovimentos?: tbmovimentosOrderByWithRelationInput
    tbfornecedores?: tbfornecedoresOrderByWithRelationInput
    tbusuarios?: tbusuariosOrderByWithRelationInput
    tbnfitens?: tbnfitensOrderByRelationAggregateInput
  }

  export type tbnfWhereUniqueInput = Prisma.AtLeast<{
    idnf?: number
    numnf?: number
    idmovimento?: number
    AND?: tbnfWhereInput | tbnfWhereInput[]
    OR?: tbnfWhereInput[]
    NOT?: tbnfWhereInput | tbnfWhereInput[]
    serienf?: IntNullableFilter<"tbnf"> | number | null
    idfor?: IntNullableFilter<"tbnf"> | number | null
    idusuario_inclusao?: IntNullableFilter<"tbnf"> | number | null
    dtemissao?: DateTimeNullableFilter<"tbnf"> | Date | string | null
    vlrtotal?: DecimalNullableFilter<"tbnf"> | Decimal | DecimalJsLike | number | string | null
    observacao?: StringNullableFilter<"tbnf"> | string | null
    tbmovimentos?: XOR<TbmovimentosNullableRelationFilter, tbmovimentosWhereInput> | null
    tbfornecedores?: XOR<TbfornecedoresNullableRelationFilter, tbfornecedoresWhereInput> | null
    tbusuarios?: XOR<TbusuariosNullableRelationFilter, tbusuariosWhereInput> | null
    tbnfitens?: TbnfitensListRelationFilter
  }, "idnf" | "numnf" | "idmovimento">

  export type tbnfOrderByWithAggregationInput = {
    idnf?: SortOrder
    numnf?: SortOrderInput | SortOrder
    idmovimento?: SortOrderInput | SortOrder
    serienf?: SortOrderInput | SortOrder
    idfor?: SortOrderInput | SortOrder
    idusuario_inclusao?: SortOrderInput | SortOrder
    dtemissao?: SortOrderInput | SortOrder
    vlrtotal?: SortOrderInput | SortOrder
    observacao?: SortOrderInput | SortOrder
    _count?: tbnfCountOrderByAggregateInput
    _avg?: tbnfAvgOrderByAggregateInput
    _max?: tbnfMaxOrderByAggregateInput
    _min?: tbnfMinOrderByAggregateInput
    _sum?: tbnfSumOrderByAggregateInput
  }

  export type tbnfScalarWhereWithAggregatesInput = {
    AND?: tbnfScalarWhereWithAggregatesInput | tbnfScalarWhereWithAggregatesInput[]
    OR?: tbnfScalarWhereWithAggregatesInput[]
    NOT?: tbnfScalarWhereWithAggregatesInput | tbnfScalarWhereWithAggregatesInput[]
    idnf?: IntWithAggregatesFilter<"tbnf"> | number
    numnf?: IntNullableWithAggregatesFilter<"tbnf"> | number | null
    idmovimento?: IntNullableWithAggregatesFilter<"tbnf"> | number | null
    serienf?: IntNullableWithAggregatesFilter<"tbnf"> | number | null
    idfor?: IntNullableWithAggregatesFilter<"tbnf"> | number | null
    idusuario_inclusao?: IntNullableWithAggregatesFilter<"tbnf"> | number | null
    dtemissao?: DateTimeNullableWithAggregatesFilter<"tbnf"> | Date | string | null
    vlrtotal?: DecimalNullableWithAggregatesFilter<"tbnf"> | Decimal | DecimalJsLike | number | string | null
    observacao?: StringNullableWithAggregatesFilter<"tbnf"> | string | null
  }

  export type tbnfitensWhereInput = {
    AND?: tbnfitensWhereInput | tbnfitensWhereInput[]
    OR?: tbnfitensWhereInput[]
    NOT?: tbnfitensWhereInput | tbnfitensWhereInput[]
    idnf?: IntFilter<"tbnfitens"> | number
    idmovimento?: IntNullableFilter<"tbnfitens"> | number | null
    seqitem?: IntFilter<"tbnfitens"> | number
    idproduto?: IntFilter<"tbnfitens"> | number
    vlrunitario?: DecimalNullableFilter<"tbnfitens"> | Decimal | DecimalJsLike | number | string | null
    quantidade?: DecimalNullableFilter<"tbnfitens"> | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: DecimalNullableFilter<"tbnfitens"> | Decimal | DecimalJsLike | number | string | null
    tbmovitens?: XOR<TbmovitensNullableRelationFilter, tbmovitensWhereInput> | null
    tbnf?: XOR<TbnfRelationFilter, tbnfWhereInput>
  }

  export type tbnfitensOrderByWithRelationInput = {
    idnf?: SortOrder
    idmovimento?: SortOrderInput | SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    vlrtotitem?: SortOrderInput | SortOrder
    tbmovitens?: tbmovitensOrderByWithRelationInput
    tbnf?: tbnfOrderByWithRelationInput
  }

  export type tbnfitensWhereUniqueInput = Prisma.AtLeast<{
    idnf_seqitem_idproduto?: tbnfitensIdnfSeqitemIdprodutoCompoundUniqueInput
    AND?: tbnfitensWhereInput | tbnfitensWhereInput[]
    OR?: tbnfitensWhereInput[]
    NOT?: tbnfitensWhereInput | tbnfitensWhereInput[]
    idnf?: IntFilter<"tbnfitens"> | number
    idmovimento?: IntNullableFilter<"tbnfitens"> | number | null
    seqitem?: IntFilter<"tbnfitens"> | number
    idproduto?: IntFilter<"tbnfitens"> | number
    vlrunitario?: DecimalNullableFilter<"tbnfitens"> | Decimal | DecimalJsLike | number | string | null
    quantidade?: DecimalNullableFilter<"tbnfitens"> | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: DecimalNullableFilter<"tbnfitens"> | Decimal | DecimalJsLike | number | string | null
    tbmovitens?: XOR<TbmovitensNullableRelationFilter, tbmovitensWhereInput> | null
    tbnf?: XOR<TbnfRelationFilter, tbnfWhereInput>
  }, "idnf_seqitem_idproduto">

  export type tbnfitensOrderByWithAggregationInput = {
    idnf?: SortOrder
    idmovimento?: SortOrderInput | SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrderInput | SortOrder
    quantidade?: SortOrderInput | SortOrder
    vlrtotitem?: SortOrderInput | SortOrder
    _count?: tbnfitensCountOrderByAggregateInput
    _avg?: tbnfitensAvgOrderByAggregateInput
    _max?: tbnfitensMaxOrderByAggregateInput
    _min?: tbnfitensMinOrderByAggregateInput
    _sum?: tbnfitensSumOrderByAggregateInput
  }

  export type tbnfitensScalarWhereWithAggregatesInput = {
    AND?: tbnfitensScalarWhereWithAggregatesInput | tbnfitensScalarWhereWithAggregatesInput[]
    OR?: tbnfitensScalarWhereWithAggregatesInput[]
    NOT?: tbnfitensScalarWhereWithAggregatesInput | tbnfitensScalarWhereWithAggregatesInput[]
    idnf?: IntWithAggregatesFilter<"tbnfitens"> | number
    idmovimento?: IntNullableWithAggregatesFilter<"tbnfitens"> | number | null
    seqitem?: IntWithAggregatesFilter<"tbnfitens"> | number
    idproduto?: IntWithAggregatesFilter<"tbnfitens"> | number
    vlrunitario?: DecimalNullableWithAggregatesFilter<"tbnfitens"> | Decimal | DecimalJsLike | number | string | null
    quantidade?: DecimalNullableWithAggregatesFilter<"tbnfitens"> | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: DecimalNullableWithAggregatesFilter<"tbnfitens"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoWhereInput = {
    AND?: tbprodcomposicaoWhereInput | tbprodcomposicaoWhereInput[]
    OR?: tbprodcomposicaoWhereInput[]
    NOT?: tbprodcomposicaoWhereInput | tbprodcomposicaoWhereInput[]
    idcomp?: IntFilter<"tbprodcomposicao"> | number
    idproduto?: IntFilter<"tbprodcomposicao"> | number
    idprodutocomp?: IntFilter<"tbprodcomposicao"> | number
    quantidade?: DecimalNullableFilter<"tbprodcomposicao"> | Decimal | DecimalJsLike | number | string | null
    tbprodutos_tbprodcomposicao_idprodutoTotbprodutos?: XOR<TbprodutosRelationFilter, tbprodutosWhereInput>
    tbprodutos_tbprodcomposicao_idprodutocompTotbprodutos?: XOR<TbprodutosRelationFilter, tbprodutosWhereInput>
  }

  export type tbprodcomposicaoOrderByWithRelationInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrderInput | SortOrder
    tbprodutos_tbprodcomposicao_idprodutoTotbprodutos?: tbprodutosOrderByWithRelationInput
    tbprodutos_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodutosOrderByWithRelationInput
  }

  export type tbprodcomposicaoWhereUniqueInput = Prisma.AtLeast<{
    idcomp_idproduto_idprodutocomp?: tbprodcomposicaoIdcompIdprodutoIdprodutocompCompoundUniqueInput
    AND?: tbprodcomposicaoWhereInput | tbprodcomposicaoWhereInput[]
    OR?: tbprodcomposicaoWhereInput[]
    NOT?: tbprodcomposicaoWhereInput | tbprodcomposicaoWhereInput[]
    idcomp?: IntFilter<"tbprodcomposicao"> | number
    idproduto?: IntFilter<"tbprodcomposicao"> | number
    idprodutocomp?: IntFilter<"tbprodcomposicao"> | number
    quantidade?: DecimalNullableFilter<"tbprodcomposicao"> | Decimal | DecimalJsLike | number | string | null
    tbprodutos_tbprodcomposicao_idprodutoTotbprodutos?: XOR<TbprodutosRelationFilter, tbprodutosWhereInput>
    tbprodutos_tbprodcomposicao_idprodutocompTotbprodutos?: XOR<TbprodutosRelationFilter, tbprodutosWhereInput>
  }, "idcomp_idproduto_idprodutocomp">

  export type tbprodcomposicaoOrderByWithAggregationInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrderInput | SortOrder
    _count?: tbprodcomposicaoCountOrderByAggregateInput
    _avg?: tbprodcomposicaoAvgOrderByAggregateInput
    _max?: tbprodcomposicaoMaxOrderByAggregateInput
    _min?: tbprodcomposicaoMinOrderByAggregateInput
    _sum?: tbprodcomposicaoSumOrderByAggregateInput
  }

  export type tbprodcomposicaoScalarWhereWithAggregatesInput = {
    AND?: tbprodcomposicaoScalarWhereWithAggregatesInput | tbprodcomposicaoScalarWhereWithAggregatesInput[]
    OR?: tbprodcomposicaoScalarWhereWithAggregatesInput[]
    NOT?: tbprodcomposicaoScalarWhereWithAggregatesInput | tbprodcomposicaoScalarWhereWithAggregatesInput[]
    idcomp?: IntWithAggregatesFilter<"tbprodcomposicao"> | number
    idproduto?: IntWithAggregatesFilter<"tbprodcomposicao"> | number
    idprodutocomp?: IntWithAggregatesFilter<"tbprodcomposicao"> | number
    quantidade?: DecimalNullableWithAggregatesFilter<"tbprodcomposicao"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodutosWhereInput = {
    AND?: tbprodutosWhereInput | tbprodutosWhereInput[]
    OR?: tbprodutosWhereInput[]
    NOT?: tbprodutosWhereInput | tbprodutosWhereInput[]
    idproduto?: IntFilter<"tbprodutos"> | number
    nomeprod?: StringNullableFilter<"tbprodutos"> | string | null
    idtipprod?: IntNullableFilter<"tbprodutos"> | number | null
    idunidade?: IntNullableFilter<"tbprodutos"> | number | null
    quantminima?: IntNullableFilter<"tbprodutos"> | number | null
    tbestoque?: TbestoqueListRelationFilter
    tbmovitens?: TbmovitensListRelationFilter
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: TbprodcomposicaoListRelationFilter
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: TbprodcomposicaoListRelationFilter
    tbtiposprodutos?: XOR<TbtiposprodutosNullableRelationFilter, tbtiposprodutosWhereInput> | null
    tbunidademedida?: XOR<TbunidademedidaNullableRelationFilter, tbunidademedidaWhereInput> | null
  }

  export type tbprodutosOrderByWithRelationInput = {
    idproduto?: SortOrder
    nomeprod?: SortOrderInput | SortOrder
    idtipprod?: SortOrderInput | SortOrder
    idunidade?: SortOrderInput | SortOrder
    quantminima?: SortOrderInput | SortOrder
    tbestoque?: tbestoqueOrderByRelationAggregateInput
    tbmovitens?: tbmovitensOrderByRelationAggregateInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoOrderByRelationAggregateInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoOrderByRelationAggregateInput
    tbtiposprodutos?: tbtiposprodutosOrderByWithRelationInput
    tbunidademedida?: tbunidademedidaOrderByWithRelationInput
  }

  export type tbprodutosWhereUniqueInput = Prisma.AtLeast<{
    idproduto?: number
    AND?: tbprodutosWhereInput | tbprodutosWhereInput[]
    OR?: tbprodutosWhereInput[]
    NOT?: tbprodutosWhereInput | tbprodutosWhereInput[]
    nomeprod?: StringNullableFilter<"tbprodutos"> | string | null
    idtipprod?: IntNullableFilter<"tbprodutos"> | number | null
    idunidade?: IntNullableFilter<"tbprodutos"> | number | null
    quantminima?: IntNullableFilter<"tbprodutos"> | number | null
    tbestoque?: TbestoqueListRelationFilter
    tbmovitens?: TbmovitensListRelationFilter
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: TbprodcomposicaoListRelationFilter
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: TbprodcomposicaoListRelationFilter
    tbtiposprodutos?: XOR<TbtiposprodutosNullableRelationFilter, tbtiposprodutosWhereInput> | null
    tbunidademedida?: XOR<TbunidademedidaNullableRelationFilter, tbunidademedidaWhereInput> | null
  }, "idproduto">

  export type tbprodutosOrderByWithAggregationInput = {
    idproduto?: SortOrder
    nomeprod?: SortOrderInput | SortOrder
    idtipprod?: SortOrderInput | SortOrder
    idunidade?: SortOrderInput | SortOrder
    quantminima?: SortOrderInput | SortOrder
    _count?: tbprodutosCountOrderByAggregateInput
    _avg?: tbprodutosAvgOrderByAggregateInput
    _max?: tbprodutosMaxOrderByAggregateInput
    _min?: tbprodutosMinOrderByAggregateInput
    _sum?: tbprodutosSumOrderByAggregateInput
  }

  export type tbprodutosScalarWhereWithAggregatesInput = {
    AND?: tbprodutosScalarWhereWithAggregatesInput | tbprodutosScalarWhereWithAggregatesInput[]
    OR?: tbprodutosScalarWhereWithAggregatesInput[]
    NOT?: tbprodutosScalarWhereWithAggregatesInput | tbprodutosScalarWhereWithAggregatesInput[]
    idproduto?: IntWithAggregatesFilter<"tbprodutos"> | number
    nomeprod?: StringNullableWithAggregatesFilter<"tbprodutos"> | string | null
    idtipprod?: IntNullableWithAggregatesFilter<"tbprodutos"> | number | null
    idunidade?: IntNullableWithAggregatesFilter<"tbprodutos"> | number | null
    quantminima?: IntNullableWithAggregatesFilter<"tbprodutos"> | number | null
  }

  export type tbtiposprodutosWhereInput = {
    AND?: tbtiposprodutosWhereInput | tbtiposprodutosWhereInput[]
    OR?: tbtiposprodutosWhereInput[]
    NOT?: tbtiposprodutosWhereInput | tbtiposprodutosWhereInput[]
    idtipprod?: IntFilter<"tbtiposprodutos"> | number
    nometipprod?: StringNullableFilter<"tbtiposprodutos"> | string | null
    tbprodutos?: TbprodutosListRelationFilter
  }

  export type tbtiposprodutosOrderByWithRelationInput = {
    idtipprod?: SortOrder
    nometipprod?: SortOrderInput | SortOrder
    tbprodutos?: tbprodutosOrderByRelationAggregateInput
  }

  export type tbtiposprodutosWhereUniqueInput = Prisma.AtLeast<{
    idtipprod?: number
    AND?: tbtiposprodutosWhereInput | tbtiposprodutosWhereInput[]
    OR?: tbtiposprodutosWhereInput[]
    NOT?: tbtiposprodutosWhereInput | tbtiposprodutosWhereInput[]
    nometipprod?: StringNullableFilter<"tbtiposprodutos"> | string | null
    tbprodutos?: TbprodutosListRelationFilter
  }, "idtipprod">

  export type tbtiposprodutosOrderByWithAggregationInput = {
    idtipprod?: SortOrder
    nometipprod?: SortOrderInput | SortOrder
    _count?: tbtiposprodutosCountOrderByAggregateInput
    _avg?: tbtiposprodutosAvgOrderByAggregateInput
    _max?: tbtiposprodutosMaxOrderByAggregateInput
    _min?: tbtiposprodutosMinOrderByAggregateInput
    _sum?: tbtiposprodutosSumOrderByAggregateInput
  }

  export type tbtiposprodutosScalarWhereWithAggregatesInput = {
    AND?: tbtiposprodutosScalarWhereWithAggregatesInput | tbtiposprodutosScalarWhereWithAggregatesInput[]
    OR?: tbtiposprodutosScalarWhereWithAggregatesInput[]
    NOT?: tbtiposprodutosScalarWhereWithAggregatesInput | tbtiposprodutosScalarWhereWithAggregatesInput[]
    idtipprod?: IntWithAggregatesFilter<"tbtiposprodutos"> | number
    nometipprod?: StringNullableWithAggregatesFilter<"tbtiposprodutos"> | string | null
  }

  export type tbunidademedidaWhereInput = {
    AND?: tbunidademedidaWhereInput | tbunidademedidaWhereInput[]
    OR?: tbunidademedidaWhereInput[]
    NOT?: tbunidademedidaWhereInput | tbunidademedidaWhereInput[]
    idunidade?: IntFilter<"tbunidademedida"> | number
    siglaun?: StringNullableFilter<"tbunidademedida"> | string | null
    nomeunidade?: StringNullableFilter<"tbunidademedida"> | string | null
    tbprodutos?: TbprodutosListRelationFilter
  }

  export type tbunidademedidaOrderByWithRelationInput = {
    idunidade?: SortOrder
    siglaun?: SortOrderInput | SortOrder
    nomeunidade?: SortOrderInput | SortOrder
    tbprodutos?: tbprodutosOrderByRelationAggregateInput
  }

  export type tbunidademedidaWhereUniqueInput = Prisma.AtLeast<{
    idunidade?: number
    siglaun?: string
    AND?: tbunidademedidaWhereInput | tbunidademedidaWhereInput[]
    OR?: tbunidademedidaWhereInput[]
    NOT?: tbunidademedidaWhereInput | tbunidademedidaWhereInput[]
    nomeunidade?: StringNullableFilter<"tbunidademedida"> | string | null
    tbprodutos?: TbprodutosListRelationFilter
  }, "idunidade" | "siglaun">

  export type tbunidademedidaOrderByWithAggregationInput = {
    idunidade?: SortOrder
    siglaun?: SortOrderInput | SortOrder
    nomeunidade?: SortOrderInput | SortOrder
    _count?: tbunidademedidaCountOrderByAggregateInput
    _avg?: tbunidademedidaAvgOrderByAggregateInput
    _max?: tbunidademedidaMaxOrderByAggregateInput
    _min?: tbunidademedidaMinOrderByAggregateInput
    _sum?: tbunidademedidaSumOrderByAggregateInput
  }

  export type tbunidademedidaScalarWhereWithAggregatesInput = {
    AND?: tbunidademedidaScalarWhereWithAggregatesInput | tbunidademedidaScalarWhereWithAggregatesInput[]
    OR?: tbunidademedidaScalarWhereWithAggregatesInput[]
    NOT?: tbunidademedidaScalarWhereWithAggregatesInput | tbunidademedidaScalarWhereWithAggregatesInput[]
    idunidade?: IntWithAggregatesFilter<"tbunidademedida"> | number
    siglaun?: StringNullableWithAggregatesFilter<"tbunidademedida"> | string | null
    nomeunidade?: StringNullableWithAggregatesFilter<"tbunidademedida"> | string | null
  }

  export type tbusuariosWhereInput = {
    AND?: tbusuariosWhereInput | tbusuariosWhereInput[]
    OR?: tbusuariosWhereInput[]
    NOT?: tbusuariosWhereInput | tbusuariosWhereInput[]
    idusuario?: IntFilter<"tbusuarios"> | number
    usu_login?: StringNullableFilter<"tbusuarios"> | string | null
    nome?: StringNullableFilter<"tbusuarios"> | string | null
    senha?: StringNullableFilter<"tbusuarios"> | string | null
    dtcriacao?: DateTimeNullableFilter<"tbusuarios"> | Date | string | null
    usu_admin?: BoolNullableFilter<"tbusuarios"> | boolean | null
    tbmovimentos?: TbmovimentosListRelationFilter
    tbnf?: TbnfListRelationFilter
  }

  export type tbusuariosOrderByWithRelationInput = {
    idusuario?: SortOrder
    usu_login?: SortOrderInput | SortOrder
    nome?: SortOrderInput | SortOrder
    senha?: SortOrderInput | SortOrder
    dtcriacao?: SortOrderInput | SortOrder
    usu_admin?: SortOrderInput | SortOrder
    tbmovimentos?: tbmovimentosOrderByRelationAggregateInput
    tbnf?: tbnfOrderByRelationAggregateInput
  }

  export type tbusuariosWhereUniqueInput = Prisma.AtLeast<{
    idusuario?: number
    usu_login?: string
    AND?: tbusuariosWhereInput | tbusuariosWhereInput[]
    OR?: tbusuariosWhereInput[]
    NOT?: tbusuariosWhereInput | tbusuariosWhereInput[]
    nome?: StringNullableFilter<"tbusuarios"> | string | null
    senha?: StringNullableFilter<"tbusuarios"> | string | null
    dtcriacao?: DateTimeNullableFilter<"tbusuarios"> | Date | string | null
    usu_admin?: BoolNullableFilter<"tbusuarios"> | boolean | null
    tbmovimentos?: TbmovimentosListRelationFilter
    tbnf?: TbnfListRelationFilter
  }, "idusuario" | "usu_login">

  export type tbusuariosOrderByWithAggregationInput = {
    idusuario?: SortOrder
    usu_login?: SortOrderInput | SortOrder
    nome?: SortOrderInput | SortOrder
    senha?: SortOrderInput | SortOrder
    dtcriacao?: SortOrderInput | SortOrder
    usu_admin?: SortOrderInput | SortOrder
    _count?: tbusuariosCountOrderByAggregateInput
    _avg?: tbusuariosAvgOrderByAggregateInput
    _max?: tbusuariosMaxOrderByAggregateInput
    _min?: tbusuariosMinOrderByAggregateInput
    _sum?: tbusuariosSumOrderByAggregateInput
  }

  export type tbusuariosScalarWhereWithAggregatesInput = {
    AND?: tbusuariosScalarWhereWithAggregatesInput | tbusuariosScalarWhereWithAggregatesInput[]
    OR?: tbusuariosScalarWhereWithAggregatesInput[]
    NOT?: tbusuariosScalarWhereWithAggregatesInput | tbusuariosScalarWhereWithAggregatesInput[]
    idusuario?: IntWithAggregatesFilter<"tbusuarios"> | number
    usu_login?: StringNullableWithAggregatesFilter<"tbusuarios"> | string | null
    nome?: StringNullableWithAggregatesFilter<"tbusuarios"> | string | null
    senha?: StringNullableWithAggregatesFilter<"tbusuarios"> | string | null
    dtcriacao?: DateTimeNullableWithAggregatesFilter<"tbusuarios"> | Date | string | null
    usu_admin?: BoolNullableWithAggregatesFilter<"tbusuarios"> | boolean | null
  }

  export type tbestoqueCreateInput = {
    idestoque?: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
    tblocais?: tblocaisCreateNestedOneWithoutTbestoqueInput
    tbprodutos: tbprodutosCreateNestedOneWithoutTbestoqueInput
  }

  export type tbestoqueUncheckedCreateInput = {
    idestoque?: number
    idproduto: number
    idlocal?: number | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
  }

  export type tbestoqueUpdateInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tblocais?: tblocaisUpdateOneWithoutTbestoqueNestedInput
    tbprodutos?: tbprodutosUpdateOneRequiredWithoutTbestoqueNestedInput
  }

  export type tbestoqueUncheckedUpdateInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbestoqueCreateManyInput = {
    idestoque?: number
    idproduto: number
    idlocal?: number | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
  }

  export type tbestoqueUpdateManyMutationInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbestoqueUncheckedUpdateManyInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbfornecedoresCreateInput = {
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
    tbmovimentos?: tbmovimentosCreateNestedManyWithoutTbfornecedoresInput
    tbnf?: tbnfCreateNestedManyWithoutTbfornecedoresInput
  }

  export type tbfornecedoresUncheckedCreateInput = {
    idfor?: number
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
    tbmovimentos?: tbmovimentosUncheckedCreateNestedManyWithoutTbfornecedoresInput
    tbnf?: tbnfUncheckedCreateNestedManyWithoutTbfornecedoresInput
  }

  export type tbfornecedoresUpdateInput = {
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    tbmovimentos?: tbmovimentosUpdateManyWithoutTbfornecedoresNestedInput
    tbnf?: tbnfUpdateManyWithoutTbfornecedoresNestedInput
  }

  export type tbfornecedoresUncheckedUpdateInput = {
    idfor?: IntFieldUpdateOperationsInput | number
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    tbmovimentos?: tbmovimentosUncheckedUpdateManyWithoutTbfornecedoresNestedInput
    tbnf?: tbnfUncheckedUpdateManyWithoutTbfornecedoresNestedInput
  }

  export type tbfornecedoresCreateManyInput = {
    idfor?: number
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
  }

  export type tbfornecedoresUpdateManyMutationInput = {
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbfornecedoresUncheckedUpdateManyInput = {
    idfor?: IntFieldUpdateOperationsInput | number
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tblocaisCreateInput = {
    nomelocal?: string | null
    tbestoque?: tbestoqueCreateNestedManyWithoutTblocaisInput
    tbmovitens?: tbmovitensCreateNestedManyWithoutTblocaisInput
  }

  export type tblocaisUncheckedCreateInput = {
    idlocal?: number
    nomelocal?: string | null
    tbestoque?: tbestoqueUncheckedCreateNestedManyWithoutTblocaisInput
    tbmovitens?: tbmovitensUncheckedCreateNestedManyWithoutTblocaisInput
  }

  export type tblocaisUpdateInput = {
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
    tbestoque?: tbestoqueUpdateManyWithoutTblocaisNestedInput
    tbmovitens?: tbmovitensUpdateManyWithoutTblocaisNestedInput
  }

  export type tblocaisUncheckedUpdateInput = {
    idlocal?: IntFieldUpdateOperationsInput | number
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
    tbestoque?: tbestoqueUncheckedUpdateManyWithoutTblocaisNestedInput
    tbmovitens?: tbmovitensUncheckedUpdateManyWithoutTblocaisNestedInput
  }

  export type tblocaisCreateManyInput = {
    idlocal?: number
    nomelocal?: string | null
  }

  export type tblocaisUpdateManyMutationInput = {
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tblocaisUncheckedUpdateManyInput = {
    idlocal?: IntFieldUpdateOperationsInput | number
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbmovimentosCreateInput = {
    tipmov?: string | null
    dtinc?: Date | string | null
    tbfornecedores?: tbfornecedoresCreateNestedOneWithoutTbmovimentosInput
    tbusuarios?: tbusuariosCreateNestedOneWithoutTbmovimentosInput
    tbmovitens?: tbmovitensCreateNestedManyWithoutTbmovimentosInput
    tbnf?: tbnfCreateNestedOneWithoutTbmovimentosInput
  }

  export type tbmovimentosUncheckedCreateInput = {
    idmovimento?: number
    tipmov?: string | null
    idfor?: number | null
    idusuario_alteracao?: number | null
    dtinc?: Date | string | null
    tbmovitens?: tbmovitensUncheckedCreateNestedManyWithoutTbmovimentosInput
    tbnf?: tbnfUncheckedCreateNestedOneWithoutTbmovimentosInput
  }

  export type tbmovimentosUpdateInput = {
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbfornecedores?: tbfornecedoresUpdateOneWithoutTbmovimentosNestedInput
    tbusuarios?: tbusuariosUpdateOneWithoutTbmovimentosNestedInput
    tbmovitens?: tbmovitensUpdateManyWithoutTbmovimentosNestedInput
    tbnf?: tbnfUpdateOneWithoutTbmovimentosNestedInput
  }

  export type tbmovimentosUncheckedUpdateInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_alteracao?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbmovitens?: tbmovitensUncheckedUpdateManyWithoutTbmovimentosNestedInput
    tbnf?: tbnfUncheckedUpdateOneWithoutTbmovimentosNestedInput
  }

  export type tbmovimentosCreateManyInput = {
    idmovimento?: number
    tipmov?: string | null
    idfor?: number | null
    idusuario_alteracao?: number | null
    dtinc?: Date | string | null
  }

  export type tbmovimentosUpdateManyMutationInput = {
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbmovimentosUncheckedUpdateManyInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_alteracao?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbmovitensCreateInput = {
    seqitem?: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tblocais?: tblocaisCreateNestedOneWithoutTbmovitensInput
    tbmovimentos: tbmovimentosCreateNestedOneWithoutTbmovitensInput
    tbprodutos: tbprodutosCreateNestedOneWithoutTbmovitensInput
    tbnfitens?: tbnfitensCreateNestedManyWithoutTbmovitensInput
  }

  export type tbmovitensUncheckedCreateInput = {
    idmovimento: number
    seqitem?: number
    idproduto: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbnfitens?: tbnfitensUncheckedCreateNestedManyWithoutTbmovitensInput
  }

  export type tbmovitensUpdateInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tblocais?: tblocaisUpdateOneWithoutTbmovitensNestedInput
    tbmovimentos?: tbmovimentosUpdateOneRequiredWithoutTbmovitensNestedInput
    tbprodutos?: tbprodutosUpdateOneRequiredWithoutTbmovitensNestedInput
    tbnfitens?: tbnfitensUpdateManyWithoutTbmovitensNestedInput
  }

  export type tbmovitensUncheckedUpdateInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbnfitens?: tbnfitensUncheckedUpdateManyWithoutTbmovitensNestedInput
  }

  export type tbmovitensCreateManyInput = {
    idmovimento: number
    seqitem?: number
    idproduto: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbmovitensUpdateManyMutationInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbmovitensUncheckedUpdateManyInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfCreateInput = {
    numnf?: number | null
    serienf?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
    tbmovimentos?: tbmovimentosCreateNestedOneWithoutTbnfInput
    tbfornecedores?: tbfornecedoresCreateNestedOneWithoutTbnfInput
    tbusuarios?: tbusuariosCreateNestedOneWithoutTbnfInput
    tbnfitens?: tbnfitensCreateNestedManyWithoutTbnfInput
  }

  export type tbnfUncheckedCreateInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idfor?: number | null
    idusuario_inclusao?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
    tbnfitens?: tbnfitensUncheckedCreateNestedManyWithoutTbnfInput
  }

  export type tbnfUpdateInput = {
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    tbmovimentos?: tbmovimentosUpdateOneWithoutTbnfNestedInput
    tbfornecedores?: tbfornecedoresUpdateOneWithoutTbnfNestedInput
    tbusuarios?: tbusuariosUpdateOneWithoutTbnfNestedInput
    tbnfitens?: tbnfitensUpdateManyWithoutTbnfNestedInput
  }

  export type tbnfUncheckedUpdateInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_inclusao?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    tbnfitens?: tbnfitensUncheckedUpdateManyWithoutTbnfNestedInput
  }

  export type tbnfCreateManyInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idfor?: number | null
    idusuario_inclusao?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
  }

  export type tbnfUpdateManyMutationInput = {
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbnfUncheckedUpdateManyInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_inclusao?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbnfitensCreateInput = {
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
    tbmovitens?: tbmovitensCreateNestedOneWithoutTbnfitensInput
    tbnf: tbnfCreateNestedOneWithoutTbnfitensInput
  }

  export type tbnfitensUncheckedCreateInput = {
    idnf: number
    idmovimento?: number | null
    seqitem: number
    idproduto: number
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfitensUpdateInput = {
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbmovitens?: tbmovitensUpdateOneWithoutTbnfitensNestedInput
    tbnf?: tbnfUpdateOneRequiredWithoutTbnfitensNestedInput
  }

  export type tbnfitensUncheckedUpdateInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfitensCreateManyInput = {
    idnf: number
    idmovimento?: number | null
    seqitem: number
    idproduto: number
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfitensUpdateManyMutationInput = {
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfitensUncheckedUpdateManyInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoCreateInput = {
    idcomp?: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbprodutos_tbprodcomposicao_idprodutoTotbprodutos: tbprodutosCreateNestedOneWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput
    tbprodutos_tbprodcomposicao_idprodutocompTotbprodutos: tbprodutosCreateNestedOneWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput
  }

  export type tbprodcomposicaoUncheckedCreateInput = {
    idcomp?: number
    idproduto: number
    idprodutocomp: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoUpdateInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbprodutos_tbprodcomposicao_idprodutoTotbprodutos?: tbprodutosUpdateOneRequiredWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosNestedInput
    tbprodutos_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodutosUpdateOneRequiredWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
  }

  export type tbprodcomposicaoUncheckedUpdateInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idprodutocomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoCreateManyInput = {
    idcomp?: number
    idproduto: number
    idprodutocomp: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoUpdateManyMutationInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoUncheckedUpdateManyInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idprodutocomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodutosCreateInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbestoque?: tbestoqueCreateNestedManyWithoutTbprodutosInput
    tbmovitens?: tbmovitensCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput
    tbtiposprodutos?: tbtiposprodutosCreateNestedOneWithoutTbprodutosInput
    tbunidademedida?: tbunidademedidaCreateNestedOneWithoutTbprodutosInput
  }

  export type tbprodutosUncheckedCreateInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    idunidade?: number | null
    quantminima?: number | null
    tbestoque?: tbestoqueUncheckedCreateNestedManyWithoutTbprodutosInput
    tbmovitens?: tbmovitensUncheckedCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput
  }

  export type tbprodutosUpdateInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbestoque?: tbestoqueUpdateManyWithoutTbprodutosNestedInput
    tbmovitens?: tbmovitensUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
    tbtiposprodutos?: tbtiposprodutosUpdateOneWithoutTbprodutosNestedInput
    tbunidademedida?: tbunidademedidaUpdateOneWithoutTbprodutosNestedInput
  }

  export type tbprodutosUncheckedUpdateInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbestoque?: tbestoqueUncheckedUpdateManyWithoutTbprodutosNestedInput
    tbmovitens?: tbmovitensUncheckedUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
  }

  export type tbprodutosCreateManyInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    idunidade?: number | null
    quantminima?: number | null
  }

  export type tbprodutosUpdateManyMutationInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbprodutosUncheckedUpdateManyInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbtiposprodutosCreateInput = {
    nometipprod?: string | null
    tbprodutos?: tbprodutosCreateNestedManyWithoutTbtiposprodutosInput
  }

  export type tbtiposprodutosUncheckedCreateInput = {
    idtipprod?: number
    nometipprod?: string | null
    tbprodutos?: tbprodutosUncheckedCreateNestedManyWithoutTbtiposprodutosInput
  }

  export type tbtiposprodutosUpdateInput = {
    nometipprod?: NullableStringFieldUpdateOperationsInput | string | null
    tbprodutos?: tbprodutosUpdateManyWithoutTbtiposprodutosNestedInput
  }

  export type tbtiposprodutosUncheckedUpdateInput = {
    idtipprod?: IntFieldUpdateOperationsInput | number
    nometipprod?: NullableStringFieldUpdateOperationsInput | string | null
    tbprodutos?: tbprodutosUncheckedUpdateManyWithoutTbtiposprodutosNestedInput
  }

  export type tbtiposprodutosCreateManyInput = {
    idtipprod?: number
    nometipprod?: string | null
  }

  export type tbtiposprodutosUpdateManyMutationInput = {
    nometipprod?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbtiposprodutosUncheckedUpdateManyInput = {
    idtipprod?: IntFieldUpdateOperationsInput | number
    nometipprod?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbunidademedidaCreateInput = {
    siglaun?: string | null
    nomeunidade?: string | null
    tbprodutos?: tbprodutosCreateNestedManyWithoutTbunidademedidaInput
  }

  export type tbunidademedidaUncheckedCreateInput = {
    idunidade?: number
    siglaun?: string | null
    nomeunidade?: string | null
    tbprodutos?: tbprodutosUncheckedCreateNestedManyWithoutTbunidademedidaInput
  }

  export type tbunidademedidaUpdateInput = {
    siglaun?: NullableStringFieldUpdateOperationsInput | string | null
    nomeunidade?: NullableStringFieldUpdateOperationsInput | string | null
    tbprodutos?: tbprodutosUpdateManyWithoutTbunidademedidaNestedInput
  }

  export type tbunidademedidaUncheckedUpdateInput = {
    idunidade?: IntFieldUpdateOperationsInput | number
    siglaun?: NullableStringFieldUpdateOperationsInput | string | null
    nomeunidade?: NullableStringFieldUpdateOperationsInput | string | null
    tbprodutos?: tbprodutosUncheckedUpdateManyWithoutTbunidademedidaNestedInput
  }

  export type tbunidademedidaCreateManyInput = {
    idunidade?: number
    siglaun?: string | null
    nomeunidade?: string | null
  }

  export type tbunidademedidaUpdateManyMutationInput = {
    siglaun?: NullableStringFieldUpdateOperationsInput | string | null
    nomeunidade?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbunidademedidaUncheckedUpdateManyInput = {
    idunidade?: IntFieldUpdateOperationsInput | number
    siglaun?: NullableStringFieldUpdateOperationsInput | string | null
    nomeunidade?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbusuariosCreateInput = {
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
    tbmovimentos?: tbmovimentosCreateNestedManyWithoutTbusuariosInput
    tbnf?: tbnfCreateNestedManyWithoutTbusuariosInput
  }

  export type tbusuariosUncheckedCreateInput = {
    idusuario?: number
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
    tbmovimentos?: tbmovimentosUncheckedCreateNestedManyWithoutTbusuariosInput
    tbnf?: tbnfUncheckedCreateNestedManyWithoutTbusuariosInput
  }

  export type tbusuariosUpdateInput = {
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbmovimentos?: tbmovimentosUpdateManyWithoutTbusuariosNestedInput
    tbnf?: tbnfUpdateManyWithoutTbusuariosNestedInput
  }

  export type tbusuariosUncheckedUpdateInput = {
    idusuario?: IntFieldUpdateOperationsInput | number
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbmovimentos?: tbmovimentosUncheckedUpdateManyWithoutTbusuariosNestedInput
    tbnf?: tbnfUncheckedUpdateManyWithoutTbusuariosNestedInput
  }

  export type tbusuariosCreateManyInput = {
    idusuario?: number
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
  }

  export type tbusuariosUpdateManyMutationInput = {
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type tbusuariosUncheckedUpdateManyInput = {
    idusuario?: IntFieldUpdateOperationsInput | number
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type TblocaisNullableRelationFilter = {
    is?: tblocaisWhereInput | null
    isNot?: tblocaisWhereInput | null
  }

  export type TbprodutosRelationFilter = {
    is?: tbprodutosWhereInput
    isNot?: tbprodutosWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type tbestoqueIdestoqueIdprodutoCompoundUniqueInput = {
    idestoque: number
    idproduto: number
  }

  export type tbestoqueCountOrderByAggregateInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
    dtinc?: SortOrder
  }

  export type tbestoqueAvgOrderByAggregateInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
  }

  export type tbestoqueMaxOrderByAggregateInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
    dtinc?: SortOrder
  }

  export type tbestoqueMinOrderByAggregateInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
    dtinc?: SortOrder
  }

  export type tbestoqueSumOrderByAggregateInput = {
    idestoque?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type TbmovimentosListRelationFilter = {
    every?: tbmovimentosWhereInput
    some?: tbmovimentosWhereInput
    none?: tbmovimentosWhereInput
  }

  export type TbnfListRelationFilter = {
    every?: tbnfWhereInput
    some?: tbnfWhereInput
    none?: tbnfWhereInput
  }

  export type tbmovimentosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbnfOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbfornecedoresCountOrderByAggregateInput = {
    idfor?: SortOrder
    nomefor?: SortOrder
    fisjur?: SortOrder
    cnpjcpf?: SortOrder
    telefone?: SortOrder
    cep?: SortOrder
    cidade?: SortOrder
    rua?: SortOrder
    bairro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    email?: SortOrder
  }

  export type tbfornecedoresAvgOrderByAggregateInput = {
    idfor?: SortOrder
    numero?: SortOrder
  }

  export type tbfornecedoresMaxOrderByAggregateInput = {
    idfor?: SortOrder
    nomefor?: SortOrder
    fisjur?: SortOrder
    cnpjcpf?: SortOrder
    telefone?: SortOrder
    cep?: SortOrder
    cidade?: SortOrder
    rua?: SortOrder
    bairro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    email?: SortOrder
  }

  export type tbfornecedoresMinOrderByAggregateInput = {
    idfor?: SortOrder
    nomefor?: SortOrder
    fisjur?: SortOrder
    cnpjcpf?: SortOrder
    telefone?: SortOrder
    cep?: SortOrder
    cidade?: SortOrder
    rua?: SortOrder
    bairro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    email?: SortOrder
  }

  export type tbfornecedoresSumOrderByAggregateInput = {
    idfor?: SortOrder
    numero?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type TbestoqueListRelationFilter = {
    every?: tbestoqueWhereInput
    some?: tbestoqueWhereInput
    none?: tbestoqueWhereInput
  }

  export type TbmovitensListRelationFilter = {
    every?: tbmovitensWhereInput
    some?: tbmovitensWhereInput
    none?: tbmovitensWhereInput
  }

  export type tbestoqueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbmovitensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tblocaisCountOrderByAggregateInput = {
    idlocal?: SortOrder
    nomelocal?: SortOrder
  }

  export type tblocaisAvgOrderByAggregateInput = {
    idlocal?: SortOrder
  }

  export type tblocaisMaxOrderByAggregateInput = {
    idlocal?: SortOrder
    nomelocal?: SortOrder
  }

  export type tblocaisMinOrderByAggregateInput = {
    idlocal?: SortOrder
    nomelocal?: SortOrder
  }

  export type tblocaisSumOrderByAggregateInput = {
    idlocal?: SortOrder
  }

  export type TbfornecedoresNullableRelationFilter = {
    is?: tbfornecedoresWhereInput | null
    isNot?: tbfornecedoresWhereInput | null
  }

  export type TbusuariosNullableRelationFilter = {
    is?: tbusuariosWhereInput | null
    isNot?: tbusuariosWhereInput | null
  }

  export type TbnfNullableRelationFilter = {
    is?: tbnfWhereInput | null
    isNot?: tbnfWhereInput | null
  }

  export type tbmovimentosCountOrderByAggregateInput = {
    idmovimento?: SortOrder
    tipmov?: SortOrder
    idfor?: SortOrder
    idusuario_alteracao?: SortOrder
    dtinc?: SortOrder
  }

  export type tbmovimentosAvgOrderByAggregateInput = {
    idmovimento?: SortOrder
    idfor?: SortOrder
    idusuario_alteracao?: SortOrder
  }

  export type tbmovimentosMaxOrderByAggregateInput = {
    idmovimento?: SortOrder
    tipmov?: SortOrder
    idfor?: SortOrder
    idusuario_alteracao?: SortOrder
    dtinc?: SortOrder
  }

  export type tbmovimentosMinOrderByAggregateInput = {
    idmovimento?: SortOrder
    tipmov?: SortOrder
    idfor?: SortOrder
    idusuario_alteracao?: SortOrder
    dtinc?: SortOrder
  }

  export type tbmovimentosSumOrderByAggregateInput = {
    idmovimento?: SortOrder
    idfor?: SortOrder
    idusuario_alteracao?: SortOrder
  }

  export type TbmovimentosRelationFilter = {
    is?: tbmovimentosWhereInput
    isNot?: tbmovimentosWhereInput
  }

  export type TbnfitensListRelationFilter = {
    every?: tbnfitensWhereInput
    some?: tbnfitensWhereInput
    none?: tbnfitensWhereInput
  }

  export type tbnfitensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbmovitensIdmovimentoSeqitemIdprodutoCompoundUniqueInput = {
    idmovimento: number
    seqitem: number
    idproduto: number
  }

  export type tbmovitensCountOrderByAggregateInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    dtinc?: SortOrder
    quantidade?: SortOrder
  }

  export type tbmovitensAvgOrderByAggregateInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
  }

  export type tbmovitensMaxOrderByAggregateInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    dtinc?: SortOrder
    quantidade?: SortOrder
  }

  export type tbmovitensMinOrderByAggregateInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    dtinc?: SortOrder
    quantidade?: SortOrder
  }

  export type tbmovitensSumOrderByAggregateInput = {
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    idlocal?: SortOrder
    quantidade?: SortOrder
  }

  export type TbmovimentosNullableRelationFilter = {
    is?: tbmovimentosWhereInput | null
    isNot?: tbmovimentosWhereInput | null
  }

  export type tbnfCountOrderByAggregateInput = {
    idnf?: SortOrder
    numnf?: SortOrder
    idmovimento?: SortOrder
    serienf?: SortOrder
    idfor?: SortOrder
    idusuario_inclusao?: SortOrder
    dtemissao?: SortOrder
    vlrtotal?: SortOrder
    observacao?: SortOrder
  }

  export type tbnfAvgOrderByAggregateInput = {
    idnf?: SortOrder
    numnf?: SortOrder
    idmovimento?: SortOrder
    serienf?: SortOrder
    idfor?: SortOrder
    idusuario_inclusao?: SortOrder
    vlrtotal?: SortOrder
  }

  export type tbnfMaxOrderByAggregateInput = {
    idnf?: SortOrder
    numnf?: SortOrder
    idmovimento?: SortOrder
    serienf?: SortOrder
    idfor?: SortOrder
    idusuario_inclusao?: SortOrder
    dtemissao?: SortOrder
    vlrtotal?: SortOrder
    observacao?: SortOrder
  }

  export type tbnfMinOrderByAggregateInput = {
    idnf?: SortOrder
    numnf?: SortOrder
    idmovimento?: SortOrder
    serienf?: SortOrder
    idfor?: SortOrder
    idusuario_inclusao?: SortOrder
    dtemissao?: SortOrder
    vlrtotal?: SortOrder
    observacao?: SortOrder
  }

  export type tbnfSumOrderByAggregateInput = {
    idnf?: SortOrder
    numnf?: SortOrder
    idmovimento?: SortOrder
    serienf?: SortOrder
    idfor?: SortOrder
    idusuario_inclusao?: SortOrder
    vlrtotal?: SortOrder
  }

  export type TbmovitensNullableRelationFilter = {
    is?: tbmovitensWhereInput | null
    isNot?: tbmovitensWhereInput | null
  }

  export type TbnfRelationFilter = {
    is?: tbnfWhereInput
    isNot?: tbnfWhereInput
  }

  export type tbnfitensIdnfSeqitemIdprodutoCompoundUniqueInput = {
    idnf: number
    seqitem: number
    idproduto: number
  }

  export type tbnfitensCountOrderByAggregateInput = {
    idnf?: SortOrder
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrder
    quantidade?: SortOrder
    vlrtotitem?: SortOrder
  }

  export type tbnfitensAvgOrderByAggregateInput = {
    idnf?: SortOrder
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrder
    quantidade?: SortOrder
    vlrtotitem?: SortOrder
  }

  export type tbnfitensMaxOrderByAggregateInput = {
    idnf?: SortOrder
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrder
    quantidade?: SortOrder
    vlrtotitem?: SortOrder
  }

  export type tbnfitensMinOrderByAggregateInput = {
    idnf?: SortOrder
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrder
    quantidade?: SortOrder
    vlrtotitem?: SortOrder
  }

  export type tbnfitensSumOrderByAggregateInput = {
    idnf?: SortOrder
    idmovimento?: SortOrder
    seqitem?: SortOrder
    idproduto?: SortOrder
    vlrunitario?: SortOrder
    quantidade?: SortOrder
    vlrtotitem?: SortOrder
  }

  export type tbprodcomposicaoIdcompIdprodutoIdprodutocompCompoundUniqueInput = {
    idcomp: number
    idproduto: number
    idprodutocomp: number
  }

  export type tbprodcomposicaoCountOrderByAggregateInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrder
  }

  export type tbprodcomposicaoAvgOrderByAggregateInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrder
  }

  export type tbprodcomposicaoMaxOrderByAggregateInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrder
  }

  export type tbprodcomposicaoMinOrderByAggregateInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrder
  }

  export type tbprodcomposicaoSumOrderByAggregateInput = {
    idcomp?: SortOrder
    idproduto?: SortOrder
    idprodutocomp?: SortOrder
    quantidade?: SortOrder
  }

  export type TbprodcomposicaoListRelationFilter = {
    every?: tbprodcomposicaoWhereInput
    some?: tbprodcomposicaoWhereInput
    none?: tbprodcomposicaoWhereInput
  }

  export type TbtiposprodutosNullableRelationFilter = {
    is?: tbtiposprodutosWhereInput | null
    isNot?: tbtiposprodutosWhereInput | null
  }

  export type TbunidademedidaNullableRelationFilter = {
    is?: tbunidademedidaWhereInput | null
    isNot?: tbunidademedidaWhereInput | null
  }

  export type tbprodcomposicaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbprodutosCountOrderByAggregateInput = {
    idproduto?: SortOrder
    nomeprod?: SortOrder
    idtipprod?: SortOrder
    idunidade?: SortOrder
    quantminima?: SortOrder
  }

  export type tbprodutosAvgOrderByAggregateInput = {
    idproduto?: SortOrder
    idtipprod?: SortOrder
    idunidade?: SortOrder
    quantminima?: SortOrder
  }

  export type tbprodutosMaxOrderByAggregateInput = {
    idproduto?: SortOrder
    nomeprod?: SortOrder
    idtipprod?: SortOrder
    idunidade?: SortOrder
    quantminima?: SortOrder
  }

  export type tbprodutosMinOrderByAggregateInput = {
    idproduto?: SortOrder
    nomeprod?: SortOrder
    idtipprod?: SortOrder
    idunidade?: SortOrder
    quantminima?: SortOrder
  }

  export type tbprodutosSumOrderByAggregateInput = {
    idproduto?: SortOrder
    idtipprod?: SortOrder
    idunidade?: SortOrder
    quantminima?: SortOrder
  }

  export type TbprodutosListRelationFilter = {
    every?: tbprodutosWhereInput
    some?: tbprodutosWhereInput
    none?: tbprodutosWhereInput
  }

  export type tbprodutosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbtiposprodutosCountOrderByAggregateInput = {
    idtipprod?: SortOrder
    nometipprod?: SortOrder
  }

  export type tbtiposprodutosAvgOrderByAggregateInput = {
    idtipprod?: SortOrder
  }

  export type tbtiposprodutosMaxOrderByAggregateInput = {
    idtipprod?: SortOrder
    nometipprod?: SortOrder
  }

  export type tbtiposprodutosMinOrderByAggregateInput = {
    idtipprod?: SortOrder
    nometipprod?: SortOrder
  }

  export type tbtiposprodutosSumOrderByAggregateInput = {
    idtipprod?: SortOrder
  }

  export type tbunidademedidaCountOrderByAggregateInput = {
    idunidade?: SortOrder
    siglaun?: SortOrder
    nomeunidade?: SortOrder
  }

  export type tbunidademedidaAvgOrderByAggregateInput = {
    idunidade?: SortOrder
  }

  export type tbunidademedidaMaxOrderByAggregateInput = {
    idunidade?: SortOrder
    siglaun?: SortOrder
    nomeunidade?: SortOrder
  }

  export type tbunidademedidaMinOrderByAggregateInput = {
    idunidade?: SortOrder
    siglaun?: SortOrder
    nomeunidade?: SortOrder
  }

  export type tbunidademedidaSumOrderByAggregateInput = {
    idunidade?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type tbusuariosCountOrderByAggregateInput = {
    idusuario?: SortOrder
    usu_login?: SortOrder
    nome?: SortOrder
    senha?: SortOrder
    dtcriacao?: SortOrder
    usu_admin?: SortOrder
  }

  export type tbusuariosAvgOrderByAggregateInput = {
    idusuario?: SortOrder
  }

  export type tbusuariosMaxOrderByAggregateInput = {
    idusuario?: SortOrder
    usu_login?: SortOrder
    nome?: SortOrder
    senha?: SortOrder
    dtcriacao?: SortOrder
    usu_admin?: SortOrder
  }

  export type tbusuariosMinOrderByAggregateInput = {
    idusuario?: SortOrder
    usu_login?: SortOrder
    nome?: SortOrder
    senha?: SortOrder
    dtcriacao?: SortOrder
    usu_admin?: SortOrder
  }

  export type tbusuariosSumOrderByAggregateInput = {
    idusuario?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type tblocaisCreateNestedOneWithoutTbestoqueInput = {
    create?: XOR<tblocaisCreateWithoutTbestoqueInput, tblocaisUncheckedCreateWithoutTbestoqueInput>
    connectOrCreate?: tblocaisCreateOrConnectWithoutTbestoqueInput
    connect?: tblocaisWhereUniqueInput
  }

  export type tbprodutosCreateNestedOneWithoutTbestoqueInput = {
    create?: XOR<tbprodutosCreateWithoutTbestoqueInput, tbprodutosUncheckedCreateWithoutTbestoqueInput>
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbestoqueInput
    connect?: tbprodutosWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type tblocaisUpdateOneWithoutTbestoqueNestedInput = {
    create?: XOR<tblocaisCreateWithoutTbestoqueInput, tblocaisUncheckedCreateWithoutTbestoqueInput>
    connectOrCreate?: tblocaisCreateOrConnectWithoutTbestoqueInput
    upsert?: tblocaisUpsertWithoutTbestoqueInput
    disconnect?: tblocaisWhereInput | boolean
    delete?: tblocaisWhereInput | boolean
    connect?: tblocaisWhereUniqueInput
    update?: XOR<XOR<tblocaisUpdateToOneWithWhereWithoutTbestoqueInput, tblocaisUpdateWithoutTbestoqueInput>, tblocaisUncheckedUpdateWithoutTbestoqueInput>
  }

  export type tbprodutosUpdateOneRequiredWithoutTbestoqueNestedInput = {
    create?: XOR<tbprodutosCreateWithoutTbestoqueInput, tbprodutosUncheckedCreateWithoutTbestoqueInput>
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbestoqueInput
    upsert?: tbprodutosUpsertWithoutTbestoqueInput
    connect?: tbprodutosWhereUniqueInput
    update?: XOR<XOR<tbprodutosUpdateToOneWithWhereWithoutTbestoqueInput, tbprodutosUpdateWithoutTbestoqueInput>, tbprodutosUncheckedUpdateWithoutTbestoqueInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type tbmovimentosCreateNestedManyWithoutTbfornecedoresInput = {
    create?: XOR<tbmovimentosCreateWithoutTbfornecedoresInput, tbmovimentosUncheckedCreateWithoutTbfornecedoresInput> | tbmovimentosCreateWithoutTbfornecedoresInput[] | tbmovimentosUncheckedCreateWithoutTbfornecedoresInput[]
    connectOrCreate?: tbmovimentosCreateOrConnectWithoutTbfornecedoresInput | tbmovimentosCreateOrConnectWithoutTbfornecedoresInput[]
    createMany?: tbmovimentosCreateManyTbfornecedoresInputEnvelope
    connect?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
  }

  export type tbnfCreateNestedManyWithoutTbfornecedoresInput = {
    create?: XOR<tbnfCreateWithoutTbfornecedoresInput, tbnfUncheckedCreateWithoutTbfornecedoresInput> | tbnfCreateWithoutTbfornecedoresInput[] | tbnfUncheckedCreateWithoutTbfornecedoresInput[]
    connectOrCreate?: tbnfCreateOrConnectWithoutTbfornecedoresInput | tbnfCreateOrConnectWithoutTbfornecedoresInput[]
    createMany?: tbnfCreateManyTbfornecedoresInputEnvelope
    connect?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
  }

  export type tbmovimentosUncheckedCreateNestedManyWithoutTbfornecedoresInput = {
    create?: XOR<tbmovimentosCreateWithoutTbfornecedoresInput, tbmovimentosUncheckedCreateWithoutTbfornecedoresInput> | tbmovimentosCreateWithoutTbfornecedoresInput[] | tbmovimentosUncheckedCreateWithoutTbfornecedoresInput[]
    connectOrCreate?: tbmovimentosCreateOrConnectWithoutTbfornecedoresInput | tbmovimentosCreateOrConnectWithoutTbfornecedoresInput[]
    createMany?: tbmovimentosCreateManyTbfornecedoresInputEnvelope
    connect?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
  }

  export type tbnfUncheckedCreateNestedManyWithoutTbfornecedoresInput = {
    create?: XOR<tbnfCreateWithoutTbfornecedoresInput, tbnfUncheckedCreateWithoutTbfornecedoresInput> | tbnfCreateWithoutTbfornecedoresInput[] | tbnfUncheckedCreateWithoutTbfornecedoresInput[]
    connectOrCreate?: tbnfCreateOrConnectWithoutTbfornecedoresInput | tbnfCreateOrConnectWithoutTbfornecedoresInput[]
    createMany?: tbnfCreateManyTbfornecedoresInputEnvelope
    connect?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type tbmovimentosUpdateManyWithoutTbfornecedoresNestedInput = {
    create?: XOR<tbmovimentosCreateWithoutTbfornecedoresInput, tbmovimentosUncheckedCreateWithoutTbfornecedoresInput> | tbmovimentosCreateWithoutTbfornecedoresInput[] | tbmovimentosUncheckedCreateWithoutTbfornecedoresInput[]
    connectOrCreate?: tbmovimentosCreateOrConnectWithoutTbfornecedoresInput | tbmovimentosCreateOrConnectWithoutTbfornecedoresInput[]
    upsert?: tbmovimentosUpsertWithWhereUniqueWithoutTbfornecedoresInput | tbmovimentosUpsertWithWhereUniqueWithoutTbfornecedoresInput[]
    createMany?: tbmovimentosCreateManyTbfornecedoresInputEnvelope
    set?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    disconnect?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    delete?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    connect?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    update?: tbmovimentosUpdateWithWhereUniqueWithoutTbfornecedoresInput | tbmovimentosUpdateWithWhereUniqueWithoutTbfornecedoresInput[]
    updateMany?: tbmovimentosUpdateManyWithWhereWithoutTbfornecedoresInput | tbmovimentosUpdateManyWithWhereWithoutTbfornecedoresInput[]
    deleteMany?: tbmovimentosScalarWhereInput | tbmovimentosScalarWhereInput[]
  }

  export type tbnfUpdateManyWithoutTbfornecedoresNestedInput = {
    create?: XOR<tbnfCreateWithoutTbfornecedoresInput, tbnfUncheckedCreateWithoutTbfornecedoresInput> | tbnfCreateWithoutTbfornecedoresInput[] | tbnfUncheckedCreateWithoutTbfornecedoresInput[]
    connectOrCreate?: tbnfCreateOrConnectWithoutTbfornecedoresInput | tbnfCreateOrConnectWithoutTbfornecedoresInput[]
    upsert?: tbnfUpsertWithWhereUniqueWithoutTbfornecedoresInput | tbnfUpsertWithWhereUniqueWithoutTbfornecedoresInput[]
    createMany?: tbnfCreateManyTbfornecedoresInputEnvelope
    set?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    disconnect?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    delete?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    connect?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    update?: tbnfUpdateWithWhereUniqueWithoutTbfornecedoresInput | tbnfUpdateWithWhereUniqueWithoutTbfornecedoresInput[]
    updateMany?: tbnfUpdateManyWithWhereWithoutTbfornecedoresInput | tbnfUpdateManyWithWhereWithoutTbfornecedoresInput[]
    deleteMany?: tbnfScalarWhereInput | tbnfScalarWhereInput[]
  }

  export type tbmovimentosUncheckedUpdateManyWithoutTbfornecedoresNestedInput = {
    create?: XOR<tbmovimentosCreateWithoutTbfornecedoresInput, tbmovimentosUncheckedCreateWithoutTbfornecedoresInput> | tbmovimentosCreateWithoutTbfornecedoresInput[] | tbmovimentosUncheckedCreateWithoutTbfornecedoresInput[]
    connectOrCreate?: tbmovimentosCreateOrConnectWithoutTbfornecedoresInput | tbmovimentosCreateOrConnectWithoutTbfornecedoresInput[]
    upsert?: tbmovimentosUpsertWithWhereUniqueWithoutTbfornecedoresInput | tbmovimentosUpsertWithWhereUniqueWithoutTbfornecedoresInput[]
    createMany?: tbmovimentosCreateManyTbfornecedoresInputEnvelope
    set?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    disconnect?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    delete?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    connect?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    update?: tbmovimentosUpdateWithWhereUniqueWithoutTbfornecedoresInput | tbmovimentosUpdateWithWhereUniqueWithoutTbfornecedoresInput[]
    updateMany?: tbmovimentosUpdateManyWithWhereWithoutTbfornecedoresInput | tbmovimentosUpdateManyWithWhereWithoutTbfornecedoresInput[]
    deleteMany?: tbmovimentosScalarWhereInput | tbmovimentosScalarWhereInput[]
  }

  export type tbnfUncheckedUpdateManyWithoutTbfornecedoresNestedInput = {
    create?: XOR<tbnfCreateWithoutTbfornecedoresInput, tbnfUncheckedCreateWithoutTbfornecedoresInput> | tbnfCreateWithoutTbfornecedoresInput[] | tbnfUncheckedCreateWithoutTbfornecedoresInput[]
    connectOrCreate?: tbnfCreateOrConnectWithoutTbfornecedoresInput | tbnfCreateOrConnectWithoutTbfornecedoresInput[]
    upsert?: tbnfUpsertWithWhereUniqueWithoutTbfornecedoresInput | tbnfUpsertWithWhereUniqueWithoutTbfornecedoresInput[]
    createMany?: tbnfCreateManyTbfornecedoresInputEnvelope
    set?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    disconnect?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    delete?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    connect?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    update?: tbnfUpdateWithWhereUniqueWithoutTbfornecedoresInput | tbnfUpdateWithWhereUniqueWithoutTbfornecedoresInput[]
    updateMany?: tbnfUpdateManyWithWhereWithoutTbfornecedoresInput | tbnfUpdateManyWithWhereWithoutTbfornecedoresInput[]
    deleteMany?: tbnfScalarWhereInput | tbnfScalarWhereInput[]
  }

  export type tbestoqueCreateNestedManyWithoutTblocaisInput = {
    create?: XOR<tbestoqueCreateWithoutTblocaisInput, tbestoqueUncheckedCreateWithoutTblocaisInput> | tbestoqueCreateWithoutTblocaisInput[] | tbestoqueUncheckedCreateWithoutTblocaisInput[]
    connectOrCreate?: tbestoqueCreateOrConnectWithoutTblocaisInput | tbestoqueCreateOrConnectWithoutTblocaisInput[]
    createMany?: tbestoqueCreateManyTblocaisInputEnvelope
    connect?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
  }

  export type tbmovitensCreateNestedManyWithoutTblocaisInput = {
    create?: XOR<tbmovitensCreateWithoutTblocaisInput, tbmovitensUncheckedCreateWithoutTblocaisInput> | tbmovitensCreateWithoutTblocaisInput[] | tbmovitensUncheckedCreateWithoutTblocaisInput[]
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTblocaisInput | tbmovitensCreateOrConnectWithoutTblocaisInput[]
    createMany?: tbmovitensCreateManyTblocaisInputEnvelope
    connect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
  }

  export type tbestoqueUncheckedCreateNestedManyWithoutTblocaisInput = {
    create?: XOR<tbestoqueCreateWithoutTblocaisInput, tbestoqueUncheckedCreateWithoutTblocaisInput> | tbestoqueCreateWithoutTblocaisInput[] | tbestoqueUncheckedCreateWithoutTblocaisInput[]
    connectOrCreate?: tbestoqueCreateOrConnectWithoutTblocaisInput | tbestoqueCreateOrConnectWithoutTblocaisInput[]
    createMany?: tbestoqueCreateManyTblocaisInputEnvelope
    connect?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
  }

  export type tbmovitensUncheckedCreateNestedManyWithoutTblocaisInput = {
    create?: XOR<tbmovitensCreateWithoutTblocaisInput, tbmovitensUncheckedCreateWithoutTblocaisInput> | tbmovitensCreateWithoutTblocaisInput[] | tbmovitensUncheckedCreateWithoutTblocaisInput[]
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTblocaisInput | tbmovitensCreateOrConnectWithoutTblocaisInput[]
    createMany?: tbmovitensCreateManyTblocaisInputEnvelope
    connect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
  }

  export type tbestoqueUpdateManyWithoutTblocaisNestedInput = {
    create?: XOR<tbestoqueCreateWithoutTblocaisInput, tbestoqueUncheckedCreateWithoutTblocaisInput> | tbestoqueCreateWithoutTblocaisInput[] | tbestoqueUncheckedCreateWithoutTblocaisInput[]
    connectOrCreate?: tbestoqueCreateOrConnectWithoutTblocaisInput | tbestoqueCreateOrConnectWithoutTblocaisInput[]
    upsert?: tbestoqueUpsertWithWhereUniqueWithoutTblocaisInput | tbestoqueUpsertWithWhereUniqueWithoutTblocaisInput[]
    createMany?: tbestoqueCreateManyTblocaisInputEnvelope
    set?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    disconnect?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    delete?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    connect?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    update?: tbestoqueUpdateWithWhereUniqueWithoutTblocaisInput | tbestoqueUpdateWithWhereUniqueWithoutTblocaisInput[]
    updateMany?: tbestoqueUpdateManyWithWhereWithoutTblocaisInput | tbestoqueUpdateManyWithWhereWithoutTblocaisInput[]
    deleteMany?: tbestoqueScalarWhereInput | tbestoqueScalarWhereInput[]
  }

  export type tbmovitensUpdateManyWithoutTblocaisNestedInput = {
    create?: XOR<tbmovitensCreateWithoutTblocaisInput, tbmovitensUncheckedCreateWithoutTblocaisInput> | tbmovitensCreateWithoutTblocaisInput[] | tbmovitensUncheckedCreateWithoutTblocaisInput[]
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTblocaisInput | tbmovitensCreateOrConnectWithoutTblocaisInput[]
    upsert?: tbmovitensUpsertWithWhereUniqueWithoutTblocaisInput | tbmovitensUpsertWithWhereUniqueWithoutTblocaisInput[]
    createMany?: tbmovitensCreateManyTblocaisInputEnvelope
    set?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    disconnect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    delete?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    connect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    update?: tbmovitensUpdateWithWhereUniqueWithoutTblocaisInput | tbmovitensUpdateWithWhereUniqueWithoutTblocaisInput[]
    updateMany?: tbmovitensUpdateManyWithWhereWithoutTblocaisInput | tbmovitensUpdateManyWithWhereWithoutTblocaisInput[]
    deleteMany?: tbmovitensScalarWhereInput | tbmovitensScalarWhereInput[]
  }

  export type tbestoqueUncheckedUpdateManyWithoutTblocaisNestedInput = {
    create?: XOR<tbestoqueCreateWithoutTblocaisInput, tbestoqueUncheckedCreateWithoutTblocaisInput> | tbestoqueCreateWithoutTblocaisInput[] | tbestoqueUncheckedCreateWithoutTblocaisInput[]
    connectOrCreate?: tbestoqueCreateOrConnectWithoutTblocaisInput | tbestoqueCreateOrConnectWithoutTblocaisInput[]
    upsert?: tbestoqueUpsertWithWhereUniqueWithoutTblocaisInput | tbestoqueUpsertWithWhereUniqueWithoutTblocaisInput[]
    createMany?: tbestoqueCreateManyTblocaisInputEnvelope
    set?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    disconnect?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    delete?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    connect?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    update?: tbestoqueUpdateWithWhereUniqueWithoutTblocaisInput | tbestoqueUpdateWithWhereUniqueWithoutTblocaisInput[]
    updateMany?: tbestoqueUpdateManyWithWhereWithoutTblocaisInput | tbestoqueUpdateManyWithWhereWithoutTblocaisInput[]
    deleteMany?: tbestoqueScalarWhereInput | tbestoqueScalarWhereInput[]
  }

  export type tbmovitensUncheckedUpdateManyWithoutTblocaisNestedInput = {
    create?: XOR<tbmovitensCreateWithoutTblocaisInput, tbmovitensUncheckedCreateWithoutTblocaisInput> | tbmovitensCreateWithoutTblocaisInput[] | tbmovitensUncheckedCreateWithoutTblocaisInput[]
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTblocaisInput | tbmovitensCreateOrConnectWithoutTblocaisInput[]
    upsert?: tbmovitensUpsertWithWhereUniqueWithoutTblocaisInput | tbmovitensUpsertWithWhereUniqueWithoutTblocaisInput[]
    createMany?: tbmovitensCreateManyTblocaisInputEnvelope
    set?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    disconnect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    delete?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    connect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    update?: tbmovitensUpdateWithWhereUniqueWithoutTblocaisInput | tbmovitensUpdateWithWhereUniqueWithoutTblocaisInput[]
    updateMany?: tbmovitensUpdateManyWithWhereWithoutTblocaisInput | tbmovitensUpdateManyWithWhereWithoutTblocaisInput[]
    deleteMany?: tbmovitensScalarWhereInput | tbmovitensScalarWhereInput[]
  }

  export type tbfornecedoresCreateNestedOneWithoutTbmovimentosInput = {
    create?: XOR<tbfornecedoresCreateWithoutTbmovimentosInput, tbfornecedoresUncheckedCreateWithoutTbmovimentosInput>
    connectOrCreate?: tbfornecedoresCreateOrConnectWithoutTbmovimentosInput
    connect?: tbfornecedoresWhereUniqueInput
  }

  export type tbusuariosCreateNestedOneWithoutTbmovimentosInput = {
    create?: XOR<tbusuariosCreateWithoutTbmovimentosInput, tbusuariosUncheckedCreateWithoutTbmovimentosInput>
    connectOrCreate?: tbusuariosCreateOrConnectWithoutTbmovimentosInput
    connect?: tbusuariosWhereUniqueInput
  }

  export type tbmovitensCreateNestedManyWithoutTbmovimentosInput = {
    create?: XOR<tbmovitensCreateWithoutTbmovimentosInput, tbmovitensUncheckedCreateWithoutTbmovimentosInput> | tbmovitensCreateWithoutTbmovimentosInput[] | tbmovitensUncheckedCreateWithoutTbmovimentosInput[]
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTbmovimentosInput | tbmovitensCreateOrConnectWithoutTbmovimentosInput[]
    createMany?: tbmovitensCreateManyTbmovimentosInputEnvelope
    connect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
  }

  export type tbnfCreateNestedOneWithoutTbmovimentosInput = {
    create?: XOR<tbnfCreateWithoutTbmovimentosInput, tbnfUncheckedCreateWithoutTbmovimentosInput>
    connectOrCreate?: tbnfCreateOrConnectWithoutTbmovimentosInput
    connect?: tbnfWhereUniqueInput
  }

  export type tbmovitensUncheckedCreateNestedManyWithoutTbmovimentosInput = {
    create?: XOR<tbmovitensCreateWithoutTbmovimentosInput, tbmovitensUncheckedCreateWithoutTbmovimentosInput> | tbmovitensCreateWithoutTbmovimentosInput[] | tbmovitensUncheckedCreateWithoutTbmovimentosInput[]
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTbmovimentosInput | tbmovitensCreateOrConnectWithoutTbmovimentosInput[]
    createMany?: tbmovitensCreateManyTbmovimentosInputEnvelope
    connect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
  }

  export type tbnfUncheckedCreateNestedOneWithoutTbmovimentosInput = {
    create?: XOR<tbnfCreateWithoutTbmovimentosInput, tbnfUncheckedCreateWithoutTbmovimentosInput>
    connectOrCreate?: tbnfCreateOrConnectWithoutTbmovimentosInput
    connect?: tbnfWhereUniqueInput
  }

  export type tbfornecedoresUpdateOneWithoutTbmovimentosNestedInput = {
    create?: XOR<tbfornecedoresCreateWithoutTbmovimentosInput, tbfornecedoresUncheckedCreateWithoutTbmovimentosInput>
    connectOrCreate?: tbfornecedoresCreateOrConnectWithoutTbmovimentosInput
    upsert?: tbfornecedoresUpsertWithoutTbmovimentosInput
    disconnect?: tbfornecedoresWhereInput | boolean
    delete?: tbfornecedoresWhereInput | boolean
    connect?: tbfornecedoresWhereUniqueInput
    update?: XOR<XOR<tbfornecedoresUpdateToOneWithWhereWithoutTbmovimentosInput, tbfornecedoresUpdateWithoutTbmovimentosInput>, tbfornecedoresUncheckedUpdateWithoutTbmovimentosInput>
  }

  export type tbusuariosUpdateOneWithoutTbmovimentosNestedInput = {
    create?: XOR<tbusuariosCreateWithoutTbmovimentosInput, tbusuariosUncheckedCreateWithoutTbmovimentosInput>
    connectOrCreate?: tbusuariosCreateOrConnectWithoutTbmovimentosInput
    upsert?: tbusuariosUpsertWithoutTbmovimentosInput
    disconnect?: tbusuariosWhereInput | boolean
    delete?: tbusuariosWhereInput | boolean
    connect?: tbusuariosWhereUniqueInput
    update?: XOR<XOR<tbusuariosUpdateToOneWithWhereWithoutTbmovimentosInput, tbusuariosUpdateWithoutTbmovimentosInput>, tbusuariosUncheckedUpdateWithoutTbmovimentosInput>
  }

  export type tbmovitensUpdateManyWithoutTbmovimentosNestedInput = {
    create?: XOR<tbmovitensCreateWithoutTbmovimentosInput, tbmovitensUncheckedCreateWithoutTbmovimentosInput> | tbmovitensCreateWithoutTbmovimentosInput[] | tbmovitensUncheckedCreateWithoutTbmovimentosInput[]
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTbmovimentosInput | tbmovitensCreateOrConnectWithoutTbmovimentosInput[]
    upsert?: tbmovitensUpsertWithWhereUniqueWithoutTbmovimentosInput | tbmovitensUpsertWithWhereUniqueWithoutTbmovimentosInput[]
    createMany?: tbmovitensCreateManyTbmovimentosInputEnvelope
    set?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    disconnect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    delete?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    connect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    update?: tbmovitensUpdateWithWhereUniqueWithoutTbmovimentosInput | tbmovitensUpdateWithWhereUniqueWithoutTbmovimentosInput[]
    updateMany?: tbmovitensUpdateManyWithWhereWithoutTbmovimentosInput | tbmovitensUpdateManyWithWhereWithoutTbmovimentosInput[]
    deleteMany?: tbmovitensScalarWhereInput | tbmovitensScalarWhereInput[]
  }

  export type tbnfUpdateOneWithoutTbmovimentosNestedInput = {
    create?: XOR<tbnfCreateWithoutTbmovimentosInput, tbnfUncheckedCreateWithoutTbmovimentosInput>
    connectOrCreate?: tbnfCreateOrConnectWithoutTbmovimentosInput
    upsert?: tbnfUpsertWithoutTbmovimentosInput
    disconnect?: tbnfWhereInput | boolean
    delete?: tbnfWhereInput | boolean
    connect?: tbnfWhereUniqueInput
    update?: XOR<XOR<tbnfUpdateToOneWithWhereWithoutTbmovimentosInput, tbnfUpdateWithoutTbmovimentosInput>, tbnfUncheckedUpdateWithoutTbmovimentosInput>
  }

  export type tbmovitensUncheckedUpdateManyWithoutTbmovimentosNestedInput = {
    create?: XOR<tbmovitensCreateWithoutTbmovimentosInput, tbmovitensUncheckedCreateWithoutTbmovimentosInput> | tbmovitensCreateWithoutTbmovimentosInput[] | tbmovitensUncheckedCreateWithoutTbmovimentosInput[]
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTbmovimentosInput | tbmovitensCreateOrConnectWithoutTbmovimentosInput[]
    upsert?: tbmovitensUpsertWithWhereUniqueWithoutTbmovimentosInput | tbmovitensUpsertWithWhereUniqueWithoutTbmovimentosInput[]
    createMany?: tbmovitensCreateManyTbmovimentosInputEnvelope
    set?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    disconnect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    delete?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    connect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    update?: tbmovitensUpdateWithWhereUniqueWithoutTbmovimentosInput | tbmovitensUpdateWithWhereUniqueWithoutTbmovimentosInput[]
    updateMany?: tbmovitensUpdateManyWithWhereWithoutTbmovimentosInput | tbmovitensUpdateManyWithWhereWithoutTbmovimentosInput[]
    deleteMany?: tbmovitensScalarWhereInput | tbmovitensScalarWhereInput[]
  }

  export type tbnfUncheckedUpdateOneWithoutTbmovimentosNestedInput = {
    create?: XOR<tbnfCreateWithoutTbmovimentosInput, tbnfUncheckedCreateWithoutTbmovimentosInput>
    connectOrCreate?: tbnfCreateOrConnectWithoutTbmovimentosInput
    upsert?: tbnfUpsertWithoutTbmovimentosInput
    disconnect?: tbnfWhereInput | boolean
    delete?: tbnfWhereInput | boolean
    connect?: tbnfWhereUniqueInput
    update?: XOR<XOR<tbnfUpdateToOneWithWhereWithoutTbmovimentosInput, tbnfUpdateWithoutTbmovimentosInput>, tbnfUncheckedUpdateWithoutTbmovimentosInput>
  }

  export type tblocaisCreateNestedOneWithoutTbmovitensInput = {
    create?: XOR<tblocaisCreateWithoutTbmovitensInput, tblocaisUncheckedCreateWithoutTbmovitensInput>
    connectOrCreate?: tblocaisCreateOrConnectWithoutTbmovitensInput
    connect?: tblocaisWhereUniqueInput
  }

  export type tbmovimentosCreateNestedOneWithoutTbmovitensInput = {
    create?: XOR<tbmovimentosCreateWithoutTbmovitensInput, tbmovimentosUncheckedCreateWithoutTbmovitensInput>
    connectOrCreate?: tbmovimentosCreateOrConnectWithoutTbmovitensInput
    connect?: tbmovimentosWhereUniqueInput
  }

  export type tbprodutosCreateNestedOneWithoutTbmovitensInput = {
    create?: XOR<tbprodutosCreateWithoutTbmovitensInput, tbprodutosUncheckedCreateWithoutTbmovitensInput>
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbmovitensInput
    connect?: tbprodutosWhereUniqueInput
  }

  export type tbnfitensCreateNestedManyWithoutTbmovitensInput = {
    create?: XOR<tbnfitensCreateWithoutTbmovitensInput, tbnfitensUncheckedCreateWithoutTbmovitensInput> | tbnfitensCreateWithoutTbmovitensInput[] | tbnfitensUncheckedCreateWithoutTbmovitensInput[]
    connectOrCreate?: tbnfitensCreateOrConnectWithoutTbmovitensInput | tbnfitensCreateOrConnectWithoutTbmovitensInput[]
    createMany?: tbnfitensCreateManyTbmovitensInputEnvelope
    connect?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
  }

  export type tbnfitensUncheckedCreateNestedManyWithoutTbmovitensInput = {
    create?: XOR<tbnfitensCreateWithoutTbmovitensInput, tbnfitensUncheckedCreateWithoutTbmovitensInput> | tbnfitensCreateWithoutTbmovitensInput[] | tbnfitensUncheckedCreateWithoutTbmovitensInput[]
    connectOrCreate?: tbnfitensCreateOrConnectWithoutTbmovitensInput | tbnfitensCreateOrConnectWithoutTbmovitensInput[]
    createMany?: tbnfitensCreateManyTbmovitensInputEnvelope
    connect?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
  }

  export type tblocaisUpdateOneWithoutTbmovitensNestedInput = {
    create?: XOR<tblocaisCreateWithoutTbmovitensInput, tblocaisUncheckedCreateWithoutTbmovitensInput>
    connectOrCreate?: tblocaisCreateOrConnectWithoutTbmovitensInput
    upsert?: tblocaisUpsertWithoutTbmovitensInput
    disconnect?: tblocaisWhereInput | boolean
    delete?: tblocaisWhereInput | boolean
    connect?: tblocaisWhereUniqueInput
    update?: XOR<XOR<tblocaisUpdateToOneWithWhereWithoutTbmovitensInput, tblocaisUpdateWithoutTbmovitensInput>, tblocaisUncheckedUpdateWithoutTbmovitensInput>
  }

  export type tbmovimentosUpdateOneRequiredWithoutTbmovitensNestedInput = {
    create?: XOR<tbmovimentosCreateWithoutTbmovitensInput, tbmovimentosUncheckedCreateWithoutTbmovitensInput>
    connectOrCreate?: tbmovimentosCreateOrConnectWithoutTbmovitensInput
    upsert?: tbmovimentosUpsertWithoutTbmovitensInput
    connect?: tbmovimentosWhereUniqueInput
    update?: XOR<XOR<tbmovimentosUpdateToOneWithWhereWithoutTbmovitensInput, tbmovimentosUpdateWithoutTbmovitensInput>, tbmovimentosUncheckedUpdateWithoutTbmovitensInput>
  }

  export type tbprodutosUpdateOneRequiredWithoutTbmovitensNestedInput = {
    create?: XOR<tbprodutosCreateWithoutTbmovitensInput, tbprodutosUncheckedCreateWithoutTbmovitensInput>
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbmovitensInput
    upsert?: tbprodutosUpsertWithoutTbmovitensInput
    connect?: tbprodutosWhereUniqueInput
    update?: XOR<XOR<tbprodutosUpdateToOneWithWhereWithoutTbmovitensInput, tbprodutosUpdateWithoutTbmovitensInput>, tbprodutosUncheckedUpdateWithoutTbmovitensInput>
  }

  export type tbnfitensUpdateManyWithoutTbmovitensNestedInput = {
    create?: XOR<tbnfitensCreateWithoutTbmovitensInput, tbnfitensUncheckedCreateWithoutTbmovitensInput> | tbnfitensCreateWithoutTbmovitensInput[] | tbnfitensUncheckedCreateWithoutTbmovitensInput[]
    connectOrCreate?: tbnfitensCreateOrConnectWithoutTbmovitensInput | tbnfitensCreateOrConnectWithoutTbmovitensInput[]
    upsert?: tbnfitensUpsertWithWhereUniqueWithoutTbmovitensInput | tbnfitensUpsertWithWhereUniqueWithoutTbmovitensInput[]
    createMany?: tbnfitensCreateManyTbmovitensInputEnvelope
    set?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    disconnect?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    delete?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    connect?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    update?: tbnfitensUpdateWithWhereUniqueWithoutTbmovitensInput | tbnfitensUpdateWithWhereUniqueWithoutTbmovitensInput[]
    updateMany?: tbnfitensUpdateManyWithWhereWithoutTbmovitensInput | tbnfitensUpdateManyWithWhereWithoutTbmovitensInput[]
    deleteMany?: tbnfitensScalarWhereInput | tbnfitensScalarWhereInput[]
  }

  export type tbnfitensUncheckedUpdateManyWithoutTbmovitensNestedInput = {
    create?: XOR<tbnfitensCreateWithoutTbmovitensInput, tbnfitensUncheckedCreateWithoutTbmovitensInput> | tbnfitensCreateWithoutTbmovitensInput[] | tbnfitensUncheckedCreateWithoutTbmovitensInput[]
    connectOrCreate?: tbnfitensCreateOrConnectWithoutTbmovitensInput | tbnfitensCreateOrConnectWithoutTbmovitensInput[]
    upsert?: tbnfitensUpsertWithWhereUniqueWithoutTbmovitensInput | tbnfitensUpsertWithWhereUniqueWithoutTbmovitensInput[]
    createMany?: tbnfitensCreateManyTbmovitensInputEnvelope
    set?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    disconnect?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    delete?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    connect?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    update?: tbnfitensUpdateWithWhereUniqueWithoutTbmovitensInput | tbnfitensUpdateWithWhereUniqueWithoutTbmovitensInput[]
    updateMany?: tbnfitensUpdateManyWithWhereWithoutTbmovitensInput | tbnfitensUpdateManyWithWhereWithoutTbmovitensInput[]
    deleteMany?: tbnfitensScalarWhereInput | tbnfitensScalarWhereInput[]
  }

  export type tbmovimentosCreateNestedOneWithoutTbnfInput = {
    create?: XOR<tbmovimentosCreateWithoutTbnfInput, tbmovimentosUncheckedCreateWithoutTbnfInput>
    connectOrCreate?: tbmovimentosCreateOrConnectWithoutTbnfInput
    connect?: tbmovimentosWhereUniqueInput
  }

  export type tbfornecedoresCreateNestedOneWithoutTbnfInput = {
    create?: XOR<tbfornecedoresCreateWithoutTbnfInput, tbfornecedoresUncheckedCreateWithoutTbnfInput>
    connectOrCreate?: tbfornecedoresCreateOrConnectWithoutTbnfInput
    connect?: tbfornecedoresWhereUniqueInput
  }

  export type tbusuariosCreateNestedOneWithoutTbnfInput = {
    create?: XOR<tbusuariosCreateWithoutTbnfInput, tbusuariosUncheckedCreateWithoutTbnfInput>
    connectOrCreate?: tbusuariosCreateOrConnectWithoutTbnfInput
    connect?: tbusuariosWhereUniqueInput
  }

  export type tbnfitensCreateNestedManyWithoutTbnfInput = {
    create?: XOR<tbnfitensCreateWithoutTbnfInput, tbnfitensUncheckedCreateWithoutTbnfInput> | tbnfitensCreateWithoutTbnfInput[] | tbnfitensUncheckedCreateWithoutTbnfInput[]
    connectOrCreate?: tbnfitensCreateOrConnectWithoutTbnfInput | tbnfitensCreateOrConnectWithoutTbnfInput[]
    createMany?: tbnfitensCreateManyTbnfInputEnvelope
    connect?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
  }

  export type tbnfitensUncheckedCreateNestedManyWithoutTbnfInput = {
    create?: XOR<tbnfitensCreateWithoutTbnfInput, tbnfitensUncheckedCreateWithoutTbnfInput> | tbnfitensCreateWithoutTbnfInput[] | tbnfitensUncheckedCreateWithoutTbnfInput[]
    connectOrCreate?: tbnfitensCreateOrConnectWithoutTbnfInput | tbnfitensCreateOrConnectWithoutTbnfInput[]
    createMany?: tbnfitensCreateManyTbnfInputEnvelope
    connect?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
  }

  export type tbmovimentosUpdateOneWithoutTbnfNestedInput = {
    create?: XOR<tbmovimentosCreateWithoutTbnfInput, tbmovimentosUncheckedCreateWithoutTbnfInput>
    connectOrCreate?: tbmovimentosCreateOrConnectWithoutTbnfInput
    upsert?: tbmovimentosUpsertWithoutTbnfInput
    disconnect?: tbmovimentosWhereInput | boolean
    delete?: tbmovimentosWhereInput | boolean
    connect?: tbmovimentosWhereUniqueInput
    update?: XOR<XOR<tbmovimentosUpdateToOneWithWhereWithoutTbnfInput, tbmovimentosUpdateWithoutTbnfInput>, tbmovimentosUncheckedUpdateWithoutTbnfInput>
  }

  export type tbfornecedoresUpdateOneWithoutTbnfNestedInput = {
    create?: XOR<tbfornecedoresCreateWithoutTbnfInput, tbfornecedoresUncheckedCreateWithoutTbnfInput>
    connectOrCreate?: tbfornecedoresCreateOrConnectWithoutTbnfInput
    upsert?: tbfornecedoresUpsertWithoutTbnfInput
    disconnect?: tbfornecedoresWhereInput | boolean
    delete?: tbfornecedoresWhereInput | boolean
    connect?: tbfornecedoresWhereUniqueInput
    update?: XOR<XOR<tbfornecedoresUpdateToOneWithWhereWithoutTbnfInput, tbfornecedoresUpdateWithoutTbnfInput>, tbfornecedoresUncheckedUpdateWithoutTbnfInput>
  }

  export type tbusuariosUpdateOneWithoutTbnfNestedInput = {
    create?: XOR<tbusuariosCreateWithoutTbnfInput, tbusuariosUncheckedCreateWithoutTbnfInput>
    connectOrCreate?: tbusuariosCreateOrConnectWithoutTbnfInput
    upsert?: tbusuariosUpsertWithoutTbnfInput
    disconnect?: tbusuariosWhereInput | boolean
    delete?: tbusuariosWhereInput | boolean
    connect?: tbusuariosWhereUniqueInput
    update?: XOR<XOR<tbusuariosUpdateToOneWithWhereWithoutTbnfInput, tbusuariosUpdateWithoutTbnfInput>, tbusuariosUncheckedUpdateWithoutTbnfInput>
  }

  export type tbnfitensUpdateManyWithoutTbnfNestedInput = {
    create?: XOR<tbnfitensCreateWithoutTbnfInput, tbnfitensUncheckedCreateWithoutTbnfInput> | tbnfitensCreateWithoutTbnfInput[] | tbnfitensUncheckedCreateWithoutTbnfInput[]
    connectOrCreate?: tbnfitensCreateOrConnectWithoutTbnfInput | tbnfitensCreateOrConnectWithoutTbnfInput[]
    upsert?: tbnfitensUpsertWithWhereUniqueWithoutTbnfInput | tbnfitensUpsertWithWhereUniqueWithoutTbnfInput[]
    createMany?: tbnfitensCreateManyTbnfInputEnvelope
    set?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    disconnect?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    delete?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    connect?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    update?: tbnfitensUpdateWithWhereUniqueWithoutTbnfInput | tbnfitensUpdateWithWhereUniqueWithoutTbnfInput[]
    updateMany?: tbnfitensUpdateManyWithWhereWithoutTbnfInput | tbnfitensUpdateManyWithWhereWithoutTbnfInput[]
    deleteMany?: tbnfitensScalarWhereInput | tbnfitensScalarWhereInput[]
  }

  export type tbnfitensUncheckedUpdateManyWithoutTbnfNestedInput = {
    create?: XOR<tbnfitensCreateWithoutTbnfInput, tbnfitensUncheckedCreateWithoutTbnfInput> | tbnfitensCreateWithoutTbnfInput[] | tbnfitensUncheckedCreateWithoutTbnfInput[]
    connectOrCreate?: tbnfitensCreateOrConnectWithoutTbnfInput | tbnfitensCreateOrConnectWithoutTbnfInput[]
    upsert?: tbnfitensUpsertWithWhereUniqueWithoutTbnfInput | tbnfitensUpsertWithWhereUniqueWithoutTbnfInput[]
    createMany?: tbnfitensCreateManyTbnfInputEnvelope
    set?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    disconnect?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    delete?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    connect?: tbnfitensWhereUniqueInput | tbnfitensWhereUniqueInput[]
    update?: tbnfitensUpdateWithWhereUniqueWithoutTbnfInput | tbnfitensUpdateWithWhereUniqueWithoutTbnfInput[]
    updateMany?: tbnfitensUpdateManyWithWhereWithoutTbnfInput | tbnfitensUpdateManyWithWhereWithoutTbnfInput[]
    deleteMany?: tbnfitensScalarWhereInput | tbnfitensScalarWhereInput[]
  }

  export type tbmovitensCreateNestedOneWithoutTbnfitensInput = {
    create?: XOR<tbmovitensCreateWithoutTbnfitensInput, tbmovitensUncheckedCreateWithoutTbnfitensInput>
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTbnfitensInput
    connect?: tbmovitensWhereUniqueInput
  }

  export type tbnfCreateNestedOneWithoutTbnfitensInput = {
    create?: XOR<tbnfCreateWithoutTbnfitensInput, tbnfUncheckedCreateWithoutTbnfitensInput>
    connectOrCreate?: tbnfCreateOrConnectWithoutTbnfitensInput
    connect?: tbnfWhereUniqueInput
  }

  export type tbmovitensUpdateOneWithoutTbnfitensNestedInput = {
    create?: XOR<tbmovitensCreateWithoutTbnfitensInput, tbmovitensUncheckedCreateWithoutTbnfitensInput>
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTbnfitensInput
    upsert?: tbmovitensUpsertWithoutTbnfitensInput
    disconnect?: tbmovitensWhereInput | boolean
    delete?: tbmovitensWhereInput | boolean
    connect?: tbmovitensWhereUniqueInput
    update?: XOR<XOR<tbmovitensUpdateToOneWithWhereWithoutTbnfitensInput, tbmovitensUpdateWithoutTbnfitensInput>, tbmovitensUncheckedUpdateWithoutTbnfitensInput>
  }

  export type tbnfUpdateOneRequiredWithoutTbnfitensNestedInput = {
    create?: XOR<tbnfCreateWithoutTbnfitensInput, tbnfUncheckedCreateWithoutTbnfitensInput>
    connectOrCreate?: tbnfCreateOrConnectWithoutTbnfitensInput
    upsert?: tbnfUpsertWithoutTbnfitensInput
    connect?: tbnfWhereUniqueInput
    update?: XOR<XOR<tbnfUpdateToOneWithWhereWithoutTbnfitensInput, tbnfUpdateWithoutTbnfitensInput>, tbnfUncheckedUpdateWithoutTbnfitensInput>
  }

  export type tbprodutosCreateNestedOneWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput = {
    create?: XOR<tbprodutosCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodutosUncheckedCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput>
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput
    connect?: tbprodutosWhereUniqueInput
  }

  export type tbprodutosCreateNestedOneWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    create?: XOR<tbprodutosCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodutosUncheckedCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput>
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput
    connect?: tbprodutosWhereUniqueInput
  }

  export type tbprodutosUpdateOneRequiredWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosNestedInput = {
    create?: XOR<tbprodutosCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodutosUncheckedCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput>
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput
    upsert?: tbprodutosUpsertWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput
    connect?: tbprodutosWhereUniqueInput
    update?: XOR<XOR<tbprodutosUpdateToOneWithWhereWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodutosUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput>, tbprodutosUncheckedUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput>
  }

  export type tbprodutosUpdateOneRequiredWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosNestedInput = {
    create?: XOR<tbprodutosCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodutosUncheckedCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput>
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput
    upsert?: tbprodutosUpsertWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput
    connect?: tbprodutosWhereUniqueInput
    update?: XOR<XOR<tbprodutosUpdateToOneWithWhereWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodutosUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput>, tbprodutosUncheckedUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput>
  }

  export type tbestoqueCreateNestedManyWithoutTbprodutosInput = {
    create?: XOR<tbestoqueCreateWithoutTbprodutosInput, tbestoqueUncheckedCreateWithoutTbprodutosInput> | tbestoqueCreateWithoutTbprodutosInput[] | tbestoqueUncheckedCreateWithoutTbprodutosInput[]
    connectOrCreate?: tbestoqueCreateOrConnectWithoutTbprodutosInput | tbestoqueCreateOrConnectWithoutTbprodutosInput[]
    createMany?: tbestoqueCreateManyTbprodutosInputEnvelope
    connect?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
  }

  export type tbmovitensCreateNestedManyWithoutTbprodutosInput = {
    create?: XOR<tbmovitensCreateWithoutTbprodutosInput, tbmovitensUncheckedCreateWithoutTbprodutosInput> | tbmovitensCreateWithoutTbprodutosInput[] | tbmovitensUncheckedCreateWithoutTbprodutosInput[]
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTbprodutosInput | tbmovitensCreateOrConnectWithoutTbprodutosInput[]
    createMany?: tbmovitensCreateManyTbprodutosInputEnvelope
    connect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
  }

  export type tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput = {
    create?: XOR<tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput> | tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[] | tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    connectOrCreate?: tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput | tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    createMany?: tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInputEnvelope
    connect?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
  }

  export type tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    create?: XOR<tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput> | tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[] | tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    connectOrCreate?: tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput | tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    createMany?: tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInputEnvelope
    connect?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
  }

  export type tbtiposprodutosCreateNestedOneWithoutTbprodutosInput = {
    create?: XOR<tbtiposprodutosCreateWithoutTbprodutosInput, tbtiposprodutosUncheckedCreateWithoutTbprodutosInput>
    connectOrCreate?: tbtiposprodutosCreateOrConnectWithoutTbprodutosInput
    connect?: tbtiposprodutosWhereUniqueInput
  }

  export type tbunidademedidaCreateNestedOneWithoutTbprodutosInput = {
    create?: XOR<tbunidademedidaCreateWithoutTbprodutosInput, tbunidademedidaUncheckedCreateWithoutTbprodutosInput>
    connectOrCreate?: tbunidademedidaCreateOrConnectWithoutTbprodutosInput
    connect?: tbunidademedidaWhereUniqueInput
  }

  export type tbestoqueUncheckedCreateNestedManyWithoutTbprodutosInput = {
    create?: XOR<tbestoqueCreateWithoutTbprodutosInput, tbestoqueUncheckedCreateWithoutTbprodutosInput> | tbestoqueCreateWithoutTbprodutosInput[] | tbestoqueUncheckedCreateWithoutTbprodutosInput[]
    connectOrCreate?: tbestoqueCreateOrConnectWithoutTbprodutosInput | tbestoqueCreateOrConnectWithoutTbprodutosInput[]
    createMany?: tbestoqueCreateManyTbprodutosInputEnvelope
    connect?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
  }

  export type tbmovitensUncheckedCreateNestedManyWithoutTbprodutosInput = {
    create?: XOR<tbmovitensCreateWithoutTbprodutosInput, tbmovitensUncheckedCreateWithoutTbprodutosInput> | tbmovitensCreateWithoutTbprodutosInput[] | tbmovitensUncheckedCreateWithoutTbprodutosInput[]
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTbprodutosInput | tbmovitensCreateOrConnectWithoutTbprodutosInput[]
    createMany?: tbmovitensCreateManyTbprodutosInputEnvelope
    connect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
  }

  export type tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput = {
    create?: XOR<tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput> | tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[] | tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    connectOrCreate?: tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput | tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    createMany?: tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInputEnvelope
    connect?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
  }

  export type tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    create?: XOR<tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput> | tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[] | tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    connectOrCreate?: tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput | tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    createMany?: tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInputEnvelope
    connect?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
  }

  export type tbestoqueUpdateManyWithoutTbprodutosNestedInput = {
    create?: XOR<tbestoqueCreateWithoutTbprodutosInput, tbestoqueUncheckedCreateWithoutTbprodutosInput> | tbestoqueCreateWithoutTbprodutosInput[] | tbestoqueUncheckedCreateWithoutTbprodutosInput[]
    connectOrCreate?: tbestoqueCreateOrConnectWithoutTbprodutosInput | tbestoqueCreateOrConnectWithoutTbprodutosInput[]
    upsert?: tbestoqueUpsertWithWhereUniqueWithoutTbprodutosInput | tbestoqueUpsertWithWhereUniqueWithoutTbprodutosInput[]
    createMany?: tbestoqueCreateManyTbprodutosInputEnvelope
    set?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    disconnect?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    delete?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    connect?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    update?: tbestoqueUpdateWithWhereUniqueWithoutTbprodutosInput | tbestoqueUpdateWithWhereUniqueWithoutTbprodutosInput[]
    updateMany?: tbestoqueUpdateManyWithWhereWithoutTbprodutosInput | tbestoqueUpdateManyWithWhereWithoutTbprodutosInput[]
    deleteMany?: tbestoqueScalarWhereInput | tbestoqueScalarWhereInput[]
  }

  export type tbmovitensUpdateManyWithoutTbprodutosNestedInput = {
    create?: XOR<tbmovitensCreateWithoutTbprodutosInput, tbmovitensUncheckedCreateWithoutTbprodutosInput> | tbmovitensCreateWithoutTbprodutosInput[] | tbmovitensUncheckedCreateWithoutTbprodutosInput[]
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTbprodutosInput | tbmovitensCreateOrConnectWithoutTbprodutosInput[]
    upsert?: tbmovitensUpsertWithWhereUniqueWithoutTbprodutosInput | tbmovitensUpsertWithWhereUniqueWithoutTbprodutosInput[]
    createMany?: tbmovitensCreateManyTbprodutosInputEnvelope
    set?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    disconnect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    delete?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    connect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    update?: tbmovitensUpdateWithWhereUniqueWithoutTbprodutosInput | tbmovitensUpdateWithWhereUniqueWithoutTbprodutosInput[]
    updateMany?: tbmovitensUpdateManyWithWhereWithoutTbprodutosInput | tbmovitensUpdateManyWithWhereWithoutTbprodutosInput[]
    deleteMany?: tbmovitensScalarWhereInput | tbmovitensScalarWhereInput[]
  }

  export type tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput = {
    create?: XOR<tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput> | tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[] | tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    connectOrCreate?: tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput | tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    upsert?: tbprodcomposicaoUpsertWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput | tbprodcomposicaoUpsertWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    createMany?: tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInputEnvelope
    set?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    disconnect?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    delete?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    connect?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    update?: tbprodcomposicaoUpdateWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput | tbprodcomposicaoUpdateWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    updateMany?: tbprodcomposicaoUpdateManyWithWhereWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput | tbprodcomposicaoUpdateManyWithWhereWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    deleteMany?: tbprodcomposicaoScalarWhereInput | tbprodcomposicaoScalarWhereInput[]
  }

  export type tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput = {
    create?: XOR<tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput> | tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[] | tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    connectOrCreate?: tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput | tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    upsert?: tbprodcomposicaoUpsertWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput | tbprodcomposicaoUpsertWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    createMany?: tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInputEnvelope
    set?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    disconnect?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    delete?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    connect?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    update?: tbprodcomposicaoUpdateWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput | tbprodcomposicaoUpdateWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    updateMany?: tbprodcomposicaoUpdateManyWithWhereWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput | tbprodcomposicaoUpdateManyWithWhereWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    deleteMany?: tbprodcomposicaoScalarWhereInput | tbprodcomposicaoScalarWhereInput[]
  }

  export type tbtiposprodutosUpdateOneWithoutTbprodutosNestedInput = {
    create?: XOR<tbtiposprodutosCreateWithoutTbprodutosInput, tbtiposprodutosUncheckedCreateWithoutTbprodutosInput>
    connectOrCreate?: tbtiposprodutosCreateOrConnectWithoutTbprodutosInput
    upsert?: tbtiposprodutosUpsertWithoutTbprodutosInput
    disconnect?: tbtiposprodutosWhereInput | boolean
    delete?: tbtiposprodutosWhereInput | boolean
    connect?: tbtiposprodutosWhereUniqueInput
    update?: XOR<XOR<tbtiposprodutosUpdateToOneWithWhereWithoutTbprodutosInput, tbtiposprodutosUpdateWithoutTbprodutosInput>, tbtiposprodutosUncheckedUpdateWithoutTbprodutosInput>
  }

  export type tbunidademedidaUpdateOneWithoutTbprodutosNestedInput = {
    create?: XOR<tbunidademedidaCreateWithoutTbprodutosInput, tbunidademedidaUncheckedCreateWithoutTbprodutosInput>
    connectOrCreate?: tbunidademedidaCreateOrConnectWithoutTbprodutosInput
    upsert?: tbunidademedidaUpsertWithoutTbprodutosInput
    disconnect?: tbunidademedidaWhereInput | boolean
    delete?: tbunidademedidaWhereInput | boolean
    connect?: tbunidademedidaWhereUniqueInput
    update?: XOR<XOR<tbunidademedidaUpdateToOneWithWhereWithoutTbprodutosInput, tbunidademedidaUpdateWithoutTbprodutosInput>, tbunidademedidaUncheckedUpdateWithoutTbprodutosInput>
  }

  export type tbestoqueUncheckedUpdateManyWithoutTbprodutosNestedInput = {
    create?: XOR<tbestoqueCreateWithoutTbprodutosInput, tbestoqueUncheckedCreateWithoutTbprodutosInput> | tbestoqueCreateWithoutTbprodutosInput[] | tbestoqueUncheckedCreateWithoutTbprodutosInput[]
    connectOrCreate?: tbestoqueCreateOrConnectWithoutTbprodutosInput | tbestoqueCreateOrConnectWithoutTbprodutosInput[]
    upsert?: tbestoqueUpsertWithWhereUniqueWithoutTbprodutosInput | tbestoqueUpsertWithWhereUniqueWithoutTbprodutosInput[]
    createMany?: tbestoqueCreateManyTbprodutosInputEnvelope
    set?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    disconnect?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    delete?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    connect?: tbestoqueWhereUniqueInput | tbestoqueWhereUniqueInput[]
    update?: tbestoqueUpdateWithWhereUniqueWithoutTbprodutosInput | tbestoqueUpdateWithWhereUniqueWithoutTbprodutosInput[]
    updateMany?: tbestoqueUpdateManyWithWhereWithoutTbprodutosInput | tbestoqueUpdateManyWithWhereWithoutTbprodutosInput[]
    deleteMany?: tbestoqueScalarWhereInput | tbestoqueScalarWhereInput[]
  }

  export type tbmovitensUncheckedUpdateManyWithoutTbprodutosNestedInput = {
    create?: XOR<tbmovitensCreateWithoutTbprodutosInput, tbmovitensUncheckedCreateWithoutTbprodutosInput> | tbmovitensCreateWithoutTbprodutosInput[] | tbmovitensUncheckedCreateWithoutTbprodutosInput[]
    connectOrCreate?: tbmovitensCreateOrConnectWithoutTbprodutosInput | tbmovitensCreateOrConnectWithoutTbprodutosInput[]
    upsert?: tbmovitensUpsertWithWhereUniqueWithoutTbprodutosInput | tbmovitensUpsertWithWhereUniqueWithoutTbprodutosInput[]
    createMany?: tbmovitensCreateManyTbprodutosInputEnvelope
    set?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    disconnect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    delete?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    connect?: tbmovitensWhereUniqueInput | tbmovitensWhereUniqueInput[]
    update?: tbmovitensUpdateWithWhereUniqueWithoutTbprodutosInput | tbmovitensUpdateWithWhereUniqueWithoutTbprodutosInput[]
    updateMany?: tbmovitensUpdateManyWithWhereWithoutTbprodutosInput | tbmovitensUpdateManyWithWhereWithoutTbprodutosInput[]
    deleteMany?: tbmovitensScalarWhereInput | tbmovitensScalarWhereInput[]
  }

  export type tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput = {
    create?: XOR<tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput> | tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[] | tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    connectOrCreate?: tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput | tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    upsert?: tbprodcomposicaoUpsertWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput | tbprodcomposicaoUpsertWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    createMany?: tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInputEnvelope
    set?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    disconnect?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    delete?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    connect?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    update?: tbprodcomposicaoUpdateWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput | tbprodcomposicaoUpdateWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    updateMany?: tbprodcomposicaoUpdateManyWithWhereWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput | tbprodcomposicaoUpdateManyWithWhereWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    deleteMany?: tbprodcomposicaoScalarWhereInput | tbprodcomposicaoScalarWhereInput[]
  }

  export type tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput = {
    create?: XOR<tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput> | tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[] | tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    connectOrCreate?: tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput | tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    upsert?: tbprodcomposicaoUpsertWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput | tbprodcomposicaoUpsertWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    createMany?: tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInputEnvelope
    set?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    disconnect?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    delete?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    connect?: tbprodcomposicaoWhereUniqueInput | tbprodcomposicaoWhereUniqueInput[]
    update?: tbprodcomposicaoUpdateWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput | tbprodcomposicaoUpdateWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    updateMany?: tbprodcomposicaoUpdateManyWithWhereWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput | tbprodcomposicaoUpdateManyWithWhereWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    deleteMany?: tbprodcomposicaoScalarWhereInput | tbprodcomposicaoScalarWhereInput[]
  }

  export type tbprodutosCreateNestedManyWithoutTbtiposprodutosInput = {
    create?: XOR<tbprodutosCreateWithoutTbtiposprodutosInput, tbprodutosUncheckedCreateWithoutTbtiposprodutosInput> | tbprodutosCreateWithoutTbtiposprodutosInput[] | tbprodutosUncheckedCreateWithoutTbtiposprodutosInput[]
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbtiposprodutosInput | tbprodutosCreateOrConnectWithoutTbtiposprodutosInput[]
    createMany?: tbprodutosCreateManyTbtiposprodutosInputEnvelope
    connect?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
  }

  export type tbprodutosUncheckedCreateNestedManyWithoutTbtiposprodutosInput = {
    create?: XOR<tbprodutosCreateWithoutTbtiposprodutosInput, tbprodutosUncheckedCreateWithoutTbtiposprodutosInput> | tbprodutosCreateWithoutTbtiposprodutosInput[] | tbprodutosUncheckedCreateWithoutTbtiposprodutosInput[]
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbtiposprodutosInput | tbprodutosCreateOrConnectWithoutTbtiposprodutosInput[]
    createMany?: tbprodutosCreateManyTbtiposprodutosInputEnvelope
    connect?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
  }

  export type tbprodutosUpdateManyWithoutTbtiposprodutosNestedInput = {
    create?: XOR<tbprodutosCreateWithoutTbtiposprodutosInput, tbprodutosUncheckedCreateWithoutTbtiposprodutosInput> | tbprodutosCreateWithoutTbtiposprodutosInput[] | tbprodutosUncheckedCreateWithoutTbtiposprodutosInput[]
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbtiposprodutosInput | tbprodutosCreateOrConnectWithoutTbtiposprodutosInput[]
    upsert?: tbprodutosUpsertWithWhereUniqueWithoutTbtiposprodutosInput | tbprodutosUpsertWithWhereUniqueWithoutTbtiposprodutosInput[]
    createMany?: tbprodutosCreateManyTbtiposprodutosInputEnvelope
    set?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    disconnect?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    delete?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    connect?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    update?: tbprodutosUpdateWithWhereUniqueWithoutTbtiposprodutosInput | tbprodutosUpdateWithWhereUniqueWithoutTbtiposprodutosInput[]
    updateMany?: tbprodutosUpdateManyWithWhereWithoutTbtiposprodutosInput | tbprodutosUpdateManyWithWhereWithoutTbtiposprodutosInput[]
    deleteMany?: tbprodutosScalarWhereInput | tbprodutosScalarWhereInput[]
  }

  export type tbprodutosUncheckedUpdateManyWithoutTbtiposprodutosNestedInput = {
    create?: XOR<tbprodutosCreateWithoutTbtiposprodutosInput, tbprodutosUncheckedCreateWithoutTbtiposprodutosInput> | tbprodutosCreateWithoutTbtiposprodutosInput[] | tbprodutosUncheckedCreateWithoutTbtiposprodutosInput[]
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbtiposprodutosInput | tbprodutosCreateOrConnectWithoutTbtiposprodutosInput[]
    upsert?: tbprodutosUpsertWithWhereUniqueWithoutTbtiposprodutosInput | tbprodutosUpsertWithWhereUniqueWithoutTbtiposprodutosInput[]
    createMany?: tbprodutosCreateManyTbtiposprodutosInputEnvelope
    set?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    disconnect?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    delete?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    connect?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    update?: tbprodutosUpdateWithWhereUniqueWithoutTbtiposprodutosInput | tbprodutosUpdateWithWhereUniqueWithoutTbtiposprodutosInput[]
    updateMany?: tbprodutosUpdateManyWithWhereWithoutTbtiposprodutosInput | tbprodutosUpdateManyWithWhereWithoutTbtiposprodutosInput[]
    deleteMany?: tbprodutosScalarWhereInput | tbprodutosScalarWhereInput[]
  }

  export type tbprodutosCreateNestedManyWithoutTbunidademedidaInput = {
    create?: XOR<tbprodutosCreateWithoutTbunidademedidaInput, tbprodutosUncheckedCreateWithoutTbunidademedidaInput> | tbprodutosCreateWithoutTbunidademedidaInput[] | tbprodutosUncheckedCreateWithoutTbunidademedidaInput[]
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbunidademedidaInput | tbprodutosCreateOrConnectWithoutTbunidademedidaInput[]
    createMany?: tbprodutosCreateManyTbunidademedidaInputEnvelope
    connect?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
  }

  export type tbprodutosUncheckedCreateNestedManyWithoutTbunidademedidaInput = {
    create?: XOR<tbprodutosCreateWithoutTbunidademedidaInput, tbprodutosUncheckedCreateWithoutTbunidademedidaInput> | tbprodutosCreateWithoutTbunidademedidaInput[] | tbprodutosUncheckedCreateWithoutTbunidademedidaInput[]
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbunidademedidaInput | tbprodutosCreateOrConnectWithoutTbunidademedidaInput[]
    createMany?: tbprodutosCreateManyTbunidademedidaInputEnvelope
    connect?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
  }

  export type tbprodutosUpdateManyWithoutTbunidademedidaNestedInput = {
    create?: XOR<tbprodutosCreateWithoutTbunidademedidaInput, tbprodutosUncheckedCreateWithoutTbunidademedidaInput> | tbprodutosCreateWithoutTbunidademedidaInput[] | tbprodutosUncheckedCreateWithoutTbunidademedidaInput[]
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbunidademedidaInput | tbprodutosCreateOrConnectWithoutTbunidademedidaInput[]
    upsert?: tbprodutosUpsertWithWhereUniqueWithoutTbunidademedidaInput | tbprodutosUpsertWithWhereUniqueWithoutTbunidademedidaInput[]
    createMany?: tbprodutosCreateManyTbunidademedidaInputEnvelope
    set?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    disconnect?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    delete?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    connect?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    update?: tbprodutosUpdateWithWhereUniqueWithoutTbunidademedidaInput | tbprodutosUpdateWithWhereUniqueWithoutTbunidademedidaInput[]
    updateMany?: tbprodutosUpdateManyWithWhereWithoutTbunidademedidaInput | tbprodutosUpdateManyWithWhereWithoutTbunidademedidaInput[]
    deleteMany?: tbprodutosScalarWhereInput | tbprodutosScalarWhereInput[]
  }

  export type tbprodutosUncheckedUpdateManyWithoutTbunidademedidaNestedInput = {
    create?: XOR<tbprodutosCreateWithoutTbunidademedidaInput, tbprodutosUncheckedCreateWithoutTbunidademedidaInput> | tbprodutosCreateWithoutTbunidademedidaInput[] | tbprodutosUncheckedCreateWithoutTbunidademedidaInput[]
    connectOrCreate?: tbprodutosCreateOrConnectWithoutTbunidademedidaInput | tbprodutosCreateOrConnectWithoutTbunidademedidaInput[]
    upsert?: tbprodutosUpsertWithWhereUniqueWithoutTbunidademedidaInput | tbprodutosUpsertWithWhereUniqueWithoutTbunidademedidaInput[]
    createMany?: tbprodutosCreateManyTbunidademedidaInputEnvelope
    set?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    disconnect?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    delete?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    connect?: tbprodutosWhereUniqueInput | tbprodutosWhereUniqueInput[]
    update?: tbprodutosUpdateWithWhereUniqueWithoutTbunidademedidaInput | tbprodutosUpdateWithWhereUniqueWithoutTbunidademedidaInput[]
    updateMany?: tbprodutosUpdateManyWithWhereWithoutTbunidademedidaInput | tbprodutosUpdateManyWithWhereWithoutTbunidademedidaInput[]
    deleteMany?: tbprodutosScalarWhereInput | tbprodutosScalarWhereInput[]
  }

  export type tbmovimentosCreateNestedManyWithoutTbusuariosInput = {
    create?: XOR<tbmovimentosCreateWithoutTbusuariosInput, tbmovimentosUncheckedCreateWithoutTbusuariosInput> | tbmovimentosCreateWithoutTbusuariosInput[] | tbmovimentosUncheckedCreateWithoutTbusuariosInput[]
    connectOrCreate?: tbmovimentosCreateOrConnectWithoutTbusuariosInput | tbmovimentosCreateOrConnectWithoutTbusuariosInput[]
    createMany?: tbmovimentosCreateManyTbusuariosInputEnvelope
    connect?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
  }

  export type tbnfCreateNestedManyWithoutTbusuariosInput = {
    create?: XOR<tbnfCreateWithoutTbusuariosInput, tbnfUncheckedCreateWithoutTbusuariosInput> | tbnfCreateWithoutTbusuariosInput[] | tbnfUncheckedCreateWithoutTbusuariosInput[]
    connectOrCreate?: tbnfCreateOrConnectWithoutTbusuariosInput | tbnfCreateOrConnectWithoutTbusuariosInput[]
    createMany?: tbnfCreateManyTbusuariosInputEnvelope
    connect?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
  }

  export type tbmovimentosUncheckedCreateNestedManyWithoutTbusuariosInput = {
    create?: XOR<tbmovimentosCreateWithoutTbusuariosInput, tbmovimentosUncheckedCreateWithoutTbusuariosInput> | tbmovimentosCreateWithoutTbusuariosInput[] | tbmovimentosUncheckedCreateWithoutTbusuariosInput[]
    connectOrCreate?: tbmovimentosCreateOrConnectWithoutTbusuariosInput | tbmovimentosCreateOrConnectWithoutTbusuariosInput[]
    createMany?: tbmovimentosCreateManyTbusuariosInputEnvelope
    connect?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
  }

  export type tbnfUncheckedCreateNestedManyWithoutTbusuariosInput = {
    create?: XOR<tbnfCreateWithoutTbusuariosInput, tbnfUncheckedCreateWithoutTbusuariosInput> | tbnfCreateWithoutTbusuariosInput[] | tbnfUncheckedCreateWithoutTbusuariosInput[]
    connectOrCreate?: tbnfCreateOrConnectWithoutTbusuariosInput | tbnfCreateOrConnectWithoutTbusuariosInput[]
    createMany?: tbnfCreateManyTbusuariosInputEnvelope
    connect?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type tbmovimentosUpdateManyWithoutTbusuariosNestedInput = {
    create?: XOR<tbmovimentosCreateWithoutTbusuariosInput, tbmovimentosUncheckedCreateWithoutTbusuariosInput> | tbmovimentosCreateWithoutTbusuariosInput[] | tbmovimentosUncheckedCreateWithoutTbusuariosInput[]
    connectOrCreate?: tbmovimentosCreateOrConnectWithoutTbusuariosInput | tbmovimentosCreateOrConnectWithoutTbusuariosInput[]
    upsert?: tbmovimentosUpsertWithWhereUniqueWithoutTbusuariosInput | tbmovimentosUpsertWithWhereUniqueWithoutTbusuariosInput[]
    createMany?: tbmovimentosCreateManyTbusuariosInputEnvelope
    set?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    disconnect?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    delete?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    connect?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    update?: tbmovimentosUpdateWithWhereUniqueWithoutTbusuariosInput | tbmovimentosUpdateWithWhereUniqueWithoutTbusuariosInput[]
    updateMany?: tbmovimentosUpdateManyWithWhereWithoutTbusuariosInput | tbmovimentosUpdateManyWithWhereWithoutTbusuariosInput[]
    deleteMany?: tbmovimentosScalarWhereInput | tbmovimentosScalarWhereInput[]
  }

  export type tbnfUpdateManyWithoutTbusuariosNestedInput = {
    create?: XOR<tbnfCreateWithoutTbusuariosInput, tbnfUncheckedCreateWithoutTbusuariosInput> | tbnfCreateWithoutTbusuariosInput[] | tbnfUncheckedCreateWithoutTbusuariosInput[]
    connectOrCreate?: tbnfCreateOrConnectWithoutTbusuariosInput | tbnfCreateOrConnectWithoutTbusuariosInput[]
    upsert?: tbnfUpsertWithWhereUniqueWithoutTbusuariosInput | tbnfUpsertWithWhereUniqueWithoutTbusuariosInput[]
    createMany?: tbnfCreateManyTbusuariosInputEnvelope
    set?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    disconnect?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    delete?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    connect?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    update?: tbnfUpdateWithWhereUniqueWithoutTbusuariosInput | tbnfUpdateWithWhereUniqueWithoutTbusuariosInput[]
    updateMany?: tbnfUpdateManyWithWhereWithoutTbusuariosInput | tbnfUpdateManyWithWhereWithoutTbusuariosInput[]
    deleteMany?: tbnfScalarWhereInput | tbnfScalarWhereInput[]
  }

  export type tbmovimentosUncheckedUpdateManyWithoutTbusuariosNestedInput = {
    create?: XOR<tbmovimentosCreateWithoutTbusuariosInput, tbmovimentosUncheckedCreateWithoutTbusuariosInput> | tbmovimentosCreateWithoutTbusuariosInput[] | tbmovimentosUncheckedCreateWithoutTbusuariosInput[]
    connectOrCreate?: tbmovimentosCreateOrConnectWithoutTbusuariosInput | tbmovimentosCreateOrConnectWithoutTbusuariosInput[]
    upsert?: tbmovimentosUpsertWithWhereUniqueWithoutTbusuariosInput | tbmovimentosUpsertWithWhereUniqueWithoutTbusuariosInput[]
    createMany?: tbmovimentosCreateManyTbusuariosInputEnvelope
    set?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    disconnect?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    delete?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    connect?: tbmovimentosWhereUniqueInput | tbmovimentosWhereUniqueInput[]
    update?: tbmovimentosUpdateWithWhereUniqueWithoutTbusuariosInput | tbmovimentosUpdateWithWhereUniqueWithoutTbusuariosInput[]
    updateMany?: tbmovimentosUpdateManyWithWhereWithoutTbusuariosInput | tbmovimentosUpdateManyWithWhereWithoutTbusuariosInput[]
    deleteMany?: tbmovimentosScalarWhereInput | tbmovimentosScalarWhereInput[]
  }

  export type tbnfUncheckedUpdateManyWithoutTbusuariosNestedInput = {
    create?: XOR<tbnfCreateWithoutTbusuariosInput, tbnfUncheckedCreateWithoutTbusuariosInput> | tbnfCreateWithoutTbusuariosInput[] | tbnfUncheckedCreateWithoutTbusuariosInput[]
    connectOrCreate?: tbnfCreateOrConnectWithoutTbusuariosInput | tbnfCreateOrConnectWithoutTbusuariosInput[]
    upsert?: tbnfUpsertWithWhereUniqueWithoutTbusuariosInput | tbnfUpsertWithWhereUniqueWithoutTbusuariosInput[]
    createMany?: tbnfCreateManyTbusuariosInputEnvelope
    set?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    disconnect?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    delete?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    connect?: tbnfWhereUniqueInput | tbnfWhereUniqueInput[]
    update?: tbnfUpdateWithWhereUniqueWithoutTbusuariosInput | tbnfUpdateWithWhereUniqueWithoutTbusuariosInput[]
    updateMany?: tbnfUpdateManyWithWhereWithoutTbusuariosInput | tbnfUpdateManyWithWhereWithoutTbusuariosInput[]
    deleteMany?: tbnfScalarWhereInput | tbnfScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type tblocaisCreateWithoutTbestoqueInput = {
    nomelocal?: string | null
    tbmovitens?: tbmovitensCreateNestedManyWithoutTblocaisInput
  }

  export type tblocaisUncheckedCreateWithoutTbestoqueInput = {
    idlocal?: number
    nomelocal?: string | null
    tbmovitens?: tbmovitensUncheckedCreateNestedManyWithoutTblocaisInput
  }

  export type tblocaisCreateOrConnectWithoutTbestoqueInput = {
    where: tblocaisWhereUniqueInput
    create: XOR<tblocaisCreateWithoutTbestoqueInput, tblocaisUncheckedCreateWithoutTbestoqueInput>
  }

  export type tbprodutosCreateWithoutTbestoqueInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbmovitens?: tbmovitensCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput
    tbtiposprodutos?: tbtiposprodutosCreateNestedOneWithoutTbprodutosInput
    tbunidademedida?: tbunidademedidaCreateNestedOneWithoutTbprodutosInput
  }

  export type tbprodutosUncheckedCreateWithoutTbestoqueInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    idunidade?: number | null
    quantminima?: number | null
    tbmovitens?: tbmovitensUncheckedCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput
  }

  export type tbprodutosCreateOrConnectWithoutTbestoqueInput = {
    where: tbprodutosWhereUniqueInput
    create: XOR<tbprodutosCreateWithoutTbestoqueInput, tbprodutosUncheckedCreateWithoutTbestoqueInput>
  }

  export type tblocaisUpsertWithoutTbestoqueInput = {
    update: XOR<tblocaisUpdateWithoutTbestoqueInput, tblocaisUncheckedUpdateWithoutTbestoqueInput>
    create: XOR<tblocaisCreateWithoutTbestoqueInput, tblocaisUncheckedCreateWithoutTbestoqueInput>
    where?: tblocaisWhereInput
  }

  export type tblocaisUpdateToOneWithWhereWithoutTbestoqueInput = {
    where?: tblocaisWhereInput
    data: XOR<tblocaisUpdateWithoutTbestoqueInput, tblocaisUncheckedUpdateWithoutTbestoqueInput>
  }

  export type tblocaisUpdateWithoutTbestoqueInput = {
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
    tbmovitens?: tbmovitensUpdateManyWithoutTblocaisNestedInput
  }

  export type tblocaisUncheckedUpdateWithoutTbestoqueInput = {
    idlocal?: IntFieldUpdateOperationsInput | number
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
    tbmovitens?: tbmovitensUncheckedUpdateManyWithoutTblocaisNestedInput
  }

  export type tbprodutosUpsertWithoutTbestoqueInput = {
    update: XOR<tbprodutosUpdateWithoutTbestoqueInput, tbprodutosUncheckedUpdateWithoutTbestoqueInput>
    create: XOR<tbprodutosCreateWithoutTbestoqueInput, tbprodutosUncheckedCreateWithoutTbestoqueInput>
    where?: tbprodutosWhereInput
  }

  export type tbprodutosUpdateToOneWithWhereWithoutTbestoqueInput = {
    where?: tbprodutosWhereInput
    data: XOR<tbprodutosUpdateWithoutTbestoqueInput, tbprodutosUncheckedUpdateWithoutTbestoqueInput>
  }

  export type tbprodutosUpdateWithoutTbestoqueInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbmovitens?: tbmovitensUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
    tbtiposprodutos?: tbtiposprodutosUpdateOneWithoutTbprodutosNestedInput
    tbunidademedida?: tbunidademedidaUpdateOneWithoutTbprodutosNestedInput
  }

  export type tbprodutosUncheckedUpdateWithoutTbestoqueInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbmovitens?: tbmovitensUncheckedUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
  }

  export type tbmovimentosCreateWithoutTbfornecedoresInput = {
    tipmov?: string | null
    dtinc?: Date | string | null
    tbusuarios?: tbusuariosCreateNestedOneWithoutTbmovimentosInput
    tbmovitens?: tbmovitensCreateNestedManyWithoutTbmovimentosInput
    tbnf?: tbnfCreateNestedOneWithoutTbmovimentosInput
  }

  export type tbmovimentosUncheckedCreateWithoutTbfornecedoresInput = {
    idmovimento?: number
    tipmov?: string | null
    idusuario_alteracao?: number | null
    dtinc?: Date | string | null
    tbmovitens?: tbmovitensUncheckedCreateNestedManyWithoutTbmovimentosInput
    tbnf?: tbnfUncheckedCreateNestedOneWithoutTbmovimentosInput
  }

  export type tbmovimentosCreateOrConnectWithoutTbfornecedoresInput = {
    where: tbmovimentosWhereUniqueInput
    create: XOR<tbmovimentosCreateWithoutTbfornecedoresInput, tbmovimentosUncheckedCreateWithoutTbfornecedoresInput>
  }

  export type tbmovimentosCreateManyTbfornecedoresInputEnvelope = {
    data: tbmovimentosCreateManyTbfornecedoresInput | tbmovimentosCreateManyTbfornecedoresInput[]
    skipDuplicates?: boolean
  }

  export type tbnfCreateWithoutTbfornecedoresInput = {
    numnf?: number | null
    serienf?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
    tbmovimentos?: tbmovimentosCreateNestedOneWithoutTbnfInput
    tbusuarios?: tbusuariosCreateNestedOneWithoutTbnfInput
    tbnfitens?: tbnfitensCreateNestedManyWithoutTbnfInput
  }

  export type tbnfUncheckedCreateWithoutTbfornecedoresInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idusuario_inclusao?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
    tbnfitens?: tbnfitensUncheckedCreateNestedManyWithoutTbnfInput
  }

  export type tbnfCreateOrConnectWithoutTbfornecedoresInput = {
    where: tbnfWhereUniqueInput
    create: XOR<tbnfCreateWithoutTbfornecedoresInput, tbnfUncheckedCreateWithoutTbfornecedoresInput>
  }

  export type tbnfCreateManyTbfornecedoresInputEnvelope = {
    data: tbnfCreateManyTbfornecedoresInput | tbnfCreateManyTbfornecedoresInput[]
    skipDuplicates?: boolean
  }

  export type tbmovimentosUpsertWithWhereUniqueWithoutTbfornecedoresInput = {
    where: tbmovimentosWhereUniqueInput
    update: XOR<tbmovimentosUpdateWithoutTbfornecedoresInput, tbmovimentosUncheckedUpdateWithoutTbfornecedoresInput>
    create: XOR<tbmovimentosCreateWithoutTbfornecedoresInput, tbmovimentosUncheckedCreateWithoutTbfornecedoresInput>
  }

  export type tbmovimentosUpdateWithWhereUniqueWithoutTbfornecedoresInput = {
    where: tbmovimentosWhereUniqueInput
    data: XOR<tbmovimentosUpdateWithoutTbfornecedoresInput, tbmovimentosUncheckedUpdateWithoutTbfornecedoresInput>
  }

  export type tbmovimentosUpdateManyWithWhereWithoutTbfornecedoresInput = {
    where: tbmovimentosScalarWhereInput
    data: XOR<tbmovimentosUpdateManyMutationInput, tbmovimentosUncheckedUpdateManyWithoutTbfornecedoresInput>
  }

  export type tbmovimentosScalarWhereInput = {
    AND?: tbmovimentosScalarWhereInput | tbmovimentosScalarWhereInput[]
    OR?: tbmovimentosScalarWhereInput[]
    NOT?: tbmovimentosScalarWhereInput | tbmovimentosScalarWhereInput[]
    idmovimento?: IntFilter<"tbmovimentos"> | number
    tipmov?: StringNullableFilter<"tbmovimentos"> | string | null
    idfor?: IntNullableFilter<"tbmovimentos"> | number | null
    idusuario_alteracao?: IntNullableFilter<"tbmovimentos"> | number | null
    dtinc?: DateTimeNullableFilter<"tbmovimentos"> | Date | string | null
  }

  export type tbnfUpsertWithWhereUniqueWithoutTbfornecedoresInput = {
    where: tbnfWhereUniqueInput
    update: XOR<tbnfUpdateWithoutTbfornecedoresInput, tbnfUncheckedUpdateWithoutTbfornecedoresInput>
    create: XOR<tbnfCreateWithoutTbfornecedoresInput, tbnfUncheckedCreateWithoutTbfornecedoresInput>
  }

  export type tbnfUpdateWithWhereUniqueWithoutTbfornecedoresInput = {
    where: tbnfWhereUniqueInput
    data: XOR<tbnfUpdateWithoutTbfornecedoresInput, tbnfUncheckedUpdateWithoutTbfornecedoresInput>
  }

  export type tbnfUpdateManyWithWhereWithoutTbfornecedoresInput = {
    where: tbnfScalarWhereInput
    data: XOR<tbnfUpdateManyMutationInput, tbnfUncheckedUpdateManyWithoutTbfornecedoresInput>
  }

  export type tbnfScalarWhereInput = {
    AND?: tbnfScalarWhereInput | tbnfScalarWhereInput[]
    OR?: tbnfScalarWhereInput[]
    NOT?: tbnfScalarWhereInput | tbnfScalarWhereInput[]
    idnf?: IntFilter<"tbnf"> | number
    numnf?: IntNullableFilter<"tbnf"> | number | null
    idmovimento?: IntNullableFilter<"tbnf"> | number | null
    serienf?: IntNullableFilter<"tbnf"> | number | null
    idfor?: IntNullableFilter<"tbnf"> | number | null
    idusuario_inclusao?: IntNullableFilter<"tbnf"> | number | null
    dtemissao?: DateTimeNullableFilter<"tbnf"> | Date | string | null
    vlrtotal?: DecimalNullableFilter<"tbnf"> | Decimal | DecimalJsLike | number | string | null
    observacao?: StringNullableFilter<"tbnf"> | string | null
  }

  export type tbestoqueCreateWithoutTblocaisInput = {
    idestoque?: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
    tbprodutos: tbprodutosCreateNestedOneWithoutTbestoqueInput
  }

  export type tbestoqueUncheckedCreateWithoutTblocaisInput = {
    idestoque?: number
    idproduto: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
  }

  export type tbestoqueCreateOrConnectWithoutTblocaisInput = {
    where: tbestoqueWhereUniqueInput
    create: XOR<tbestoqueCreateWithoutTblocaisInput, tbestoqueUncheckedCreateWithoutTblocaisInput>
  }

  export type tbestoqueCreateManyTblocaisInputEnvelope = {
    data: tbestoqueCreateManyTblocaisInput | tbestoqueCreateManyTblocaisInput[]
    skipDuplicates?: boolean
  }

  export type tbmovitensCreateWithoutTblocaisInput = {
    seqitem?: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbmovimentos: tbmovimentosCreateNestedOneWithoutTbmovitensInput
    tbprodutos: tbprodutosCreateNestedOneWithoutTbmovitensInput
    tbnfitens?: tbnfitensCreateNestedManyWithoutTbmovitensInput
  }

  export type tbmovitensUncheckedCreateWithoutTblocaisInput = {
    idmovimento: number
    seqitem?: number
    idproduto: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbnfitens?: tbnfitensUncheckedCreateNestedManyWithoutTbmovitensInput
  }

  export type tbmovitensCreateOrConnectWithoutTblocaisInput = {
    where: tbmovitensWhereUniqueInput
    create: XOR<tbmovitensCreateWithoutTblocaisInput, tbmovitensUncheckedCreateWithoutTblocaisInput>
  }

  export type tbmovitensCreateManyTblocaisInputEnvelope = {
    data: tbmovitensCreateManyTblocaisInput | tbmovitensCreateManyTblocaisInput[]
    skipDuplicates?: boolean
  }

  export type tbestoqueUpsertWithWhereUniqueWithoutTblocaisInput = {
    where: tbestoqueWhereUniqueInput
    update: XOR<tbestoqueUpdateWithoutTblocaisInput, tbestoqueUncheckedUpdateWithoutTblocaisInput>
    create: XOR<tbestoqueCreateWithoutTblocaisInput, tbestoqueUncheckedCreateWithoutTblocaisInput>
  }

  export type tbestoqueUpdateWithWhereUniqueWithoutTblocaisInput = {
    where: tbestoqueWhereUniqueInput
    data: XOR<tbestoqueUpdateWithoutTblocaisInput, tbestoqueUncheckedUpdateWithoutTblocaisInput>
  }

  export type tbestoqueUpdateManyWithWhereWithoutTblocaisInput = {
    where: tbestoqueScalarWhereInput
    data: XOR<tbestoqueUpdateManyMutationInput, tbestoqueUncheckedUpdateManyWithoutTblocaisInput>
  }

  export type tbestoqueScalarWhereInput = {
    AND?: tbestoqueScalarWhereInput | tbestoqueScalarWhereInput[]
    OR?: tbestoqueScalarWhereInput[]
    NOT?: tbestoqueScalarWhereInput | tbestoqueScalarWhereInput[]
    idestoque?: IntFilter<"tbestoque"> | number
    idproduto?: IntFilter<"tbestoque"> | number
    idlocal?: IntNullableFilter<"tbestoque"> | number | null
    quantidade?: DecimalNullableFilter<"tbestoque"> | Decimal | DecimalJsLike | number | string | null
    dtinc?: DateTimeNullableFilter<"tbestoque"> | Date | string | null
  }

  export type tbmovitensUpsertWithWhereUniqueWithoutTblocaisInput = {
    where: tbmovitensWhereUniqueInput
    update: XOR<tbmovitensUpdateWithoutTblocaisInput, tbmovitensUncheckedUpdateWithoutTblocaisInput>
    create: XOR<tbmovitensCreateWithoutTblocaisInput, tbmovitensUncheckedCreateWithoutTblocaisInput>
  }

  export type tbmovitensUpdateWithWhereUniqueWithoutTblocaisInput = {
    where: tbmovitensWhereUniqueInput
    data: XOR<tbmovitensUpdateWithoutTblocaisInput, tbmovitensUncheckedUpdateWithoutTblocaisInput>
  }

  export type tbmovitensUpdateManyWithWhereWithoutTblocaisInput = {
    where: tbmovitensScalarWhereInput
    data: XOR<tbmovitensUpdateManyMutationInput, tbmovitensUncheckedUpdateManyWithoutTblocaisInput>
  }

  export type tbmovitensScalarWhereInput = {
    AND?: tbmovitensScalarWhereInput | tbmovitensScalarWhereInput[]
    OR?: tbmovitensScalarWhereInput[]
    NOT?: tbmovitensScalarWhereInput | tbmovitensScalarWhereInput[]
    idmovimento?: IntFilter<"tbmovitens"> | number
    seqitem?: IntFilter<"tbmovitens"> | number
    idproduto?: IntFilter<"tbmovitens"> | number
    idlocal?: IntNullableFilter<"tbmovitens"> | number | null
    dtinc?: DateTimeNullableFilter<"tbmovitens"> | Date | string | null
    quantidade?: DecimalNullableFilter<"tbmovitens"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbfornecedoresCreateWithoutTbmovimentosInput = {
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
    tbnf?: tbnfCreateNestedManyWithoutTbfornecedoresInput
  }

  export type tbfornecedoresUncheckedCreateWithoutTbmovimentosInput = {
    idfor?: number
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
    tbnf?: tbnfUncheckedCreateNestedManyWithoutTbfornecedoresInput
  }

  export type tbfornecedoresCreateOrConnectWithoutTbmovimentosInput = {
    where: tbfornecedoresWhereUniqueInput
    create: XOR<tbfornecedoresCreateWithoutTbmovimentosInput, tbfornecedoresUncheckedCreateWithoutTbmovimentosInput>
  }

  export type tbusuariosCreateWithoutTbmovimentosInput = {
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
    tbnf?: tbnfCreateNestedManyWithoutTbusuariosInput
  }

  export type tbusuariosUncheckedCreateWithoutTbmovimentosInput = {
    idusuario?: number
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
    tbnf?: tbnfUncheckedCreateNestedManyWithoutTbusuariosInput
  }

  export type tbusuariosCreateOrConnectWithoutTbmovimentosInput = {
    where: tbusuariosWhereUniqueInput
    create: XOR<tbusuariosCreateWithoutTbmovimentosInput, tbusuariosUncheckedCreateWithoutTbmovimentosInput>
  }

  export type tbmovitensCreateWithoutTbmovimentosInput = {
    seqitem?: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tblocais?: tblocaisCreateNestedOneWithoutTbmovitensInput
    tbprodutos: tbprodutosCreateNestedOneWithoutTbmovitensInput
    tbnfitens?: tbnfitensCreateNestedManyWithoutTbmovitensInput
  }

  export type tbmovitensUncheckedCreateWithoutTbmovimentosInput = {
    seqitem?: number
    idproduto: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbnfitens?: tbnfitensUncheckedCreateNestedManyWithoutTbmovitensInput
  }

  export type tbmovitensCreateOrConnectWithoutTbmovimentosInput = {
    where: tbmovitensWhereUniqueInput
    create: XOR<tbmovitensCreateWithoutTbmovimentosInput, tbmovitensUncheckedCreateWithoutTbmovimentosInput>
  }

  export type tbmovitensCreateManyTbmovimentosInputEnvelope = {
    data: tbmovitensCreateManyTbmovimentosInput | tbmovitensCreateManyTbmovimentosInput[]
    skipDuplicates?: boolean
  }

  export type tbnfCreateWithoutTbmovimentosInput = {
    numnf?: number | null
    serienf?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
    tbfornecedores?: tbfornecedoresCreateNestedOneWithoutTbnfInput
    tbusuarios?: tbusuariosCreateNestedOneWithoutTbnfInput
    tbnfitens?: tbnfitensCreateNestedManyWithoutTbnfInput
  }

  export type tbnfUncheckedCreateWithoutTbmovimentosInput = {
    idnf?: number
    numnf?: number | null
    serienf?: number | null
    idfor?: number | null
    idusuario_inclusao?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
    tbnfitens?: tbnfitensUncheckedCreateNestedManyWithoutTbnfInput
  }

  export type tbnfCreateOrConnectWithoutTbmovimentosInput = {
    where: tbnfWhereUniqueInput
    create: XOR<tbnfCreateWithoutTbmovimentosInput, tbnfUncheckedCreateWithoutTbmovimentosInput>
  }

  export type tbfornecedoresUpsertWithoutTbmovimentosInput = {
    update: XOR<tbfornecedoresUpdateWithoutTbmovimentosInput, tbfornecedoresUncheckedUpdateWithoutTbmovimentosInput>
    create: XOR<tbfornecedoresCreateWithoutTbmovimentosInput, tbfornecedoresUncheckedCreateWithoutTbmovimentosInput>
    where?: tbfornecedoresWhereInput
  }

  export type tbfornecedoresUpdateToOneWithWhereWithoutTbmovimentosInput = {
    where?: tbfornecedoresWhereInput
    data: XOR<tbfornecedoresUpdateWithoutTbmovimentosInput, tbfornecedoresUncheckedUpdateWithoutTbmovimentosInput>
  }

  export type tbfornecedoresUpdateWithoutTbmovimentosInput = {
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    tbnf?: tbnfUpdateManyWithoutTbfornecedoresNestedInput
  }

  export type tbfornecedoresUncheckedUpdateWithoutTbmovimentosInput = {
    idfor?: IntFieldUpdateOperationsInput | number
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    tbnf?: tbnfUncheckedUpdateManyWithoutTbfornecedoresNestedInput
  }

  export type tbusuariosUpsertWithoutTbmovimentosInput = {
    update: XOR<tbusuariosUpdateWithoutTbmovimentosInput, tbusuariosUncheckedUpdateWithoutTbmovimentosInput>
    create: XOR<tbusuariosCreateWithoutTbmovimentosInput, tbusuariosUncheckedCreateWithoutTbmovimentosInput>
    where?: tbusuariosWhereInput
  }

  export type tbusuariosUpdateToOneWithWhereWithoutTbmovimentosInput = {
    where?: tbusuariosWhereInput
    data: XOR<tbusuariosUpdateWithoutTbmovimentosInput, tbusuariosUncheckedUpdateWithoutTbmovimentosInput>
  }

  export type tbusuariosUpdateWithoutTbmovimentosInput = {
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbnf?: tbnfUpdateManyWithoutTbusuariosNestedInput
  }

  export type tbusuariosUncheckedUpdateWithoutTbmovimentosInput = {
    idusuario?: IntFieldUpdateOperationsInput | number
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbnf?: tbnfUncheckedUpdateManyWithoutTbusuariosNestedInput
  }

  export type tbmovitensUpsertWithWhereUniqueWithoutTbmovimentosInput = {
    where: tbmovitensWhereUniqueInput
    update: XOR<tbmovitensUpdateWithoutTbmovimentosInput, tbmovitensUncheckedUpdateWithoutTbmovimentosInput>
    create: XOR<tbmovitensCreateWithoutTbmovimentosInput, tbmovitensUncheckedCreateWithoutTbmovimentosInput>
  }

  export type tbmovitensUpdateWithWhereUniqueWithoutTbmovimentosInput = {
    where: tbmovitensWhereUniqueInput
    data: XOR<tbmovitensUpdateWithoutTbmovimentosInput, tbmovitensUncheckedUpdateWithoutTbmovimentosInput>
  }

  export type tbmovitensUpdateManyWithWhereWithoutTbmovimentosInput = {
    where: tbmovitensScalarWhereInput
    data: XOR<tbmovitensUpdateManyMutationInput, tbmovitensUncheckedUpdateManyWithoutTbmovimentosInput>
  }

  export type tbnfUpsertWithoutTbmovimentosInput = {
    update: XOR<tbnfUpdateWithoutTbmovimentosInput, tbnfUncheckedUpdateWithoutTbmovimentosInput>
    create: XOR<tbnfCreateWithoutTbmovimentosInput, tbnfUncheckedCreateWithoutTbmovimentosInput>
    where?: tbnfWhereInput
  }

  export type tbnfUpdateToOneWithWhereWithoutTbmovimentosInput = {
    where?: tbnfWhereInput
    data: XOR<tbnfUpdateWithoutTbmovimentosInput, tbnfUncheckedUpdateWithoutTbmovimentosInput>
  }

  export type tbnfUpdateWithoutTbmovimentosInput = {
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    tbfornecedores?: tbfornecedoresUpdateOneWithoutTbnfNestedInput
    tbusuarios?: tbusuariosUpdateOneWithoutTbnfNestedInput
    tbnfitens?: tbnfitensUpdateManyWithoutTbnfNestedInput
  }

  export type tbnfUncheckedUpdateWithoutTbmovimentosInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_inclusao?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    tbnfitens?: tbnfitensUncheckedUpdateManyWithoutTbnfNestedInput
  }

  export type tblocaisCreateWithoutTbmovitensInput = {
    nomelocal?: string | null
    tbestoque?: tbestoqueCreateNestedManyWithoutTblocaisInput
  }

  export type tblocaisUncheckedCreateWithoutTbmovitensInput = {
    idlocal?: number
    nomelocal?: string | null
    tbestoque?: tbestoqueUncheckedCreateNestedManyWithoutTblocaisInput
  }

  export type tblocaisCreateOrConnectWithoutTbmovitensInput = {
    where: tblocaisWhereUniqueInput
    create: XOR<tblocaisCreateWithoutTbmovitensInput, tblocaisUncheckedCreateWithoutTbmovitensInput>
  }

  export type tbmovimentosCreateWithoutTbmovitensInput = {
    tipmov?: string | null
    dtinc?: Date | string | null
    tbfornecedores?: tbfornecedoresCreateNestedOneWithoutTbmovimentosInput
    tbusuarios?: tbusuariosCreateNestedOneWithoutTbmovimentosInput
    tbnf?: tbnfCreateNestedOneWithoutTbmovimentosInput
  }

  export type tbmovimentosUncheckedCreateWithoutTbmovitensInput = {
    idmovimento?: number
    tipmov?: string | null
    idfor?: number | null
    idusuario_alteracao?: number | null
    dtinc?: Date | string | null
    tbnf?: tbnfUncheckedCreateNestedOneWithoutTbmovimentosInput
  }

  export type tbmovimentosCreateOrConnectWithoutTbmovitensInput = {
    where: tbmovimentosWhereUniqueInput
    create: XOR<tbmovimentosCreateWithoutTbmovitensInput, tbmovimentosUncheckedCreateWithoutTbmovitensInput>
  }

  export type tbprodutosCreateWithoutTbmovitensInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbestoque?: tbestoqueCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput
    tbtiposprodutos?: tbtiposprodutosCreateNestedOneWithoutTbprodutosInput
    tbunidademedida?: tbunidademedidaCreateNestedOneWithoutTbprodutosInput
  }

  export type tbprodutosUncheckedCreateWithoutTbmovitensInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    idunidade?: number | null
    quantminima?: number | null
    tbestoque?: tbestoqueUncheckedCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput
  }

  export type tbprodutosCreateOrConnectWithoutTbmovitensInput = {
    where: tbprodutosWhereUniqueInput
    create: XOR<tbprodutosCreateWithoutTbmovitensInput, tbprodutosUncheckedCreateWithoutTbmovitensInput>
  }

  export type tbnfitensCreateWithoutTbmovitensInput = {
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
    tbnf: tbnfCreateNestedOneWithoutTbnfitensInput
  }

  export type tbnfitensUncheckedCreateWithoutTbmovitensInput = {
    idnf: number
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfitensCreateOrConnectWithoutTbmovitensInput = {
    where: tbnfitensWhereUniqueInput
    create: XOR<tbnfitensCreateWithoutTbmovitensInput, tbnfitensUncheckedCreateWithoutTbmovitensInput>
  }

  export type tbnfitensCreateManyTbmovitensInputEnvelope = {
    data: tbnfitensCreateManyTbmovitensInput | tbnfitensCreateManyTbmovitensInput[]
    skipDuplicates?: boolean
  }

  export type tblocaisUpsertWithoutTbmovitensInput = {
    update: XOR<tblocaisUpdateWithoutTbmovitensInput, tblocaisUncheckedUpdateWithoutTbmovitensInput>
    create: XOR<tblocaisCreateWithoutTbmovitensInput, tblocaisUncheckedCreateWithoutTbmovitensInput>
    where?: tblocaisWhereInput
  }

  export type tblocaisUpdateToOneWithWhereWithoutTbmovitensInput = {
    where?: tblocaisWhereInput
    data: XOR<tblocaisUpdateWithoutTbmovitensInput, tblocaisUncheckedUpdateWithoutTbmovitensInput>
  }

  export type tblocaisUpdateWithoutTbmovitensInput = {
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
    tbestoque?: tbestoqueUpdateManyWithoutTblocaisNestedInput
  }

  export type tblocaisUncheckedUpdateWithoutTbmovitensInput = {
    idlocal?: IntFieldUpdateOperationsInput | number
    nomelocal?: NullableStringFieldUpdateOperationsInput | string | null
    tbestoque?: tbestoqueUncheckedUpdateManyWithoutTblocaisNestedInput
  }

  export type tbmovimentosUpsertWithoutTbmovitensInput = {
    update: XOR<tbmovimentosUpdateWithoutTbmovitensInput, tbmovimentosUncheckedUpdateWithoutTbmovitensInput>
    create: XOR<tbmovimentosCreateWithoutTbmovitensInput, tbmovimentosUncheckedCreateWithoutTbmovitensInput>
    where?: tbmovimentosWhereInput
  }

  export type tbmovimentosUpdateToOneWithWhereWithoutTbmovitensInput = {
    where?: tbmovimentosWhereInput
    data: XOR<tbmovimentosUpdateWithoutTbmovitensInput, tbmovimentosUncheckedUpdateWithoutTbmovitensInput>
  }

  export type tbmovimentosUpdateWithoutTbmovitensInput = {
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbfornecedores?: tbfornecedoresUpdateOneWithoutTbmovimentosNestedInput
    tbusuarios?: tbusuariosUpdateOneWithoutTbmovimentosNestedInput
    tbnf?: tbnfUpdateOneWithoutTbmovimentosNestedInput
  }

  export type tbmovimentosUncheckedUpdateWithoutTbmovitensInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_alteracao?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbnf?: tbnfUncheckedUpdateOneWithoutTbmovimentosNestedInput
  }

  export type tbprodutosUpsertWithoutTbmovitensInput = {
    update: XOR<tbprodutosUpdateWithoutTbmovitensInput, tbprodutosUncheckedUpdateWithoutTbmovitensInput>
    create: XOR<tbprodutosCreateWithoutTbmovitensInput, tbprodutosUncheckedCreateWithoutTbmovitensInput>
    where?: tbprodutosWhereInput
  }

  export type tbprodutosUpdateToOneWithWhereWithoutTbmovitensInput = {
    where?: tbprodutosWhereInput
    data: XOR<tbprodutosUpdateWithoutTbmovitensInput, tbprodutosUncheckedUpdateWithoutTbmovitensInput>
  }

  export type tbprodutosUpdateWithoutTbmovitensInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbestoque?: tbestoqueUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
    tbtiposprodutos?: tbtiposprodutosUpdateOneWithoutTbprodutosNestedInput
    tbunidademedida?: tbunidademedidaUpdateOneWithoutTbprodutosNestedInput
  }

  export type tbprodutosUncheckedUpdateWithoutTbmovitensInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbestoque?: tbestoqueUncheckedUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
  }

  export type tbnfitensUpsertWithWhereUniqueWithoutTbmovitensInput = {
    where: tbnfitensWhereUniqueInput
    update: XOR<tbnfitensUpdateWithoutTbmovitensInput, tbnfitensUncheckedUpdateWithoutTbmovitensInput>
    create: XOR<tbnfitensCreateWithoutTbmovitensInput, tbnfitensUncheckedCreateWithoutTbmovitensInput>
  }

  export type tbnfitensUpdateWithWhereUniqueWithoutTbmovitensInput = {
    where: tbnfitensWhereUniqueInput
    data: XOR<tbnfitensUpdateWithoutTbmovitensInput, tbnfitensUncheckedUpdateWithoutTbmovitensInput>
  }

  export type tbnfitensUpdateManyWithWhereWithoutTbmovitensInput = {
    where: tbnfitensScalarWhereInput
    data: XOR<tbnfitensUpdateManyMutationInput, tbnfitensUncheckedUpdateManyWithoutTbmovitensInput>
  }

  export type tbnfitensScalarWhereInput = {
    AND?: tbnfitensScalarWhereInput | tbnfitensScalarWhereInput[]
    OR?: tbnfitensScalarWhereInput[]
    NOT?: tbnfitensScalarWhereInput | tbnfitensScalarWhereInput[]
    idnf?: IntFilter<"tbnfitens"> | number
    idmovimento?: IntNullableFilter<"tbnfitens"> | number | null
    seqitem?: IntFilter<"tbnfitens"> | number
    idproduto?: IntFilter<"tbnfitens"> | number
    vlrunitario?: DecimalNullableFilter<"tbnfitens"> | Decimal | DecimalJsLike | number | string | null
    quantidade?: DecimalNullableFilter<"tbnfitens"> | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: DecimalNullableFilter<"tbnfitens"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbmovimentosCreateWithoutTbnfInput = {
    tipmov?: string | null
    dtinc?: Date | string | null
    tbfornecedores?: tbfornecedoresCreateNestedOneWithoutTbmovimentosInput
    tbusuarios?: tbusuariosCreateNestedOneWithoutTbmovimentosInput
    tbmovitens?: tbmovitensCreateNestedManyWithoutTbmovimentosInput
  }

  export type tbmovimentosUncheckedCreateWithoutTbnfInput = {
    idmovimento?: number
    tipmov?: string | null
    idfor?: number | null
    idusuario_alteracao?: number | null
    dtinc?: Date | string | null
    tbmovitens?: tbmovitensUncheckedCreateNestedManyWithoutTbmovimentosInput
  }

  export type tbmovimentosCreateOrConnectWithoutTbnfInput = {
    where: tbmovimentosWhereUniqueInput
    create: XOR<tbmovimentosCreateWithoutTbnfInput, tbmovimentosUncheckedCreateWithoutTbnfInput>
  }

  export type tbfornecedoresCreateWithoutTbnfInput = {
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
    tbmovimentos?: tbmovimentosCreateNestedManyWithoutTbfornecedoresInput
  }

  export type tbfornecedoresUncheckedCreateWithoutTbnfInput = {
    idfor?: number
    nomefor?: string | null
    fisjur?: string | null
    cnpjcpf?: string | null
    telefone?: string | null
    cep?: string | null
    cidade?: string | null
    rua?: string | null
    bairro?: string | null
    numero?: number | null
    complemento?: string | null
    email?: string | null
    tbmovimentos?: tbmovimentosUncheckedCreateNestedManyWithoutTbfornecedoresInput
  }

  export type tbfornecedoresCreateOrConnectWithoutTbnfInput = {
    where: tbfornecedoresWhereUniqueInput
    create: XOR<tbfornecedoresCreateWithoutTbnfInput, tbfornecedoresUncheckedCreateWithoutTbnfInput>
  }

  export type tbusuariosCreateWithoutTbnfInput = {
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
    tbmovimentos?: tbmovimentosCreateNestedManyWithoutTbusuariosInput
  }

  export type tbusuariosUncheckedCreateWithoutTbnfInput = {
    idusuario?: number
    usu_login?: string | null
    nome?: string | null
    senha?: string | null
    dtcriacao?: Date | string | null
    usu_admin?: boolean | null
    tbmovimentos?: tbmovimentosUncheckedCreateNestedManyWithoutTbusuariosInput
  }

  export type tbusuariosCreateOrConnectWithoutTbnfInput = {
    where: tbusuariosWhereUniqueInput
    create: XOR<tbusuariosCreateWithoutTbnfInput, tbusuariosUncheckedCreateWithoutTbnfInput>
  }

  export type tbnfitensCreateWithoutTbnfInput = {
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
    tbmovitens?: tbmovitensCreateNestedOneWithoutTbnfitensInput
  }

  export type tbnfitensUncheckedCreateWithoutTbnfInput = {
    idmovimento?: number | null
    seqitem: number
    idproduto: number
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfitensCreateOrConnectWithoutTbnfInput = {
    where: tbnfitensWhereUniqueInput
    create: XOR<tbnfitensCreateWithoutTbnfInput, tbnfitensUncheckedCreateWithoutTbnfInput>
  }

  export type tbnfitensCreateManyTbnfInputEnvelope = {
    data: tbnfitensCreateManyTbnfInput | tbnfitensCreateManyTbnfInput[]
    skipDuplicates?: boolean
  }

  export type tbmovimentosUpsertWithoutTbnfInput = {
    update: XOR<tbmovimentosUpdateWithoutTbnfInput, tbmovimentosUncheckedUpdateWithoutTbnfInput>
    create: XOR<tbmovimentosCreateWithoutTbnfInput, tbmovimentosUncheckedCreateWithoutTbnfInput>
    where?: tbmovimentosWhereInput
  }

  export type tbmovimentosUpdateToOneWithWhereWithoutTbnfInput = {
    where?: tbmovimentosWhereInput
    data: XOR<tbmovimentosUpdateWithoutTbnfInput, tbmovimentosUncheckedUpdateWithoutTbnfInput>
  }

  export type tbmovimentosUpdateWithoutTbnfInput = {
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbfornecedores?: tbfornecedoresUpdateOneWithoutTbmovimentosNestedInput
    tbusuarios?: tbusuariosUpdateOneWithoutTbmovimentosNestedInput
    tbmovitens?: tbmovitensUpdateManyWithoutTbmovimentosNestedInput
  }

  export type tbmovimentosUncheckedUpdateWithoutTbnfInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_alteracao?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbmovitens?: tbmovitensUncheckedUpdateManyWithoutTbmovimentosNestedInput
  }

  export type tbfornecedoresUpsertWithoutTbnfInput = {
    update: XOR<tbfornecedoresUpdateWithoutTbnfInput, tbfornecedoresUncheckedUpdateWithoutTbnfInput>
    create: XOR<tbfornecedoresCreateWithoutTbnfInput, tbfornecedoresUncheckedCreateWithoutTbnfInput>
    where?: tbfornecedoresWhereInput
  }

  export type tbfornecedoresUpdateToOneWithWhereWithoutTbnfInput = {
    where?: tbfornecedoresWhereInput
    data: XOR<tbfornecedoresUpdateWithoutTbnfInput, tbfornecedoresUncheckedUpdateWithoutTbnfInput>
  }

  export type tbfornecedoresUpdateWithoutTbnfInput = {
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    tbmovimentos?: tbmovimentosUpdateManyWithoutTbfornecedoresNestedInput
  }

  export type tbfornecedoresUncheckedUpdateWithoutTbnfInput = {
    idfor?: IntFieldUpdateOperationsInput | number
    nomefor?: NullableStringFieldUpdateOperationsInput | string | null
    fisjur?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjcpf?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableIntFieldUpdateOperationsInput | number | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    tbmovimentos?: tbmovimentosUncheckedUpdateManyWithoutTbfornecedoresNestedInput
  }

  export type tbusuariosUpsertWithoutTbnfInput = {
    update: XOR<tbusuariosUpdateWithoutTbnfInput, tbusuariosUncheckedUpdateWithoutTbnfInput>
    create: XOR<tbusuariosCreateWithoutTbnfInput, tbusuariosUncheckedCreateWithoutTbnfInput>
    where?: tbusuariosWhereInput
  }

  export type tbusuariosUpdateToOneWithWhereWithoutTbnfInput = {
    where?: tbusuariosWhereInput
    data: XOR<tbusuariosUpdateWithoutTbnfInput, tbusuariosUncheckedUpdateWithoutTbnfInput>
  }

  export type tbusuariosUpdateWithoutTbnfInput = {
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbmovimentos?: tbmovimentosUpdateManyWithoutTbusuariosNestedInput
  }

  export type tbusuariosUncheckedUpdateWithoutTbnfInput = {
    idusuario?: IntFieldUpdateOperationsInput | number
    usu_login?: NullableStringFieldUpdateOperationsInput | string | null
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    senha?: NullableStringFieldUpdateOperationsInput | string | null
    dtcriacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usu_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tbmovimentos?: tbmovimentosUncheckedUpdateManyWithoutTbusuariosNestedInput
  }

  export type tbnfitensUpsertWithWhereUniqueWithoutTbnfInput = {
    where: tbnfitensWhereUniqueInput
    update: XOR<tbnfitensUpdateWithoutTbnfInput, tbnfitensUncheckedUpdateWithoutTbnfInput>
    create: XOR<tbnfitensCreateWithoutTbnfInput, tbnfitensUncheckedCreateWithoutTbnfInput>
  }

  export type tbnfitensUpdateWithWhereUniqueWithoutTbnfInput = {
    where: tbnfitensWhereUniqueInput
    data: XOR<tbnfitensUpdateWithoutTbnfInput, tbnfitensUncheckedUpdateWithoutTbnfInput>
  }

  export type tbnfitensUpdateManyWithWhereWithoutTbnfInput = {
    where: tbnfitensScalarWhereInput
    data: XOR<tbnfitensUpdateManyMutationInput, tbnfitensUncheckedUpdateManyWithoutTbnfInput>
  }

  export type tbmovitensCreateWithoutTbnfitensInput = {
    seqitem?: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tblocais?: tblocaisCreateNestedOneWithoutTbmovitensInput
    tbmovimentos: tbmovimentosCreateNestedOneWithoutTbmovitensInput
    tbprodutos: tbprodutosCreateNestedOneWithoutTbmovitensInput
  }

  export type tbmovitensUncheckedCreateWithoutTbnfitensInput = {
    idmovimento: number
    seqitem?: number
    idproduto: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbmovitensCreateOrConnectWithoutTbnfitensInput = {
    where: tbmovitensWhereUniqueInput
    create: XOR<tbmovitensCreateWithoutTbnfitensInput, tbmovitensUncheckedCreateWithoutTbnfitensInput>
  }

  export type tbnfCreateWithoutTbnfitensInput = {
    numnf?: number | null
    serienf?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
    tbmovimentos?: tbmovimentosCreateNestedOneWithoutTbnfInput
    tbfornecedores?: tbfornecedoresCreateNestedOneWithoutTbnfInput
    tbusuarios?: tbusuariosCreateNestedOneWithoutTbnfInput
  }

  export type tbnfUncheckedCreateWithoutTbnfitensInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idfor?: number | null
    idusuario_inclusao?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
  }

  export type tbnfCreateOrConnectWithoutTbnfitensInput = {
    where: tbnfWhereUniqueInput
    create: XOR<tbnfCreateWithoutTbnfitensInput, tbnfUncheckedCreateWithoutTbnfitensInput>
  }

  export type tbmovitensUpsertWithoutTbnfitensInput = {
    update: XOR<tbmovitensUpdateWithoutTbnfitensInput, tbmovitensUncheckedUpdateWithoutTbnfitensInput>
    create: XOR<tbmovitensCreateWithoutTbnfitensInput, tbmovitensUncheckedCreateWithoutTbnfitensInput>
    where?: tbmovitensWhereInput
  }

  export type tbmovitensUpdateToOneWithWhereWithoutTbnfitensInput = {
    where?: tbmovitensWhereInput
    data: XOR<tbmovitensUpdateWithoutTbnfitensInput, tbmovitensUncheckedUpdateWithoutTbnfitensInput>
  }

  export type tbmovitensUpdateWithoutTbnfitensInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tblocais?: tblocaisUpdateOneWithoutTbmovitensNestedInput
    tbmovimentos?: tbmovimentosUpdateOneRequiredWithoutTbmovitensNestedInput
    tbprodutos?: tbprodutosUpdateOneRequiredWithoutTbmovitensNestedInput
  }

  export type tbmovitensUncheckedUpdateWithoutTbnfitensInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfUpsertWithoutTbnfitensInput = {
    update: XOR<tbnfUpdateWithoutTbnfitensInput, tbnfUncheckedUpdateWithoutTbnfitensInput>
    create: XOR<tbnfCreateWithoutTbnfitensInput, tbnfUncheckedCreateWithoutTbnfitensInput>
    where?: tbnfWhereInput
  }

  export type tbnfUpdateToOneWithWhereWithoutTbnfitensInput = {
    where?: tbnfWhereInput
    data: XOR<tbnfUpdateWithoutTbnfitensInput, tbnfUncheckedUpdateWithoutTbnfitensInput>
  }

  export type tbnfUpdateWithoutTbnfitensInput = {
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    tbmovimentos?: tbmovimentosUpdateOneWithoutTbnfNestedInput
    tbfornecedores?: tbfornecedoresUpdateOneWithoutTbnfNestedInput
    tbusuarios?: tbusuariosUpdateOneWithoutTbnfNestedInput
  }

  export type tbnfUncheckedUpdateWithoutTbnfitensInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_inclusao?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbprodutosCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbestoque?: tbestoqueCreateNestedManyWithoutTbprodutosInput
    tbmovitens?: tbmovitensCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput
    tbtiposprodutos?: tbtiposprodutosCreateNestedOneWithoutTbprodutosInput
    tbunidademedida?: tbunidademedidaCreateNestedOneWithoutTbprodutosInput
  }

  export type tbprodutosUncheckedCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    idunidade?: number | null
    quantminima?: number | null
    tbestoque?: tbestoqueUncheckedCreateNestedManyWithoutTbprodutosInput
    tbmovitens?: tbmovitensUncheckedCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput
  }

  export type tbprodutosCreateOrConnectWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput = {
    where: tbprodutosWhereUniqueInput
    create: XOR<tbprodutosCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodutosUncheckedCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput>
  }

  export type tbprodutosCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbestoque?: tbestoqueCreateNestedManyWithoutTbprodutosInput
    tbmovitens?: tbmovitensCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput
    tbtiposprodutos?: tbtiposprodutosCreateNestedOneWithoutTbprodutosInput
    tbunidademedida?: tbunidademedidaCreateNestedOneWithoutTbprodutosInput
  }

  export type tbprodutosUncheckedCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    idunidade?: number | null
    quantminima?: number | null
    tbestoque?: tbestoqueUncheckedCreateNestedManyWithoutTbprodutosInput
    tbmovitens?: tbmovitensUncheckedCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput
  }

  export type tbprodutosCreateOrConnectWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    where: tbprodutosWhereUniqueInput
    create: XOR<tbprodutosCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodutosUncheckedCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput>
  }

  export type tbprodutosUpsertWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput = {
    update: XOR<tbprodutosUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodutosUncheckedUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput>
    create: XOR<tbprodutosCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodutosUncheckedCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput>
    where?: tbprodutosWhereInput
  }

  export type tbprodutosUpdateToOneWithWhereWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput = {
    where?: tbprodutosWhereInput
    data: XOR<tbprodutosUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodutosUncheckedUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput>
  }

  export type tbprodutosUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbestoque?: tbestoqueUpdateManyWithoutTbprodutosNestedInput
    tbmovitens?: tbmovitensUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
    tbtiposprodutos?: tbtiposprodutosUpdateOneWithoutTbprodutosNestedInput
    tbunidademedida?: tbunidademedidaUpdateOneWithoutTbprodutosNestedInput
  }

  export type tbprodutosUncheckedUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbestoque?: tbestoqueUncheckedUpdateManyWithoutTbprodutosNestedInput
    tbmovitens?: tbmovitensUncheckedUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
  }

  export type tbprodutosUpsertWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    update: XOR<tbprodutosUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodutosUncheckedUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput>
    create: XOR<tbprodutosCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodutosUncheckedCreateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput>
    where?: tbprodutosWhereInput
  }

  export type tbprodutosUpdateToOneWithWhereWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    where?: tbprodutosWhereInput
    data: XOR<tbprodutosUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodutosUncheckedUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput>
  }

  export type tbprodutosUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbestoque?: tbestoqueUpdateManyWithoutTbprodutosNestedInput
    tbmovitens?: tbmovitensUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput
    tbtiposprodutos?: tbtiposprodutosUpdateOneWithoutTbprodutosNestedInput
    tbunidademedida?: tbunidademedidaUpdateOneWithoutTbprodutosNestedInput
  }

  export type tbprodutosUncheckedUpdateWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbestoque?: tbestoqueUncheckedUpdateManyWithoutTbprodutosNestedInput
    tbmovitens?: tbmovitensUncheckedUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput
  }

  export type tbestoqueCreateWithoutTbprodutosInput = {
    idestoque?: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
    tblocais?: tblocaisCreateNestedOneWithoutTbestoqueInput
  }

  export type tbestoqueUncheckedCreateWithoutTbprodutosInput = {
    idestoque?: number
    idlocal?: number | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
  }

  export type tbestoqueCreateOrConnectWithoutTbprodutosInput = {
    where: tbestoqueWhereUniqueInput
    create: XOR<tbestoqueCreateWithoutTbprodutosInput, tbestoqueUncheckedCreateWithoutTbprodutosInput>
  }

  export type tbestoqueCreateManyTbprodutosInputEnvelope = {
    data: tbestoqueCreateManyTbprodutosInput | tbestoqueCreateManyTbprodutosInput[]
    skipDuplicates?: boolean
  }

  export type tbmovitensCreateWithoutTbprodutosInput = {
    seqitem?: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tblocais?: tblocaisCreateNestedOneWithoutTbmovitensInput
    tbmovimentos: tbmovimentosCreateNestedOneWithoutTbmovitensInput
    tbnfitens?: tbnfitensCreateNestedManyWithoutTbmovitensInput
  }

  export type tbmovitensUncheckedCreateWithoutTbprodutosInput = {
    idmovimento: number
    seqitem?: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbnfitens?: tbnfitensUncheckedCreateNestedManyWithoutTbmovitensInput
  }

  export type tbmovitensCreateOrConnectWithoutTbprodutosInput = {
    where: tbmovitensWhereUniqueInput
    create: XOR<tbmovitensCreateWithoutTbprodutosInput, tbmovitensUncheckedCreateWithoutTbprodutosInput>
  }

  export type tbmovitensCreateManyTbprodutosInputEnvelope = {
    data: tbmovitensCreateManyTbprodutosInput | tbmovitensCreateManyTbprodutosInput[]
    skipDuplicates?: boolean
  }

  export type tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput = {
    idcomp?: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbprodutos_tbprodcomposicao_idprodutocompTotbprodutos: tbprodutosCreateNestedOneWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosInput
  }

  export type tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput = {
    idcomp?: number
    idprodutocomp: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput = {
    where: tbprodcomposicaoWhereUniqueInput
    create: XOR<tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput>
  }

  export type tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInputEnvelope = {
    data: tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput | tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput[]
    skipDuplicates?: boolean
  }

  export type tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    idcomp?: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    tbprodutos_tbprodcomposicao_idprodutoTotbprodutos: tbprodutosCreateNestedOneWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosInput
  }

  export type tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    idcomp?: number
    idproduto: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoCreateOrConnectWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    where: tbprodcomposicaoWhereUniqueInput
    create: XOR<tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput>
  }

  export type tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInputEnvelope = {
    data: tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput | tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput[]
    skipDuplicates?: boolean
  }

  export type tbtiposprodutosCreateWithoutTbprodutosInput = {
    nometipprod?: string | null
  }

  export type tbtiposprodutosUncheckedCreateWithoutTbprodutosInput = {
    idtipprod?: number
    nometipprod?: string | null
  }

  export type tbtiposprodutosCreateOrConnectWithoutTbprodutosInput = {
    where: tbtiposprodutosWhereUniqueInput
    create: XOR<tbtiposprodutosCreateWithoutTbprodutosInput, tbtiposprodutosUncheckedCreateWithoutTbprodutosInput>
  }

  export type tbunidademedidaCreateWithoutTbprodutosInput = {
    siglaun?: string | null
    nomeunidade?: string | null
  }

  export type tbunidademedidaUncheckedCreateWithoutTbprodutosInput = {
    idunidade?: number
    siglaun?: string | null
    nomeunidade?: string | null
  }

  export type tbunidademedidaCreateOrConnectWithoutTbprodutosInput = {
    where: tbunidademedidaWhereUniqueInput
    create: XOR<tbunidademedidaCreateWithoutTbprodutosInput, tbunidademedidaUncheckedCreateWithoutTbprodutosInput>
  }

  export type tbestoqueUpsertWithWhereUniqueWithoutTbprodutosInput = {
    where: tbestoqueWhereUniqueInput
    update: XOR<tbestoqueUpdateWithoutTbprodutosInput, tbestoqueUncheckedUpdateWithoutTbprodutosInput>
    create: XOR<tbestoqueCreateWithoutTbprodutosInput, tbestoqueUncheckedCreateWithoutTbprodutosInput>
  }

  export type tbestoqueUpdateWithWhereUniqueWithoutTbprodutosInput = {
    where: tbestoqueWhereUniqueInput
    data: XOR<tbestoqueUpdateWithoutTbprodutosInput, tbestoqueUncheckedUpdateWithoutTbprodutosInput>
  }

  export type tbestoqueUpdateManyWithWhereWithoutTbprodutosInput = {
    where: tbestoqueScalarWhereInput
    data: XOR<tbestoqueUpdateManyMutationInput, tbestoqueUncheckedUpdateManyWithoutTbprodutosInput>
  }

  export type tbmovitensUpsertWithWhereUniqueWithoutTbprodutosInput = {
    where: tbmovitensWhereUniqueInput
    update: XOR<tbmovitensUpdateWithoutTbprodutosInput, tbmovitensUncheckedUpdateWithoutTbprodutosInput>
    create: XOR<tbmovitensCreateWithoutTbprodutosInput, tbmovitensUncheckedCreateWithoutTbprodutosInput>
  }

  export type tbmovitensUpdateWithWhereUniqueWithoutTbprodutosInput = {
    where: tbmovitensWhereUniqueInput
    data: XOR<tbmovitensUpdateWithoutTbprodutosInput, tbmovitensUncheckedUpdateWithoutTbprodutosInput>
  }

  export type tbmovitensUpdateManyWithWhereWithoutTbprodutosInput = {
    where: tbmovitensScalarWhereInput
    data: XOR<tbmovitensUpdateManyMutationInput, tbmovitensUncheckedUpdateManyWithoutTbprodutosInput>
  }

  export type tbprodcomposicaoUpsertWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput = {
    where: tbprodcomposicaoWhereUniqueInput
    update: XOR<tbprodcomposicaoUpdateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodcomposicaoUncheckedUpdateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput>
    create: XOR<tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput>
  }

  export type tbprodcomposicaoUpdateWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput = {
    where: tbprodcomposicaoWhereUniqueInput
    data: XOR<tbprodcomposicaoUpdateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput, tbprodcomposicaoUncheckedUpdateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput>
  }

  export type tbprodcomposicaoUpdateManyWithWhereWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput = {
    where: tbprodcomposicaoScalarWhereInput
    data: XOR<tbprodcomposicaoUpdateManyMutationInput, tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput>
  }

  export type tbprodcomposicaoScalarWhereInput = {
    AND?: tbprodcomposicaoScalarWhereInput | tbprodcomposicaoScalarWhereInput[]
    OR?: tbprodcomposicaoScalarWhereInput[]
    NOT?: tbprodcomposicaoScalarWhereInput | tbprodcomposicaoScalarWhereInput[]
    idcomp?: IntFilter<"tbprodcomposicao"> | number
    idproduto?: IntFilter<"tbprodcomposicao"> | number
    idprodutocomp?: IntFilter<"tbprodcomposicao"> | number
    quantidade?: DecimalNullableFilter<"tbprodcomposicao"> | Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoUpsertWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    where: tbprodcomposicaoWhereUniqueInput
    update: XOR<tbprodcomposicaoUpdateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodcomposicaoUncheckedUpdateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput>
    create: XOR<tbprodcomposicaoCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodcomposicaoUncheckedCreateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput>
  }

  export type tbprodcomposicaoUpdateWithWhereUniqueWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    where: tbprodcomposicaoWhereUniqueInput
    data: XOR<tbprodcomposicaoUpdateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput, tbprodcomposicaoUncheckedUpdateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput>
  }

  export type tbprodcomposicaoUpdateManyWithWhereWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    where: tbprodcomposicaoScalarWhereInput
    data: XOR<tbprodcomposicaoUpdateManyMutationInput, tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput>
  }

  export type tbtiposprodutosUpsertWithoutTbprodutosInput = {
    update: XOR<tbtiposprodutosUpdateWithoutTbprodutosInput, tbtiposprodutosUncheckedUpdateWithoutTbprodutosInput>
    create: XOR<tbtiposprodutosCreateWithoutTbprodutosInput, tbtiposprodutosUncheckedCreateWithoutTbprodutosInput>
    where?: tbtiposprodutosWhereInput
  }

  export type tbtiposprodutosUpdateToOneWithWhereWithoutTbprodutosInput = {
    where?: tbtiposprodutosWhereInput
    data: XOR<tbtiposprodutosUpdateWithoutTbprodutosInput, tbtiposprodutosUncheckedUpdateWithoutTbprodutosInput>
  }

  export type tbtiposprodutosUpdateWithoutTbprodutosInput = {
    nometipprod?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbtiposprodutosUncheckedUpdateWithoutTbprodutosInput = {
    idtipprod?: IntFieldUpdateOperationsInput | number
    nometipprod?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbunidademedidaUpsertWithoutTbprodutosInput = {
    update: XOR<tbunidademedidaUpdateWithoutTbprodutosInput, tbunidademedidaUncheckedUpdateWithoutTbprodutosInput>
    create: XOR<tbunidademedidaCreateWithoutTbprodutosInput, tbunidademedidaUncheckedCreateWithoutTbprodutosInput>
    where?: tbunidademedidaWhereInput
  }

  export type tbunidademedidaUpdateToOneWithWhereWithoutTbprodutosInput = {
    where?: tbunidademedidaWhereInput
    data: XOR<tbunidademedidaUpdateWithoutTbprodutosInput, tbunidademedidaUncheckedUpdateWithoutTbprodutosInput>
  }

  export type tbunidademedidaUpdateWithoutTbprodutosInput = {
    siglaun?: NullableStringFieldUpdateOperationsInput | string | null
    nomeunidade?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbunidademedidaUncheckedUpdateWithoutTbprodutosInput = {
    idunidade?: IntFieldUpdateOperationsInput | number
    siglaun?: NullableStringFieldUpdateOperationsInput | string | null
    nomeunidade?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbprodutosCreateWithoutTbtiposprodutosInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbestoque?: tbestoqueCreateNestedManyWithoutTbprodutosInput
    tbmovitens?: tbmovitensCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput
    tbunidademedida?: tbunidademedidaCreateNestedOneWithoutTbprodutosInput
  }

  export type tbprodutosUncheckedCreateWithoutTbtiposprodutosInput = {
    idproduto?: number
    nomeprod?: string | null
    idunidade?: number | null
    quantminima?: number | null
    tbestoque?: tbestoqueUncheckedCreateNestedManyWithoutTbprodutosInput
    tbmovitens?: tbmovitensUncheckedCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput
  }

  export type tbprodutosCreateOrConnectWithoutTbtiposprodutosInput = {
    where: tbprodutosWhereUniqueInput
    create: XOR<tbprodutosCreateWithoutTbtiposprodutosInput, tbprodutosUncheckedCreateWithoutTbtiposprodutosInput>
  }

  export type tbprodutosCreateManyTbtiposprodutosInputEnvelope = {
    data: tbprodutosCreateManyTbtiposprodutosInput | tbprodutosCreateManyTbtiposprodutosInput[]
    skipDuplicates?: boolean
  }

  export type tbprodutosUpsertWithWhereUniqueWithoutTbtiposprodutosInput = {
    where: tbprodutosWhereUniqueInput
    update: XOR<tbprodutosUpdateWithoutTbtiposprodutosInput, tbprodutosUncheckedUpdateWithoutTbtiposprodutosInput>
    create: XOR<tbprodutosCreateWithoutTbtiposprodutosInput, tbprodutosUncheckedCreateWithoutTbtiposprodutosInput>
  }

  export type tbprodutosUpdateWithWhereUniqueWithoutTbtiposprodutosInput = {
    where: tbprodutosWhereUniqueInput
    data: XOR<tbprodutosUpdateWithoutTbtiposprodutosInput, tbprodutosUncheckedUpdateWithoutTbtiposprodutosInput>
  }

  export type tbprodutosUpdateManyWithWhereWithoutTbtiposprodutosInput = {
    where: tbprodutosScalarWhereInput
    data: XOR<tbprodutosUpdateManyMutationInput, tbprodutosUncheckedUpdateManyWithoutTbtiposprodutosInput>
  }

  export type tbprodutosScalarWhereInput = {
    AND?: tbprodutosScalarWhereInput | tbprodutosScalarWhereInput[]
    OR?: tbprodutosScalarWhereInput[]
    NOT?: tbprodutosScalarWhereInput | tbprodutosScalarWhereInput[]
    idproduto?: IntFilter<"tbprodutos"> | number
    nomeprod?: StringNullableFilter<"tbprodutos"> | string | null
    idtipprod?: IntNullableFilter<"tbprodutos"> | number | null
    idunidade?: IntNullableFilter<"tbprodutos"> | number | null
    quantminima?: IntNullableFilter<"tbprodutos"> | number | null
  }

  export type tbprodutosCreateWithoutTbunidademedidaInput = {
    nomeprod?: string | null
    quantminima?: number | null
    tbestoque?: tbestoqueCreateNestedManyWithoutTbprodutosInput
    tbmovitens?: tbmovitensCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput
    tbtiposprodutos?: tbtiposprodutosCreateNestedOneWithoutTbprodutosInput
  }

  export type tbprodutosUncheckedCreateWithoutTbunidademedidaInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    quantminima?: number | null
    tbestoque?: tbestoqueUncheckedCreateNestedManyWithoutTbprodutosInput
    tbmovitens?: tbmovitensUncheckedCreateNestedManyWithoutTbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUncheckedCreateNestedManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput
  }

  export type tbprodutosCreateOrConnectWithoutTbunidademedidaInput = {
    where: tbprodutosWhereUniqueInput
    create: XOR<tbprodutosCreateWithoutTbunidademedidaInput, tbprodutosUncheckedCreateWithoutTbunidademedidaInput>
  }

  export type tbprodutosCreateManyTbunidademedidaInputEnvelope = {
    data: tbprodutosCreateManyTbunidademedidaInput | tbprodutosCreateManyTbunidademedidaInput[]
    skipDuplicates?: boolean
  }

  export type tbprodutosUpsertWithWhereUniqueWithoutTbunidademedidaInput = {
    where: tbprodutosWhereUniqueInput
    update: XOR<tbprodutosUpdateWithoutTbunidademedidaInput, tbprodutosUncheckedUpdateWithoutTbunidademedidaInput>
    create: XOR<tbprodutosCreateWithoutTbunidademedidaInput, tbprodutosUncheckedCreateWithoutTbunidademedidaInput>
  }

  export type tbprodutosUpdateWithWhereUniqueWithoutTbunidademedidaInput = {
    where: tbprodutosWhereUniqueInput
    data: XOR<tbprodutosUpdateWithoutTbunidademedidaInput, tbprodutosUncheckedUpdateWithoutTbunidademedidaInput>
  }

  export type tbprodutosUpdateManyWithWhereWithoutTbunidademedidaInput = {
    where: tbprodutosScalarWhereInput
    data: XOR<tbprodutosUpdateManyMutationInput, tbprodutosUncheckedUpdateManyWithoutTbunidademedidaInput>
  }

  export type tbmovimentosCreateWithoutTbusuariosInput = {
    tipmov?: string | null
    dtinc?: Date | string | null
    tbfornecedores?: tbfornecedoresCreateNestedOneWithoutTbmovimentosInput
    tbmovitens?: tbmovitensCreateNestedManyWithoutTbmovimentosInput
    tbnf?: tbnfCreateNestedOneWithoutTbmovimentosInput
  }

  export type tbmovimentosUncheckedCreateWithoutTbusuariosInput = {
    idmovimento?: number
    tipmov?: string | null
    idfor?: number | null
    dtinc?: Date | string | null
    tbmovitens?: tbmovitensUncheckedCreateNestedManyWithoutTbmovimentosInput
    tbnf?: tbnfUncheckedCreateNestedOneWithoutTbmovimentosInput
  }

  export type tbmovimentosCreateOrConnectWithoutTbusuariosInput = {
    where: tbmovimentosWhereUniqueInput
    create: XOR<tbmovimentosCreateWithoutTbusuariosInput, tbmovimentosUncheckedCreateWithoutTbusuariosInput>
  }

  export type tbmovimentosCreateManyTbusuariosInputEnvelope = {
    data: tbmovimentosCreateManyTbusuariosInput | tbmovimentosCreateManyTbusuariosInput[]
    skipDuplicates?: boolean
  }

  export type tbnfCreateWithoutTbusuariosInput = {
    numnf?: number | null
    serienf?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
    tbmovimentos?: tbmovimentosCreateNestedOneWithoutTbnfInput
    tbfornecedores?: tbfornecedoresCreateNestedOneWithoutTbnfInput
    tbnfitens?: tbnfitensCreateNestedManyWithoutTbnfInput
  }

  export type tbnfUncheckedCreateWithoutTbusuariosInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idfor?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
    tbnfitens?: tbnfitensUncheckedCreateNestedManyWithoutTbnfInput
  }

  export type tbnfCreateOrConnectWithoutTbusuariosInput = {
    where: tbnfWhereUniqueInput
    create: XOR<tbnfCreateWithoutTbusuariosInput, tbnfUncheckedCreateWithoutTbusuariosInput>
  }

  export type tbnfCreateManyTbusuariosInputEnvelope = {
    data: tbnfCreateManyTbusuariosInput | tbnfCreateManyTbusuariosInput[]
    skipDuplicates?: boolean
  }

  export type tbmovimentosUpsertWithWhereUniqueWithoutTbusuariosInput = {
    where: tbmovimentosWhereUniqueInput
    update: XOR<tbmovimentosUpdateWithoutTbusuariosInput, tbmovimentosUncheckedUpdateWithoutTbusuariosInput>
    create: XOR<tbmovimentosCreateWithoutTbusuariosInput, tbmovimentosUncheckedCreateWithoutTbusuariosInput>
  }

  export type tbmovimentosUpdateWithWhereUniqueWithoutTbusuariosInput = {
    where: tbmovimentosWhereUniqueInput
    data: XOR<tbmovimentosUpdateWithoutTbusuariosInput, tbmovimentosUncheckedUpdateWithoutTbusuariosInput>
  }

  export type tbmovimentosUpdateManyWithWhereWithoutTbusuariosInput = {
    where: tbmovimentosScalarWhereInput
    data: XOR<tbmovimentosUpdateManyMutationInput, tbmovimentosUncheckedUpdateManyWithoutTbusuariosInput>
  }

  export type tbnfUpsertWithWhereUniqueWithoutTbusuariosInput = {
    where: tbnfWhereUniqueInput
    update: XOR<tbnfUpdateWithoutTbusuariosInput, tbnfUncheckedUpdateWithoutTbusuariosInput>
    create: XOR<tbnfCreateWithoutTbusuariosInput, tbnfUncheckedCreateWithoutTbusuariosInput>
  }

  export type tbnfUpdateWithWhereUniqueWithoutTbusuariosInput = {
    where: tbnfWhereUniqueInput
    data: XOR<tbnfUpdateWithoutTbusuariosInput, tbnfUncheckedUpdateWithoutTbusuariosInput>
  }

  export type tbnfUpdateManyWithWhereWithoutTbusuariosInput = {
    where: tbnfScalarWhereInput
    data: XOR<tbnfUpdateManyMutationInput, tbnfUncheckedUpdateManyWithoutTbusuariosInput>
  }

  export type tbmovimentosCreateManyTbfornecedoresInput = {
    idmovimento?: number
    tipmov?: string | null
    idusuario_alteracao?: number | null
    dtinc?: Date | string | null
  }

  export type tbnfCreateManyTbfornecedoresInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idusuario_inclusao?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
  }

  export type tbmovimentosUpdateWithoutTbfornecedoresInput = {
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbusuarios?: tbusuariosUpdateOneWithoutTbmovimentosNestedInput
    tbmovitens?: tbmovitensUpdateManyWithoutTbmovimentosNestedInput
    tbnf?: tbnfUpdateOneWithoutTbmovimentosNestedInput
  }

  export type tbmovimentosUncheckedUpdateWithoutTbfornecedoresInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idusuario_alteracao?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbmovitens?: tbmovitensUncheckedUpdateManyWithoutTbmovimentosNestedInput
    tbnf?: tbnfUncheckedUpdateOneWithoutTbmovimentosNestedInput
  }

  export type tbmovimentosUncheckedUpdateManyWithoutTbfornecedoresInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idusuario_alteracao?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbnfUpdateWithoutTbfornecedoresInput = {
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    tbmovimentos?: tbmovimentosUpdateOneWithoutTbnfNestedInput
    tbusuarios?: tbusuariosUpdateOneWithoutTbnfNestedInput
    tbnfitens?: tbnfitensUpdateManyWithoutTbnfNestedInput
  }

  export type tbnfUncheckedUpdateWithoutTbfornecedoresInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_inclusao?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    tbnfitens?: tbnfitensUncheckedUpdateManyWithoutTbnfNestedInput
  }

  export type tbnfUncheckedUpdateManyWithoutTbfornecedoresInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idusuario_inclusao?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbestoqueCreateManyTblocaisInput = {
    idestoque?: number
    idproduto: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
  }

  export type tbmovitensCreateManyTblocaisInput = {
    idmovimento: number
    seqitem?: number
    idproduto: number
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbestoqueUpdateWithoutTblocaisInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbprodutos?: tbprodutosUpdateOneRequiredWithoutTbestoqueNestedInput
  }

  export type tbestoqueUncheckedUpdateWithoutTblocaisInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbestoqueUncheckedUpdateManyWithoutTblocaisInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbmovitensUpdateWithoutTblocaisInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbmovimentos?: tbmovimentosUpdateOneRequiredWithoutTbmovitensNestedInput
    tbprodutos?: tbprodutosUpdateOneRequiredWithoutTbmovitensNestedInput
    tbnfitens?: tbnfitensUpdateManyWithoutTbmovitensNestedInput
  }

  export type tbmovitensUncheckedUpdateWithoutTblocaisInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbnfitens?: tbnfitensUncheckedUpdateManyWithoutTbmovitensNestedInput
  }

  export type tbmovitensUncheckedUpdateManyWithoutTblocaisInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbmovitensCreateManyTbmovimentosInput = {
    seqitem?: number
    idproduto: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbmovitensUpdateWithoutTbmovimentosInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tblocais?: tblocaisUpdateOneWithoutTbmovitensNestedInput
    tbprodutos?: tbprodutosUpdateOneRequiredWithoutTbmovitensNestedInput
    tbnfitens?: tbnfitensUpdateManyWithoutTbmovitensNestedInput
  }

  export type tbmovitensUncheckedUpdateWithoutTbmovimentosInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbnfitens?: tbnfitensUncheckedUpdateManyWithoutTbmovitensNestedInput
  }

  export type tbmovitensUncheckedUpdateManyWithoutTbmovimentosInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfitensCreateManyTbmovitensInput = {
    idnf: number
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfitensUpdateWithoutTbmovitensInput = {
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbnf?: tbnfUpdateOneRequiredWithoutTbnfitensNestedInput
  }

  export type tbnfitensUncheckedUpdateWithoutTbmovitensInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfitensUncheckedUpdateManyWithoutTbmovitensInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfitensCreateManyTbnfInput = {
    idmovimento?: number | null
    seqitem: number
    idproduto: number
    vlrunitario?: Decimal | DecimalJsLike | number | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfitensUpdateWithoutTbnfInput = {
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbmovitens?: tbmovitensUpdateOneWithoutTbnfitensNestedInput
  }

  export type tbnfitensUncheckedUpdateWithoutTbnfInput = {
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbnfitensUncheckedUpdateManyWithoutTbnfInput = {
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    seqitem?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    vlrunitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vlrtotitem?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbestoqueCreateManyTbprodutosInput = {
    idestoque?: number
    idlocal?: number | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
    dtinc?: Date | string | null
  }

  export type tbmovitensCreateManyTbprodutosInput = {
    idmovimento: number
    seqitem?: number
    idlocal?: number | null
    dtinc?: Date | string | null
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput = {
    idcomp?: number
    idprodutocomp: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoCreateManyTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    idcomp?: number
    idproduto: number
    quantidade?: Decimal | DecimalJsLike | number | string | null
  }

  export type tbestoqueUpdateWithoutTbprodutosInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tblocais?: tblocaisUpdateOneWithoutTbestoqueNestedInput
  }

  export type tbestoqueUncheckedUpdateWithoutTbprodutosInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbestoqueUncheckedUpdateManyWithoutTbprodutosInput = {
    idestoque?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbmovitensUpdateWithoutTbprodutosInput = {
    seqitem?: IntFieldUpdateOperationsInput | number
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tblocais?: tblocaisUpdateOneWithoutTbmovitensNestedInput
    tbmovimentos?: tbmovimentosUpdateOneRequiredWithoutTbmovitensNestedInput
    tbnfitens?: tbnfitensUpdateManyWithoutTbmovitensNestedInput
  }

  export type tbmovitensUncheckedUpdateWithoutTbprodutosInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbnfitens?: tbnfitensUncheckedUpdateManyWithoutTbmovitensNestedInput
  }

  export type tbmovitensUncheckedUpdateManyWithoutTbprodutosInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    seqitem?: IntFieldUpdateOperationsInput | number
    idlocal?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoUpdateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbprodutos_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodutosUpdateOneRequiredWithoutTbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
  }

  export type tbprodcomposicaoUncheckedUpdateWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    idprodutocomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    idprodutocomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoUpdateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tbprodutos_tbprodcomposicao_idprodutoTotbprodutos?: tbprodutosUpdateOneRequiredWithoutTbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutosNestedInput
  }

  export type tbprodcomposicaoUncheckedUpdateWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosInput = {
    idcomp?: IntFieldUpdateOperationsInput | number
    idproduto?: IntFieldUpdateOperationsInput | number
    quantidade?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tbprodutosCreateManyTbtiposprodutosInput = {
    idproduto?: number
    nomeprod?: string | null
    idunidade?: number | null
    quantminima?: number | null
  }

  export type tbprodutosUpdateWithoutTbtiposprodutosInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbestoque?: tbestoqueUpdateManyWithoutTbprodutosNestedInput
    tbmovitens?: tbmovitensUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
    tbunidademedida?: tbunidademedidaUpdateOneWithoutTbprodutosNestedInput
  }

  export type tbprodutosUncheckedUpdateWithoutTbtiposprodutosInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbestoque?: tbestoqueUncheckedUpdateManyWithoutTbprodutosNestedInput
    tbmovitens?: tbmovitensUncheckedUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
  }

  export type tbprodutosUncheckedUpdateManyWithoutTbtiposprodutosInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idunidade?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbprodutosCreateManyTbunidademedidaInput = {
    idproduto?: number
    nomeprod?: string | null
    idtipprod?: number | null
    quantminima?: number | null
  }

  export type tbprodutosUpdateWithoutTbunidademedidaInput = {
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbestoque?: tbestoqueUpdateManyWithoutTbprodutosNestedInput
    tbmovitens?: tbmovitensUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
    tbtiposprodutos?: tbtiposprodutosUpdateOneWithoutTbprodutosNestedInput
  }

  export type tbprodutosUncheckedUpdateWithoutTbunidademedidaInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
    tbestoque?: tbestoqueUncheckedUpdateManyWithoutTbprodutosNestedInput
    tbmovitens?: tbmovitensUncheckedUpdateManyWithoutTbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutoTotbprodutos?: tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutoTotbprodutosNestedInput
    tbprodcomposicao_tbprodcomposicao_idprodutocompTotbprodutos?: tbprodcomposicaoUncheckedUpdateManyWithoutTbprodutos_tbprodcomposicao_idprodutocompTotbprodutosNestedInput
  }

  export type tbprodutosUncheckedUpdateManyWithoutTbunidademedidaInput = {
    idproduto?: IntFieldUpdateOperationsInput | number
    nomeprod?: NullableStringFieldUpdateOperationsInput | string | null
    idtipprod?: NullableIntFieldUpdateOperationsInput | number | null
    quantminima?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbmovimentosCreateManyTbusuariosInput = {
    idmovimento?: number
    tipmov?: string | null
    idfor?: number | null
    dtinc?: Date | string | null
  }

  export type tbnfCreateManyTbusuariosInput = {
    idnf?: number
    numnf?: number | null
    idmovimento?: number | null
    serienf?: number | null
    idfor?: number | null
    dtemissao?: Date | string | null
    vlrtotal?: Decimal | DecimalJsLike | number | string | null
    observacao?: string | null
  }

  export type tbmovimentosUpdateWithoutTbusuariosInput = {
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbfornecedores?: tbfornecedoresUpdateOneWithoutTbmovimentosNestedInput
    tbmovitens?: tbmovitensUpdateManyWithoutTbmovimentosNestedInput
    tbnf?: tbnfUpdateOneWithoutTbmovimentosNestedInput
  }

  export type tbmovimentosUncheckedUpdateWithoutTbusuariosInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbmovitens?: tbmovitensUncheckedUpdateManyWithoutTbmovimentosNestedInput
    tbnf?: tbnfUncheckedUpdateOneWithoutTbmovimentosNestedInput
  }

  export type tbmovimentosUncheckedUpdateManyWithoutTbusuariosInput = {
    idmovimento?: IntFieldUpdateOperationsInput | number
    tipmov?: NullableStringFieldUpdateOperationsInput | string | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    dtinc?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbnfUpdateWithoutTbusuariosInput = {
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    tbmovimentos?: tbmovimentosUpdateOneWithoutTbnfNestedInput
    tbfornecedores?: tbfornecedoresUpdateOneWithoutTbnfNestedInput
    tbnfitens?: tbnfitensUpdateManyWithoutTbnfNestedInput
  }

  export type tbnfUncheckedUpdateWithoutTbusuariosInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
    tbnfitens?: tbnfitensUncheckedUpdateManyWithoutTbnfNestedInput
  }

  export type tbnfUncheckedUpdateManyWithoutTbusuariosInput = {
    idnf?: IntFieldUpdateOperationsInput | number
    numnf?: NullableIntFieldUpdateOperationsInput | number | null
    idmovimento?: NullableIntFieldUpdateOperationsInput | number | null
    serienf?: NullableIntFieldUpdateOperationsInput | number | null
    idfor?: NullableIntFieldUpdateOperationsInput | number | null
    dtemissao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vlrtotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    observacao?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use TbfornecedoresCountOutputTypeDefaultArgs instead
     */
    export type TbfornecedoresCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbfornecedoresCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TblocaisCountOutputTypeDefaultArgs instead
     */
    export type TblocaisCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TblocaisCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbmovimentosCountOutputTypeDefaultArgs instead
     */
    export type TbmovimentosCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbmovimentosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbmovitensCountOutputTypeDefaultArgs instead
     */
    export type TbmovitensCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbmovitensCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbnfCountOutputTypeDefaultArgs instead
     */
    export type TbnfCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbnfCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbprodutosCountOutputTypeDefaultArgs instead
     */
    export type TbprodutosCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbprodutosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbtiposprodutosCountOutputTypeDefaultArgs instead
     */
    export type TbtiposprodutosCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbtiposprodutosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbunidademedidaCountOutputTypeDefaultArgs instead
     */
    export type TbunidademedidaCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbunidademedidaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TbusuariosCountOutputTypeDefaultArgs instead
     */
    export type TbusuariosCountOutputTypeArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = TbusuariosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbestoqueDefaultArgs instead
     */
    export type tbestoqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbestoqueDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbfornecedoresDefaultArgs instead
     */
    export type tbfornecedoresArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbfornecedoresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tblocaisDefaultArgs instead
     */
    export type tblocaisArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tblocaisDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbmovimentosDefaultArgs instead
     */
    export type tbmovimentosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbmovimentosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbmovitensDefaultArgs instead
     */
    export type tbmovitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbmovitensDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbnfDefaultArgs instead
     */
    export type tbnfArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbnfDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbnfitensDefaultArgs instead
     */
    export type tbnfitensArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbnfitensDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbprodcomposicaoDefaultArgs instead
     */
    export type tbprodcomposicaoArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbprodcomposicaoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbprodutosDefaultArgs instead
     */
    export type tbprodutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbprodutosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbtiposprodutosDefaultArgs instead
     */
    export type tbtiposprodutosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbtiposprodutosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbunidademedidaDefaultArgs instead
     */
    export type tbunidademedidaArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbunidademedidaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbusuariosDefaultArgs instead
     */
    export type tbusuariosArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = tbusuariosDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}